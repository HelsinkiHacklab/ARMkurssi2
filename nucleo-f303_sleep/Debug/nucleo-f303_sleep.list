
nucleo-f303_sleep.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000610c  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000057c  080062ac  080062ac  000162ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006828  08006828  00020070  2**0
                  CONTENTS
  4 .ARM          00000000  08006828  08006828  00020070  2**0
                  CONTENTS
  5 .preinit_array 00000000  08006828  08006828  00020070  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  08006828  08006828  00016828  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000008  08006830  08006830  00016830  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000070  20000000  08006838  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001f0  20000070  080068a8  00020070  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000260  080068a8  00020260  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020070  2**0
                  CONTENTS, READONLY
 12 .debug_info   00013d55  00000000  00000000  000200a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00003349  00000000  00000000  00033df5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000e28  00000000  00000000  00037140  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000d00  00000000  00000000  00037f68  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000259b0  00000000  00000000  00038c68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00010bc4  00000000  00000000  0005e618  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000d110e  00000000  00000000  0006f1dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  001402ea  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000451c  00000000  00000000  00140340  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000070 	.word	0x20000070
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08006294 	.word	0x08006294

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000074 	.word	0x20000074
 80001dc:	08006294 	.word	0x08006294

080001e0 <strlen>:
 80001e0:	4603      	mov	r3, r0
 80001e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001e6:	2a00      	cmp	r2, #0
 80001e8:	d1fb      	bne.n	80001e2 <strlen+0x2>
 80001ea:	1a18      	subs	r0, r3, r0
 80001ec:	3801      	subs	r0, #1
 80001ee:	4770      	bx	lr

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <MX_GPIO_Init>:
 8000290:	b580      	push	{r7, lr}
 8000292:	b08a      	sub	sp, #40	; 0x28
 8000294:	af00      	add	r7, sp, #0
 8000296:	f107 0314 	add.w	r3, r7, #20
 800029a:	2200      	movs	r2, #0
 800029c:	601a      	str	r2, [r3, #0]
 800029e:	605a      	str	r2, [r3, #4]
 80002a0:	609a      	str	r2, [r3, #8]
 80002a2:	60da      	str	r2, [r3, #12]
 80002a4:	611a      	str	r2, [r3, #16]
 80002a6:	4b39      	ldr	r3, [pc, #228]	; (800038c <MX_GPIO_Init+0xfc>)
 80002a8:	695b      	ldr	r3, [r3, #20]
 80002aa:	4a38      	ldr	r2, [pc, #224]	; (800038c <MX_GPIO_Init+0xfc>)
 80002ac:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 80002b0:	6153      	str	r3, [r2, #20]
 80002b2:	4b36      	ldr	r3, [pc, #216]	; (800038c <MX_GPIO_Init+0xfc>)
 80002b4:	695b      	ldr	r3, [r3, #20]
 80002b6:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80002ba:	613b      	str	r3, [r7, #16]
 80002bc:	693b      	ldr	r3, [r7, #16]
 80002be:	4b33      	ldr	r3, [pc, #204]	; (800038c <MX_GPIO_Init+0xfc>)
 80002c0:	695b      	ldr	r3, [r3, #20]
 80002c2:	4a32      	ldr	r2, [pc, #200]	; (800038c <MX_GPIO_Init+0xfc>)
 80002c4:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80002c8:	6153      	str	r3, [r2, #20]
 80002ca:	4b30      	ldr	r3, [pc, #192]	; (800038c <MX_GPIO_Init+0xfc>)
 80002cc:	695b      	ldr	r3, [r3, #20]
 80002ce:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80002d2:	60fb      	str	r3, [r7, #12]
 80002d4:	68fb      	ldr	r3, [r7, #12]
 80002d6:	4b2d      	ldr	r3, [pc, #180]	; (800038c <MX_GPIO_Init+0xfc>)
 80002d8:	695b      	ldr	r3, [r3, #20]
 80002da:	4a2c      	ldr	r2, [pc, #176]	; (800038c <MX_GPIO_Init+0xfc>)
 80002dc:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80002e0:	6153      	str	r3, [r2, #20]
 80002e2:	4b2a      	ldr	r3, [pc, #168]	; (800038c <MX_GPIO_Init+0xfc>)
 80002e4:	695b      	ldr	r3, [r3, #20]
 80002e6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80002ea:	60bb      	str	r3, [r7, #8]
 80002ec:	68bb      	ldr	r3, [r7, #8]
 80002ee:	4b27      	ldr	r3, [pc, #156]	; (800038c <MX_GPIO_Init+0xfc>)
 80002f0:	695b      	ldr	r3, [r3, #20]
 80002f2:	4a26      	ldr	r2, [pc, #152]	; (800038c <MX_GPIO_Init+0xfc>)
 80002f4:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80002f8:	6153      	str	r3, [r2, #20]
 80002fa:	4b24      	ldr	r3, [pc, #144]	; (800038c <MX_GPIO_Init+0xfc>)
 80002fc:	695b      	ldr	r3, [r3, #20]
 80002fe:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8000302:	607b      	str	r3, [r7, #4]
 8000304:	687b      	ldr	r3, [r7, #4]
 8000306:	2200      	movs	r2, #0
 8000308:	2120      	movs	r1, #32
 800030a:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800030e:	f002 f85b 	bl	80023c8 <HAL_GPIO_WritePin>
 8000312:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000316:	617b      	str	r3, [r7, #20]
 8000318:	4b1d      	ldr	r3, [pc, #116]	; (8000390 <MX_GPIO_Init+0x100>)
 800031a:	61bb      	str	r3, [r7, #24]
 800031c:	2300      	movs	r3, #0
 800031e:	61fb      	str	r3, [r7, #28]
 8000320:	f107 0314 	add.w	r3, r7, #20
 8000324:	4619      	mov	r1, r3
 8000326:	481b      	ldr	r0, [pc, #108]	; (8000394 <MX_GPIO_Init+0x104>)
 8000328:	f001 fec4 	bl	80020b4 <HAL_GPIO_Init>
 800032c:	2301      	movs	r3, #1
 800032e:	617b      	str	r3, [r7, #20]
 8000330:	4b19      	ldr	r3, [pc, #100]	; (8000398 <MX_GPIO_Init+0x108>)
 8000332:	61bb      	str	r3, [r7, #24]
 8000334:	2302      	movs	r3, #2
 8000336:	61fb      	str	r3, [r7, #28]
 8000338:	f107 0314 	add.w	r3, r7, #20
 800033c:	4619      	mov	r1, r3
 800033e:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000342:	f001 feb7 	bl	80020b4 <HAL_GPIO_Init>
 8000346:	2320      	movs	r3, #32
 8000348:	617b      	str	r3, [r7, #20]
 800034a:	2301      	movs	r3, #1
 800034c:	61bb      	str	r3, [r7, #24]
 800034e:	2300      	movs	r3, #0
 8000350:	61fb      	str	r3, [r7, #28]
 8000352:	2300      	movs	r3, #0
 8000354:	623b      	str	r3, [r7, #32]
 8000356:	f107 0314 	add.w	r3, r7, #20
 800035a:	4619      	mov	r1, r3
 800035c:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000360:	f001 fea8 	bl	80020b4 <HAL_GPIO_Init>
 8000364:	2200      	movs	r2, #0
 8000366:	2100      	movs	r1, #0
 8000368:	2006      	movs	r0, #6
 800036a:	f001 fde8 	bl	8001f3e <HAL_NVIC_SetPriority>
 800036e:	2006      	movs	r0, #6
 8000370:	f001 fe01 	bl	8001f76 <HAL_NVIC_EnableIRQ>
 8000374:	2200      	movs	r2, #0
 8000376:	2100      	movs	r1, #0
 8000378:	2028      	movs	r0, #40	; 0x28
 800037a:	f001 fde0 	bl	8001f3e <HAL_NVIC_SetPriority>
 800037e:	2028      	movs	r0, #40	; 0x28
 8000380:	f001 fdf9 	bl	8001f76 <HAL_NVIC_EnableIRQ>
 8000384:	bf00      	nop
 8000386:	3728      	adds	r7, #40	; 0x28
 8000388:	46bd      	mov	sp, r7
 800038a:	bd80      	pop	{r7, pc}
 800038c:	40021000 	.word	0x40021000
 8000390:	10210000 	.word	0x10210000
 8000394:	48000800 	.word	0x48000800
 8000398:	10110000 	.word	0x10110000

0800039c <_ZN7CLIMenu8menuItemC1EcPcPFvcE>:
namespace CLIMenu {

typedef void menuItemHandler(char _selector );

struct menuItem {
	menuItem( char _selector, char *_prompt, menuItemHandler *_handler ) : selector(_selector), prompt(_prompt), handler(_handler) {};
 800039c:	b480      	push	{r7}
 800039e:	b085      	sub	sp, #20
 80003a0:	af00      	add	r7, sp, #0
 80003a2:	60f8      	str	r0, [r7, #12]
 80003a4:	607a      	str	r2, [r7, #4]
 80003a6:	603b      	str	r3, [r7, #0]
 80003a8:	460b      	mov	r3, r1
 80003aa:	72fb      	strb	r3, [r7, #11]
 80003ac:	68fb      	ldr	r3, [r7, #12]
 80003ae:	7afa      	ldrb	r2, [r7, #11]
 80003b0:	701a      	strb	r2, [r3, #0]
 80003b2:	68fb      	ldr	r3, [r7, #12]
 80003b4:	687a      	ldr	r2, [r7, #4]
 80003b6:	605a      	str	r2, [r3, #4]
 80003b8:	68fb      	ldr	r3, [r7, #12]
 80003ba:	683a      	ldr	r2, [r7, #0]
 80003bc:	609a      	str	r2, [r3, #8]
 80003be:	68fb      	ldr	r3, [r7, #12]
 80003c0:	4618      	mov	r0, r3
 80003c2:	3714      	adds	r7, #20
 80003c4:	46bd      	mov	sp, r7
 80003c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003ca:	4770      	bx	lr

080003cc <_read>:
// funktioiden kutsukonventio on erilainen kuin perus-C kielessä.
// Tällä saadaan kääntäjä kutsumaan C-kielisiä binäärejä C-kielen säännöillä
extern "C" {
#include  <sys/unistd.h> // STDOUT_FILENO, STDERR_FILENO

int _read(int fd, char *ptr, int len) {
 80003cc:	b580      	push	{r7, lr}
 80003ce:	b084      	sub	sp, #16
 80003d0:	af00      	add	r7, sp, #0
 80003d2:	60f8      	str	r0, [r7, #12]
 80003d4:	60b9      	str	r1, [r7, #8]
 80003d6:	607a      	str	r2, [r7, #4]
	if (fd == STDIN_FILENO ) {
 80003d8:	68fb      	ldr	r3, [r7, #12]
 80003da:	2b00      	cmp	r3, #0
 80003dc:	d10d      	bne.n	80003fa <_read+0x2e>
		HAL_UART_Receive(&huart2, (uint8_t *) ptr, 1, HAL_MAX_DELAY);
 80003de:	f04f 33ff 	mov.w	r3, #4294967295
 80003e2:	2201      	movs	r2, #1
 80003e4:	68b9      	ldr	r1, [r7, #8]
 80003e6:	4807      	ldr	r0, [pc, #28]	; (8000404 <_read+0x38>)
 80003e8:	f003 ff50 	bl	800428c <HAL_UART_Receive>
	    HAL_UART_Transmit(&huart2, (uint8_t *) ptr, 1, HAL_MAX_DELAY);
 80003ec:	f04f 33ff 	mov.w	r3, #4294967295
 80003f0:	2201      	movs	r2, #1
 80003f2:	68b9      	ldr	r1, [r7, #8]
 80003f4:	4803      	ldr	r0, [pc, #12]	; (8000404 <_read+0x38>)
 80003f6:	f003 feb5 	bl	8004164 <HAL_UART_Transmit>
	}
	return 1;
 80003fa:	2301      	movs	r3, #1
}
 80003fc:	4618      	mov	r0, r3
 80003fe:	3710      	adds	r7, #16
 8000400:	46bd      	mov	sp, r7
 8000402:	bd80      	pop	{r7, pc}
 8000404:	200000ac 	.word	0x200000ac

08000408 <_write>:

int _write(int fd, char* ptr, int len) {
 8000408:	b580      	push	{r7, lr}
 800040a:	b086      	sub	sp, #24
 800040c:	af00      	add	r7, sp, #0
 800040e:	60f8      	str	r0, [r7, #12]
 8000410:	60b9      	str	r1, [r7, #8]
 8000412:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef hstatus;

  if (fd == STDOUT_FILENO || fd == STDERR_FILENO) {
 8000414:	68fb      	ldr	r3, [r7, #12]
 8000416:	2b01      	cmp	r3, #1
 8000418:	d002      	beq.n	8000420 <_write+0x18>
 800041a:	68fb      	ldr	r3, [r7, #12]
 800041c:	2b02      	cmp	r3, #2
 800041e:	d110      	bne.n	8000442 <_write+0x3a>
    hstatus = HAL_UART_Transmit(&huart2, (uint8_t *) ptr, len, HAL_MAX_DELAY);
 8000420:	687b      	ldr	r3, [r7, #4]
 8000422:	b29a      	uxth	r2, r3
 8000424:	f04f 33ff 	mov.w	r3, #4294967295
 8000428:	68b9      	ldr	r1, [r7, #8]
 800042a:	480b      	ldr	r0, [pc, #44]	; (8000458 <_write+0x50>)
 800042c:	f003 fe9a 	bl	8004164 <HAL_UART_Transmit>
 8000430:	4603      	mov	r3, r0
 8000432:	75fb      	strb	r3, [r7, #23]
    if (hstatus == HAL_OK)
 8000434:	7dfb      	ldrb	r3, [r7, #23]
 8000436:	2b00      	cmp	r3, #0
 8000438:	d101      	bne.n	800043e <_write+0x36>
      return len;
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	e008      	b.n	8000450 <_write+0x48>
    else
      return EIO;
 800043e:	2305      	movs	r3, #5
 8000440:	e006      	b.n	8000450 <_write+0x48>
  }
  errno = EBADF;
 8000442:	f004 fe99 	bl	8005178 <__errno>
 8000446:	4603      	mov	r3, r0
 8000448:	2209      	movs	r2, #9
 800044a:	601a      	str	r2, [r3, #0]
  return -1;
 800044c:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000450:	4618      	mov	r0, r3
 8000452:	3718      	adds	r7, #24
 8000454:	46bd      	mov	sp, r7
 8000456:	bd80      	pop	{r7, pc}
 8000458:	200000ac 	.word	0x200000ac

0800045c <_Z23disableAllWakeupSourcesv>:
	{'8', "Fill heap memory block with successive bytes", setBackupMemory}
};

// Tällä funktiolla kielletään keskeytykset kaikista demossa käytetyistä herätelähteistä
// Kukin heräte aktivoidaan erikseen aina kun siirrytään virransäästötilaan ja herätystapa valitaan.
void disableAllWakeupSources() {
 800045c:	b580      	push	{r7, lr}
 800045e:	af00      	add	r7, sp, #0
	HAL_RTCEx_DeactivateWakeUpTimer(&hrtc);
 8000460:	4809      	ldr	r0, [pc, #36]	; (8000488 <_Z23disableAllWakeupSourcesv+0x2c>)
 8000462:	f003 fd79 	bl	8003f58 <HAL_RTCEx_DeactivateWakeUpTimer>
	HAL_NVIC_DisableIRQ(EXTI0_IRQn);
 8000466:	2006      	movs	r0, #6
 8000468:	f001 fd93 	bl	8001f92 <HAL_NVIC_DisableIRQ>
	HAL_NVIC_DisableIRQ(EXTI15_10_IRQn);
 800046c:	2028      	movs	r0, #40	; 0x28
 800046e:	f001 fd90 	bl	8001f92 <HAL_NVIC_DisableIRQ>
	HAL_NVIC_DisableIRQ(RTC_WKUP_IRQn);
 8000472:	2003      	movs	r0, #3
 8000474:	f001 fd8d 	bl	8001f92 <HAL_NVIC_DisableIRQ>
	// nollataan wakeup-flag joka RTC on asettanut.
	// Tämä pitää nollata itse
	__HAL_PWR_CLEAR_FLAG(PWR_FLAG_WU);
 8000478:	4b04      	ldr	r3, [pc, #16]	; (800048c <_Z23disableAllWakeupSourcesv+0x30>)
 800047a:	681b      	ldr	r3, [r3, #0]
 800047c:	4a03      	ldr	r2, [pc, #12]	; (800048c <_Z23disableAllWakeupSourcesv+0x30>)
 800047e:	f043 0304 	orr.w	r3, r3, #4
 8000482:	6013      	str	r3, [r2, #0]
}
 8000484:	bf00      	nop
 8000486:	bd80      	pop	{r7, pc}
 8000488:	2000008c 	.word	0x2000008c
 800048c:	40007000 	.word	0x40007000

08000490 <_Z12sleepHandlerc>:

// Sleep Mode: CPU core pysähtyy. Muisti ja rekisterit säilyvät
// Osa oheislaitteista säilyy aktiivisina ja ne voivat herättää systeemin
// Low Power regulator: oheislaitteet toimivat alennetulla kellotaajuudella
void sleepHandler( char _selector ) {
 8000490:	b580      	push	{r7, lr}
 8000492:	b082      	sub	sp, #8
 8000494:	af00      	add	r7, sp, #0
 8000496:	4603      	mov	r3, r0
 8000498:	71fb      	strb	r3, [r7, #7]
	wakeupMenu.run( false );
 800049a:	2100      	movs	r1, #0
 800049c:	4810      	ldr	r0, [pc, #64]	; (80004e0 <_Z12sleepHandlerc+0x50>)
 800049e:	f000 fbc1 	bl	8000c24 <_ZN7CLIMenu4menu3runEb>
	printf("Entering Sleep mode now, Good Night!\r\n");
 80004a2:	4810      	ldr	r0, [pc, #64]	; (80004e4 <_Z12sleepHandlerc+0x54>)
 80004a4:	f005 f9d0 	bl	8005848 <puts>
	HAL_Delay(5);
 80004a8:	2005      	movs	r0, #5
 80004aa:	f001 fc05 	bl	8001cb8 <HAL_Delay>
	HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 80004ae:	2200      	movs	r2, #0
 80004b0:	2120      	movs	r1, #32
 80004b2:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80004b6:	f001 ff87 	bl	80023c8 <HAL_GPIO_WritePin>
	HAL_SuspendTick();
 80004ba:	f001 fc21 	bl	8001d00 <HAL_SuspendTick>
	HAL_PWR_EnterSLEEPMode( PWR_LOWPOWERREGULATOR_ON, PWR_SLEEPENTRY_WFI );
 80004be:	2101      	movs	r1, #1
 80004c0:	2001      	movs	r0, #1
 80004c2:	f001 ffdd 	bl	8002480 <HAL_PWR_EnterSLEEPMode>
	disableAllWakeupSources();
 80004c6:	f7ff ffc9 	bl	800045c <_Z23disableAllWakeupSourcesv>
	HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_SET);
 80004ca:	2201      	movs	r2, #1
 80004cc:	2120      	movs	r1, #32
 80004ce:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80004d2:	f001 ff79 	bl	80023c8 <HAL_GPIO_WritePin>
}
 80004d6:	bf00      	nop
 80004d8:	3708      	adds	r7, #8
 80004da:	46bd      	mov	sp, r7
 80004dc:	bd80      	pop	{r7, pc}
 80004de:	bf00      	nop
 80004e0:	20000154 	.word	0x20000154
 80004e4:	080062ac 	.word	0x080062ac

080004e8 <_Z11stopHandlerc>:

// Stop Mode: CPU core pysähtyy. Muisti ja rekisterit säilyvät
// Useimmat oheislaitteet pysähtyvät
// Reaaliaikakello on mahdollista pysäyttää virran säästämiseksi
void stopHandler( char _selector ) {
 80004e8:	b580      	push	{r7, lr}
 80004ea:	b082      	sub	sp, #8
 80004ec:	af00      	add	r7, sp, #0
 80004ee:	4603      	mov	r3, r0
 80004f0:	71fb      	strb	r3, [r7, #7]
	wakeupMenu.run( false );
 80004f2:	2100      	movs	r1, #0
 80004f4:	4811      	ldr	r0, [pc, #68]	; (800053c <_Z11stopHandlerc+0x54>)
 80004f6:	f000 fb95 	bl	8000c24 <_ZN7CLIMenu4menu3runEb>
	printf("Entering Stop mode now, Good Night!\r\n");
 80004fa:	4811      	ldr	r0, [pc, #68]	; (8000540 <_Z11stopHandlerc+0x58>)
 80004fc:	f005 f9a4 	bl	8005848 <puts>
	HAL_Delay(5);
 8000500:	2005      	movs	r0, #5
 8000502:	f001 fbd9 	bl	8001cb8 <HAL_Delay>
	HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 8000506:	2200      	movs	r2, #0
 8000508:	2120      	movs	r1, #32
 800050a:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800050e:	f001 ff5b 	bl	80023c8 <HAL_GPIO_WritePin>
	HAL_SuspendTick();
 8000512:	f001 fbf5 	bl	8001d00 <HAL_SuspendTick>
	HAL_PWR_EnterSTOPMode( PWR_LOWPOWERREGULATOR_ON, PWR_SLEEPENTRY_WFI );
 8000516:	2101      	movs	r1, #1
 8000518:	2001      	movs	r0, #1
 800051a:	f001 ffcd 	bl	80024b8 <HAL_PWR_EnterSTOPMode>
	SystemClock_Config();
 800051e:	f000 f98f 	bl	8000840 <_Z18SystemClock_Configv>
	disableAllWakeupSources();
 8000522:	f7ff ff9b 	bl	800045c <_Z23disableAllWakeupSourcesv>
	HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_SET);
 8000526:	2201      	movs	r2, #1
 8000528:	2120      	movs	r1, #32
 800052a:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800052e:	f001 ff4b 	bl	80023c8 <HAL_GPIO_WritePin>
}
 8000532:	bf00      	nop
 8000534:	3708      	adds	r7, #8
 8000536:	46bd      	mov	sp, r7
 8000538:	bd80      	pop	{r7, pc}
 800053a:	bf00      	nop
 800053c:	20000154 	.word	0x20000154
 8000540:	080062d4 	.word	0x080062d4

08000544 <_Z14standbyHandlerc>:

// Standby Mode: CPU Core pysähtyy, oheislaiteiden kellot pysähtyvät
// Muisti ja rekisterit tuhoutuvat.
// Reaaliaikakello pyörii.
void standbyHandler( char _selector ) {
 8000544:	b580      	push	{r7, lr}
 8000546:	b082      	sub	sp, #8
 8000548:	af00      	add	r7, sp, #0
 800054a:	4603      	mov	r3, r0
 800054c:	71fb      	strb	r3, [r7, #7]
	wakeupMenu.run( false );
 800054e:	2100      	movs	r1, #0
 8000550:	480b      	ldr	r0, [pc, #44]	; (8000580 <_Z14standbyHandlerc+0x3c>)
 8000552:	f000 fb67 	bl	8000c24 <_ZN7CLIMenu4menu3runEb>
	printf("Entering Standby mode now, Farewell and see you in the next life!\r\n");
 8000556:	480b      	ldr	r0, [pc, #44]	; (8000584 <_Z14standbyHandlerc+0x40>)
 8000558:	f005 f976 	bl	8005848 <puts>
	HAL_Delay(5);
 800055c:	2005      	movs	r0, #5
 800055e:	f001 fbab 	bl	8001cb8 <HAL_Delay>
	HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 8000562:	2200      	movs	r2, #0
 8000564:	2120      	movs	r1, #32
 8000566:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800056a:	f001 ff2d 	bl	80023c8 <HAL_GPIO_WritePin>
	HAL_SuspendTick();
 800056e:	f001 fbc7 	bl	8001d00 <HAL_SuspendTick>
	HAL_PWR_EnterSTANDBYMode();
 8000572:	f001 ffd5 	bl	8002520 <HAL_PWR_EnterSTANDBYMode>
}
 8000576:	bf00      	nop
 8000578:	3708      	adds	r7, #8
 800057a:	46bd      	mov	sp, r7
 800057c:	bd80      	pop	{r7, pc}
 800057e:	bf00      	nop
 8000580:	20000154 	.word	0x20000154
 8000584:	080062fc 	.word	0x080062fc

08000588 <_Z13backupHandlerc>:

void backupHandler( char _selector ) {
 8000588:	b580      	push	{r7, lr}
 800058a:	b082      	sub	sp, #8
 800058c:	af00      	add	r7, sp, #0
 800058e:	4603      	mov	r3, r0
 8000590:	71fb      	strb	r3, [r7, #7]
	backupMenu.run( false );
 8000592:	2100      	movs	r1, #0
 8000594:	4803      	ldr	r0, [pc, #12]	; (80005a4 <_Z13backupHandlerc+0x1c>)
 8000596:	f000 fb45 	bl	8000c24 <_ZN7CLIMenu4menu3runEb>
}
 800059a:	bf00      	nop
 800059c:	3708      	adds	r7, #8
 800059e:	46bd      	mov	sp, r7
 80005a0:	bd80      	pop	{r7, pc}
 80005a2:	bf00      	nop
 80005a4:	20000168 	.word	0x20000168

080005a8 <_Z18readBackupRegisterm>:

// Backup-rekisterin käsittelijät
uint32_t readBackupRegister(uint32_t _register) {
 80005a8:	b580      	push	{r7, lr}
 80005aa:	b082      	sub	sp, #8
 80005ac:	af00      	add	r7, sp, #0
 80005ae:	6078      	str	r0, [r7, #4]
	if ( _register >= RTC_BKP_NUMBER ) Error_Handler();
 80005b0:	687b      	ldr	r3, [r7, #4]
 80005b2:	2b0f      	cmp	r3, #15
 80005b4:	d901      	bls.n	80005ba <_Z18readBackupRegisterm+0x12>
 80005b6:	f000 f9c1 	bl	800093c <Error_Handler>
    return HAL_RTCEx_BKUPRead(&hrtc, _register);
 80005ba:	6879      	ldr	r1, [r7, #4]
 80005bc:	4803      	ldr	r0, [pc, #12]	; (80005cc <_Z18readBackupRegisterm+0x24>)
 80005be:	f003 fd6b 	bl	8004098 <HAL_RTCEx_BKUPRead>
 80005c2:	4603      	mov	r3, r0
}
 80005c4:	4618      	mov	r0, r3
 80005c6:	3708      	adds	r7, #8
 80005c8:	46bd      	mov	sp, r7
 80005ca:	bd80      	pop	{r7, pc}
 80005cc:	2000008c 	.word	0x2000008c

080005d0 <_Z19writeBackupRegistermm>:

void writeBackupRegister(uint32_t _register, uint32_t _data) {
 80005d0:	b580      	push	{r7, lr}
 80005d2:	b082      	sub	sp, #8
 80005d4:	af00      	add	r7, sp, #0
 80005d6:	6078      	str	r0, [r7, #4]
 80005d8:	6039      	str	r1, [r7, #0]
	if ( _register >= RTC_BKP_NUMBER ) Error_Handler();
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	2b0f      	cmp	r3, #15
 80005de:	d901      	bls.n	80005e4 <_Z19writeBackupRegistermm+0x14>
 80005e0:	f000 f9ac 	bl	800093c <Error_Handler>
    HAL_PWR_EnableBkUpAccess();
 80005e4:	f001 ff2c 	bl	8002440 <HAL_PWR_EnableBkUpAccess>
    HAL_RTCEx_BKUPWrite(&hrtc, _register, _data);
 80005e8:	683a      	ldr	r2, [r7, #0]
 80005ea:	6879      	ldr	r1, [r7, #4]
 80005ec:	4804      	ldr	r0, [pc, #16]	; (8000600 <_Z19writeBackupRegistermm+0x30>)
 80005ee:	f003 fd39 	bl	8004064 <HAL_RTCEx_BKUPWrite>
    HAL_PWR_DisableBkUpAccess();
 80005f2:	f001 ff35 	bl	8002460 <HAL_PWR_DisableBkUpAccess>
}
 80005f6:	bf00      	nop
 80005f8:	3708      	adds	r7, #8
 80005fa:	46bd      	mov	sp, r7
 80005fc:	bd80      	pop	{r7, pc}
 80005fe:	bf00      	nop
 8000600:	2000008c 	.word	0x2000008c

08000604 <_Z16listBackupMemoryc>:

// Backup-muistin manipulointifunktiot
void listBackupMemory( char _selector ) {
 8000604:	b580      	push	{r7, lr}
 8000606:	b084      	sub	sp, #16
 8000608:	af00      	add	r7, sp, #0
 800060a:	4603      	mov	r3, r0
 800060c:	71fb      	strb	r3, [r7, #7]
	if ( _selector == '1' ) {
 800060e:	79fb      	ldrb	r3, [r7, #7]
 8000610:	2b31      	cmp	r3, #49	; 0x31
 8000612:	d114      	bne.n	800063e <_Z16listBackupMemoryc+0x3a>
		printf("\r\nBackup: ");
 8000614:	4817      	ldr	r0, [pc, #92]	; (8000674 <_Z16listBackupMemoryc+0x70>)
 8000616:	f005 f891 	bl	800573c <iprintf>
		for ( uint8_t i = 0; i < RTC_BKP_NUMBER; i++ ) {
 800061a:	2300      	movs	r3, #0
 800061c:	73fb      	strb	r3, [r7, #15]
 800061e:	7bfb      	ldrb	r3, [r7, #15]
 8000620:	2b0f      	cmp	r3, #15
 8000622:	d81f      	bhi.n	8000664 <_Z16listBackupMemoryc+0x60>
			printf( "%2x ", readBackupRegister( i ) );
 8000624:	7bfb      	ldrb	r3, [r7, #15]
 8000626:	4618      	mov	r0, r3
 8000628:	f7ff ffbe 	bl	80005a8 <_Z18readBackupRegisterm>
 800062c:	4603      	mov	r3, r0
 800062e:	4619      	mov	r1, r3
 8000630:	4811      	ldr	r0, [pc, #68]	; (8000678 <_Z16listBackupMemoryc+0x74>)
 8000632:	f005 f883 	bl	800573c <iprintf>
		for ( uint8_t i = 0; i < RTC_BKP_NUMBER; i++ ) {
 8000636:	7bfb      	ldrb	r3, [r7, #15]
 8000638:	3301      	adds	r3, #1
 800063a:	73fb      	strb	r3, [r7, #15]
 800063c:	e7ef      	b.n	800061e <_Z16listBackupMemoryc+0x1a>
		}
	}
	else {
		printf("\r\nHeap: ");
 800063e:	480f      	ldr	r0, [pc, #60]	; (800067c <_Z16listBackupMemoryc+0x78>)
 8000640:	f005 f87c 	bl	800573c <iprintf>
		for ( uint8_t i = 0; i < RTC_BKP_NUMBER; i++ ) {
 8000644:	2300      	movs	r3, #0
 8000646:	73bb      	strb	r3, [r7, #14]
 8000648:	7bbb      	ldrb	r3, [r7, #14]
 800064a:	2b0f      	cmp	r3, #15
 800064c:	d80a      	bhi.n	8000664 <_Z16listBackupMemoryc+0x60>
			printf( "%2x ", heapBlock[i] );
 800064e:	7bbb      	ldrb	r3, [r7, #14]
 8000650:	4a0b      	ldr	r2, [pc, #44]	; (8000680 <_Z16listBackupMemoryc+0x7c>)
 8000652:	5cd3      	ldrb	r3, [r2, r3]
 8000654:	4619      	mov	r1, r3
 8000656:	4808      	ldr	r0, [pc, #32]	; (8000678 <_Z16listBackupMemoryc+0x74>)
 8000658:	f005 f870 	bl	800573c <iprintf>
		for ( uint8_t i = 0; i < RTC_BKP_NUMBER; i++ ) {
 800065c:	7bbb      	ldrb	r3, [r7, #14]
 800065e:	3301      	adds	r3, #1
 8000660:	73bb      	strb	r3, [r7, #14]
 8000662:	e7f1      	b.n	8000648 <_Z16listBackupMemoryc+0x44>
		}
	}
	printf("\r\n");
 8000664:	4807      	ldr	r0, [pc, #28]	; (8000684 <_Z16listBackupMemoryc+0x80>)
 8000666:	f005 f8ef 	bl	8005848 <puts>
}
 800066a:	bf00      	nop
 800066c:	3710      	adds	r7, #16
 800066e:	46bd      	mov	sp, r7
 8000670:	bd80      	pop	{r7, pc}
 8000672:	bf00      	nop
 8000674:	08006340 	.word	0x08006340
 8000678:	0800634c 	.word	0x0800634c
 800067c:	08006354 	.word	0x08006354
 8000680:	20000130 	.word	0x20000130
 8000684:	08006360 	.word	0x08006360

08000688 <_Z15setBackupMemoryc>:

void setBackupMemory( char _selector ) {
 8000688:	b580      	push	{r7, lr}
 800068a:	b084      	sub	sp, #16
 800068c:	af00      	add	r7, sp, #0
 800068e:	4603      	mov	r3, r0
 8000690:	71fb      	strb	r3, [r7, #7]
	for ( uint8_t i = 0;  i < RTC_BKP_NUMBER; i++ ) {
 8000692:	2300      	movs	r3, #0
 8000694:	73fb      	strb	r3, [r7, #15]
 8000696:	7bfb      	ldrb	r3, [r7, #15]
 8000698:	2b0f      	cmp	r3, #15
 800069a:	d833      	bhi.n	8000704 <_Z15setBackupMemoryc+0x7c>
		if ( _selector == '2' ) writeBackupRegister( i, 0 );
 800069c:	79fb      	ldrb	r3, [r7, #7]
 800069e:	2b32      	cmp	r3, #50	; 0x32
 80006a0:	d105      	bne.n	80006ae <_Z15setBackupMemoryc+0x26>
 80006a2:	7bfb      	ldrb	r3, [r7, #15]
 80006a4:	2100      	movs	r1, #0
 80006a6:	4618      	mov	r0, r3
 80006a8:	f7ff ff92 	bl	80005d0 <_Z19writeBackupRegistermm>
 80006ac:	e026      	b.n	80006fc <_Z15setBackupMemoryc+0x74>
		else if ( _selector == '3' ) writeBackupRegister( i, 0xff );
 80006ae:	79fb      	ldrb	r3, [r7, #7]
 80006b0:	2b33      	cmp	r3, #51	; 0x33
 80006b2:	d105      	bne.n	80006c0 <_Z15setBackupMemoryc+0x38>
 80006b4:	7bfb      	ldrb	r3, [r7, #15]
 80006b6:	21ff      	movs	r1, #255	; 0xff
 80006b8:	4618      	mov	r0, r3
 80006ba:	f7ff ff89 	bl	80005d0 <_Z19writeBackupRegistermm>
 80006be:	e01d      	b.n	80006fc <_Z15setBackupMemoryc+0x74>
		else if ( _selector == '4' ) writeBackupRegister( i, i );
 80006c0:	79fb      	ldrb	r3, [r7, #7]
 80006c2:	2b34      	cmp	r3, #52	; 0x34
 80006c4:	d106      	bne.n	80006d4 <_Z15setBackupMemoryc+0x4c>
 80006c6:	7bfb      	ldrb	r3, [r7, #15]
 80006c8:	7bfa      	ldrb	r2, [r7, #15]
 80006ca:	4611      	mov	r1, r2
 80006cc:	4618      	mov	r0, r3
 80006ce:	f7ff ff7f 	bl	80005d0 <_Z19writeBackupRegistermm>
 80006d2:	e013      	b.n	80006fc <_Z15setBackupMemoryc+0x74>
		else if ( _selector == '6' ) heapBlock[i] = 0;
 80006d4:	79fb      	ldrb	r3, [r7, #7]
 80006d6:	2b36      	cmp	r3, #54	; 0x36
 80006d8:	d104      	bne.n	80006e4 <_Z15setBackupMemoryc+0x5c>
 80006da:	7bfb      	ldrb	r3, [r7, #15]
 80006dc:	4a0b      	ldr	r2, [pc, #44]	; (800070c <_Z15setBackupMemoryc+0x84>)
 80006de:	2100      	movs	r1, #0
 80006e0:	54d1      	strb	r1, [r2, r3]
 80006e2:	e00b      	b.n	80006fc <_Z15setBackupMemoryc+0x74>
		else if ( _selector == '7' ) heapBlock[i] = 0xff;
 80006e4:	79fb      	ldrb	r3, [r7, #7]
 80006e6:	2b37      	cmp	r3, #55	; 0x37
 80006e8:	d104      	bne.n	80006f4 <_Z15setBackupMemoryc+0x6c>
 80006ea:	7bfb      	ldrb	r3, [r7, #15]
 80006ec:	4a07      	ldr	r2, [pc, #28]	; (800070c <_Z15setBackupMemoryc+0x84>)
 80006ee:	21ff      	movs	r1, #255	; 0xff
 80006f0:	54d1      	strb	r1, [r2, r3]
 80006f2:	e003      	b.n	80006fc <_Z15setBackupMemoryc+0x74>
		else  heapBlock[i] = i;
 80006f4:	7bfb      	ldrb	r3, [r7, #15]
 80006f6:	4905      	ldr	r1, [pc, #20]	; (800070c <_Z15setBackupMemoryc+0x84>)
 80006f8:	7bfa      	ldrb	r2, [r7, #15]
 80006fa:	54ca      	strb	r2, [r1, r3]
	for ( uint8_t i = 0;  i < RTC_BKP_NUMBER; i++ ) {
 80006fc:	7bfb      	ldrb	r3, [r7, #15]
 80006fe:	3301      	adds	r3, #1
 8000700:	73fb      	strb	r3, [r7, #15]
 8000702:	e7c8      	b.n	8000696 <_Z15setBackupMemoryc+0xe>
	}
}
 8000704:	bf00      	nop
 8000706:	3710      	adds	r7, #16
 8000708:	46bd      	mov	sp, r7
 800070a:	bd80      	pop	{r7, pc}
 800070c:	20000130 	.word	0x20000130

08000710 <_Z19wakeupSourceHandlerc>:

// Herätyslähteen valintakäsittelijä
void wakeupSourceHandler( char _selector ) {
 8000710:	b580      	push	{r7, lr}
 8000712:	b084      	sub	sp, #16
 8000714:	af00      	add	r7, sp, #0
 8000716:	4603      	mov	r3, r0
 8000718:	71fb      	strb	r3, [r7, #7]
	switch ( _selector ) {
 800071a:	79fb      	ldrb	r3, [r7, #7]
 800071c:	2b33      	cmp	r3, #51	; 0x33
 800071e:	d00e      	beq.n	800073e <_Z19wakeupSourceHandlerc+0x2e>
 8000720:	2b33      	cmp	r3, #51	; 0x33
 8000722:	dc18      	bgt.n	8000756 <_Z19wakeupSourceHandlerc+0x46>
 8000724:	2b31      	cmp	r3, #49	; 0x31
 8000726:	d002      	beq.n	800072e <_Z19wakeupSourceHandlerc+0x1e>
 8000728:	2b32      	cmp	r3, #50	; 0x32
 800072a:	d004      	beq.n	8000736 <_Z19wakeupSourceHandlerc+0x26>
 800072c:	e013      	b.n	8000756 <_Z19wakeupSourceHandlerc+0x46>
	case ( '1' ): {
		HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 800072e:	2028      	movs	r0, #40	; 0x28
 8000730:	f001 fc21 	bl	8001f76 <HAL_NVIC_EnableIRQ>
		break;
 8000734:	e012      	b.n	800075c <_Z19wakeupSourceHandlerc+0x4c>
	}
	case ( '2' ): {
		HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 8000736:	2006      	movs	r0, #6
 8000738:	f001 fc1d 	bl	8001f76 <HAL_NVIC_EnableIRQ>
		break;
 800073c:	e00e      	b.n	800075c <_Z19wakeupSourceHandlerc+0x4c>
	case ( '3' ): {
		// Systeemi herää automaattisesti reaaliaikakellon keskeytyksestä.
		// Muuttuja sleepTime määrää nukkumisajan millisekunteina
#define RTC_CLOCK_FREQ 32768
#define RTC_CLOCK_DIVIDER 16
		uint32_t sleepTime = ( ( (uint32_t) 5000 ) * ( RTC_CLOCK_FREQ / RTC_CLOCK_DIVIDER ) ) / 1000;
 800073e:	f44f 5320 	mov.w	r3, #10240	; 0x2800
 8000742:	60fb      	str	r3, [r7, #12]
		HAL_RTCEx_SetWakeUpTimer_IT(&hrtc, sleepTime, RTC_WAKEUPCLOCK_RTCCLK_DIV16);
 8000744:	2200      	movs	r2, #0
 8000746:	68f9      	ldr	r1, [r7, #12]
 8000748:	4806      	ldr	r0, [pc, #24]	; (8000764 <_Z19wakeupSourceHandlerc+0x54>)
 800074a:	f003 fb51 	bl	8003df0 <HAL_RTCEx_SetWakeUpTimer_IT>
		HAL_NVIC_EnableIRQ(RTC_WKUP_IRQn);
 800074e:	2003      	movs	r0, #3
 8000750:	f001 fc11 	bl	8001f76 <HAL_NVIC_EnableIRQ>
		break;
 8000754:	e002      	b.n	800075c <_Z19wakeupSourceHandlerc+0x4c>
	}
	default:
		disableAllWakeupSources();
 8000756:	f7ff fe81 	bl	800045c <_Z23disableAllWakeupSourcesv>
	}
}
 800075a:	bf00      	nop
 800075c:	bf00      	nop
 800075e:	3710      	adds	r7, #16
 8000760:	46bd      	mov	sp, r7
 8000762:	bd80      	pop	{r7, pc}
 8000764:	2000008c 	.word	0x2000008c

08000768 <main>:




int main(void) {
 8000768:	b580      	push	{r7, lr}
 800076a:	b082      	sub	sp, #8
 800076c:	af00      	add	r7, sp, #0

	uint8_t command;

	HAL_Init();
 800076e:	f001 fa3d 	bl	8001bec <HAL_Init>

	SystemClock_Config();
 8000772:	f000 f865 	bl	8000840 <_Z18SystemClock_Configv>

	MX_GPIO_Init();
 8000776:	f7ff fd8b 	bl	8000290 <MX_GPIO_Init>
	MX_USART2_UART_Init();
 800077a:	f001 f993 	bl	8001aa4 <MX_USART2_UART_Init>
	MX_RTC_Init();
 800077e:	f001 f81d 	bl	80017bc <MX_RTC_Init>

	// Estetään aluksi kaikki konfiguroidut herätekeskeytykset
	// Halutut kytketään päälle myöhemmin
	disableAllWakeupSources();
 8000782:	f7ff fe6b 	bl	800045c <_Z23disableAllWakeupSourcesv>

	// Rakennetaan valikot
	for ( uint8_t i=0; i<NUM_MAINMENUITEMS; i++ ) {
 8000786:	2300      	movs	r3, #0
 8000788:	71fb      	strb	r3, [r7, #7]
 800078a:	79fb      	ldrb	r3, [r7, #7]
 800078c:	2b03      	cmp	r3, #3
 800078e:	d80e      	bhi.n	80007ae <main+0x46>
		mainMenu.addItem( &mainMenuItems[i] );
 8000790:	79fa      	ldrb	r2, [r7, #7]
 8000792:	4613      	mov	r3, r2
 8000794:	005b      	lsls	r3, r3, #1
 8000796:	4413      	add	r3, r2
 8000798:	009b      	lsls	r3, r3, #2
 800079a:	4a22      	ldr	r2, [pc, #136]	; (8000824 <main+0xbc>)
 800079c:	4413      	add	r3, r2
 800079e:	4619      	mov	r1, r3
 80007a0:	4821      	ldr	r0, [pc, #132]	; (8000828 <main+0xc0>)
 80007a2:	f000 fa2f 	bl	8000c04 <_ZN7CLIMenu4menu7addItemEPNS_8menuItemE>
	for ( uint8_t i=0; i<NUM_MAINMENUITEMS; i++ ) {
 80007a6:	79fb      	ldrb	r3, [r7, #7]
 80007a8:	3301      	adds	r3, #1
 80007aa:	71fb      	strb	r3, [r7, #7]
 80007ac:	e7ed      	b.n	800078a <main+0x22>
	}

	for ( uint8_t i=0; i<NUM_WKUPMENUITEMS; i++ ) {
 80007ae:	2300      	movs	r3, #0
 80007b0:	71bb      	strb	r3, [r7, #6]
 80007b2:	79bb      	ldrb	r3, [r7, #6]
 80007b4:	2b03      	cmp	r3, #3
 80007b6:	d80e      	bhi.n	80007d6 <main+0x6e>
		wakeupMenu.addItem( &wkupMenuItems[i] );
 80007b8:	79ba      	ldrb	r2, [r7, #6]
 80007ba:	4613      	mov	r3, r2
 80007bc:	005b      	lsls	r3, r3, #1
 80007be:	4413      	add	r3, r2
 80007c0:	009b      	lsls	r3, r3, #2
 80007c2:	4a1a      	ldr	r2, [pc, #104]	; (800082c <main+0xc4>)
 80007c4:	4413      	add	r3, r2
 80007c6:	4619      	mov	r1, r3
 80007c8:	4819      	ldr	r0, [pc, #100]	; (8000830 <main+0xc8>)
 80007ca:	f000 fa1b 	bl	8000c04 <_ZN7CLIMenu4menu7addItemEPNS_8menuItemE>
	for ( uint8_t i=0; i<NUM_WKUPMENUITEMS; i++ ) {
 80007ce:	79bb      	ldrb	r3, [r7, #6]
 80007d0:	3301      	adds	r3, #1
 80007d2:	71bb      	strb	r3, [r7, #6]
 80007d4:	e7ed      	b.n	80007b2 <main+0x4a>
	}

	for ( uint8_t i=0; i<NUM_BKUPMENUITEMS; i++ ) {
 80007d6:	2300      	movs	r3, #0
 80007d8:	717b      	strb	r3, [r7, #5]
 80007da:	797b      	ldrb	r3, [r7, #5]
 80007dc:	2b07      	cmp	r3, #7
 80007de:	d80e      	bhi.n	80007fe <main+0x96>
		backupMenu.addItem( &bkupMenuItems[i] );
 80007e0:	797a      	ldrb	r2, [r7, #5]
 80007e2:	4613      	mov	r3, r2
 80007e4:	005b      	lsls	r3, r3, #1
 80007e6:	4413      	add	r3, r2
 80007e8:	009b      	lsls	r3, r3, #2
 80007ea:	4a12      	ldr	r2, [pc, #72]	; (8000834 <main+0xcc>)
 80007ec:	4413      	add	r3, r2
 80007ee:	4619      	mov	r1, r3
 80007f0:	4811      	ldr	r0, [pc, #68]	; (8000838 <main+0xd0>)
 80007f2:	f000 fa07 	bl	8000c04 <_ZN7CLIMenu4menu7addItemEPNS_8menuItemE>
	for ( uint8_t i=0; i<NUM_BKUPMENUITEMS; i++ ) {
 80007f6:	797b      	ldrb	r3, [r7, #5]
 80007f8:	3301      	adds	r3, #1
 80007fa:	717b      	strb	r3, [r7, #5]
 80007fc:	e7ed      	b.n	80007da <main+0x72>
	}

	// Valot päälle ja käynnistysilmoitus
	HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_SET);
 80007fe:	2201      	movs	r2, #1
 8000800:	2120      	movs	r1, #32
 8000802:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000806:	f001 fddf 	bl	80023c8 <HAL_GPIO_WritePin>
	printf("\r\nARM Low Power demo\r\n\r\n");
 800080a:	480c      	ldr	r0, [pc, #48]	; (800083c <main+0xd4>)
 800080c:	f005 f81c 	bl	8005848 <puts>

	// Ja sitten tehdään mitä käyttäjä määrää
	mainMenu.run( true );
 8000810:	2101      	movs	r1, #1
 8000812:	4805      	ldr	r0, [pc, #20]	; (8000828 <main+0xc0>)
 8000814:	f000 fa06 	bl	8000c24 <_ZN7CLIMenu4menu3runEb>

}
 8000818:	2300      	movs	r3, #0
 800081a:	4618      	mov	r0, r3
 800081c:	3708      	adds	r7, #8
 800081e:	46bd      	mov	sp, r7
 8000820:	bd80      	pop	{r7, pc}
 8000822:	bf00      	nop
 8000824:	2000017c 	.word	0x2000017c
 8000828:	20000140 	.word	0x20000140
 800082c:	200001ac 	.word	0x200001ac
 8000830:	20000154 	.word	0x20000154
 8000834:	200001dc 	.word	0x200001dc
 8000838:	20000168 	.word	0x20000168
 800083c:	08006364 	.word	0x08006364

08000840 <_Z18SystemClock_Configv>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000840:	b580      	push	{r7, lr}
 8000842:	b0a6      	sub	sp, #152	; 0x98
 8000844:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000846:	f107 0370 	add.w	r3, r7, #112	; 0x70
 800084a:	2228      	movs	r2, #40	; 0x28
 800084c:	2100      	movs	r1, #0
 800084e:	4618      	mov	r0, r3
 8000850:	f004 fec2 	bl	80055d8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000854:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 8000858:	2200      	movs	r2, #0
 800085a:	601a      	str	r2, [r3, #0]
 800085c:	605a      	str	r2, [r3, #4]
 800085e:	609a      	str	r2, [r3, #8]
 8000860:	60da      	str	r2, [r3, #12]
 8000862:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000864:	1d3b      	adds	r3, r7, #4
 8000866:	2258      	movs	r2, #88	; 0x58
 8000868:	2100      	movs	r1, #0
 800086a:	4618      	mov	r0, r3
 800086c:	f004 feb4 	bl	80055d8 <memset>

  /** Configure LSE Drive Capability
  */
  HAL_PWR_EnableBkUpAccess();
 8000870:	f001 fde6 	bl	8002440 <HAL_PWR_EnableBkUpAccess>
  __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 8000874:	4b2f      	ldr	r3, [pc, #188]	; (8000934 <_Z18SystemClock_Configv+0xf4>)
 8000876:	6a1b      	ldr	r3, [r3, #32]
 8000878:	4a2e      	ldr	r2, [pc, #184]	; (8000934 <_Z18SystemClock_Configv+0xf4>)
 800087a:	f023 0318 	bic.w	r3, r3, #24
 800087e:	6213      	str	r3, [r2, #32]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_LSE;
 8000880:	2306      	movs	r3, #6
 8000882:	673b      	str	r3, [r7, #112]	; 0x70
  RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 8000884:	2301      	movs	r3, #1
 8000886:	67bb      	str	r3, [r7, #120]	; 0x78
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000888:	2301      	movs	r3, #1
 800088a:	67fb      	str	r3, [r7, #124]	; 0x7c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800088c:	2310      	movs	r3, #16
 800088e:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000892:	2302      	movs	r3, #2
 8000894:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8000898:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800089c:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 80008a0:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
 80008a4:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
  RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 80008a8:	2300      	movs	r3, #0
 80008aa:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80008ae:	f107 0370 	add.w	r3, r7, #112	; 0x70
 80008b2:	4618      	mov	r0, r3
 80008b4:	f001 fe4c 	bl	8002550 <HAL_RCC_OscConfig>
 80008b8:	4603      	mov	r3, r0
 80008ba:	2b00      	cmp	r3, #0
 80008bc:	bf14      	ite	ne
 80008be:	2301      	movne	r3, #1
 80008c0:	2300      	moveq	r3, #0
 80008c2:	b2db      	uxtb	r3, r3
 80008c4:	2b00      	cmp	r3, #0
 80008c6:	d001      	beq.n	80008cc <_Z18SystemClock_Configv+0x8c>
  {
    Error_Handler();
 80008c8:	f000 f838 	bl	800093c <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80008cc:	230f      	movs	r3, #15
 80008ce:	65fb      	str	r3, [r7, #92]	; 0x5c
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80008d0:	2302      	movs	r3, #2
 80008d2:	663b      	str	r3, [r7, #96]	; 0x60
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80008d4:	2300      	movs	r3, #0
 80008d6:	667b      	str	r3, [r7, #100]	; 0x64
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80008d8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80008dc:	66bb      	str	r3, [r7, #104]	; 0x68
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80008de:	2300      	movs	r3, #0
 80008e0:	66fb      	str	r3, [r7, #108]	; 0x6c

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 80008e2:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 80008e6:	2102      	movs	r1, #2
 80008e8:	4618      	mov	r0, r3
 80008ea:	f002 fd47 	bl	800337c <HAL_RCC_ClockConfig>
 80008ee:	4603      	mov	r3, r0
 80008f0:	2b00      	cmp	r3, #0
 80008f2:	bf14      	ite	ne
 80008f4:	2301      	movne	r3, #1
 80008f6:	2300      	moveq	r3, #0
 80008f8:	b2db      	uxtb	r3, r3
 80008fa:	2b00      	cmp	r3, #0
 80008fc:	d001      	beq.n	8000902 <_Z18SystemClock_Configv+0xc2>
  {
    Error_Handler();
 80008fe:	f000 f81d 	bl	800093c <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2|RCC_PERIPHCLK_RTC;
 8000902:	4b0d      	ldr	r3, [pc, #52]	; (8000938 <_Z18SystemClock_Configv+0xf8>)
 8000904:	607b      	str	r3, [r7, #4]
  PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 8000906:	2300      	movs	r3, #0
 8000908:	613b      	str	r3, [r7, #16]
  PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 800090a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800090e:	60bb      	str	r3, [r7, #8]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000910:	1d3b      	adds	r3, r7, #4
 8000912:	4618      	mov	r0, r3
 8000914:	f002 ff68 	bl	80037e8 <HAL_RCCEx_PeriphCLKConfig>
 8000918:	4603      	mov	r3, r0
 800091a:	2b00      	cmp	r3, #0
 800091c:	bf14      	ite	ne
 800091e:	2301      	movne	r3, #1
 8000920:	2300      	moveq	r3, #0
 8000922:	b2db      	uxtb	r3, r3
 8000924:	2b00      	cmp	r3, #0
 8000926:	d001      	beq.n	800092c <_Z18SystemClock_Configv+0xec>
  {
    Error_Handler();
 8000928:	f000 f808 	bl	800093c <Error_Handler>
  }
}
 800092c:	bf00      	nop
 800092e:	3798      	adds	r7, #152	; 0x98
 8000930:	46bd      	mov	sp, r7
 8000932:	bd80      	pop	{r7, pc}
 8000934:	40021000 	.word	0x40021000
 8000938:	00010002 	.word	0x00010002

0800093c <Error_Handler>:


void Error_Handler(void)
{
 800093c:	b480      	push	{r7}
 800093e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000940:	b672      	cpsid	i
}
 8000942:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000944:	e7fe      	b.n	8000944 <Error_Handler+0x8>
	...

08000948 <_Z41__static_initialization_and_destruction_0ii>:
  {
  }
  /* USER CODE END Error_Handler_Debug */
}
 8000948:	b590      	push	{r4, r7, lr}
 800094a:	b083      	sub	sp, #12
 800094c:	af00      	add	r7, sp, #0
 800094e:	6078      	str	r0, [r7, #4]
 8000950:	6039      	str	r1, [r7, #0]
 8000952:	687b      	ldr	r3, [r7, #4]
 8000954:	2b01      	cmp	r3, #1
 8000956:	f040 8081 	bne.w	8000a5c <_Z41__static_initialization_and_destruction_0ii+0x114>
 800095a:	683b      	ldr	r3, [r7, #0]
 800095c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000960:	4293      	cmp	r3, r2
 8000962:	d17b      	bne.n	8000a5c <_Z41__static_initialization_and_destruction_0ii+0x114>
menu mainMenu("Sleep demo menu----------------------");
 8000964:	4948      	ldr	r1, [pc, #288]	; (8000a88 <_Z41__static_initialization_and_destruction_0ii+0x140>)
 8000966:	4849      	ldr	r0, [pc, #292]	; (8000a8c <_Z41__static_initialization_and_destruction_0ii+0x144>)
 8000968:	f000 f910 	bl	8000b8c <_ZN7CLIMenu4menuC1EPc>
menu wakeupMenu("Select wakeup source signal--------");
 800096c:	4948      	ldr	r1, [pc, #288]	; (8000a90 <_Z41__static_initialization_and_destruction_0ii+0x148>)
 800096e:	4849      	ldr	r0, [pc, #292]	; (8000a94 <_Z41__static_initialization_and_destruction_0ii+0x14c>)
 8000970:	f000 f90c 	bl	8000b8c <_ZN7CLIMenu4menuC1EPc>
menu backupMenu("Select backup memory operation-----");
 8000974:	4948      	ldr	r1, [pc, #288]	; (8000a98 <_Z41__static_initialization_and_destruction_0ii+0x150>)
 8000976:	4849      	ldr	r0, [pc, #292]	; (8000a9c <_Z41__static_initialization_and_destruction_0ii+0x154>)
 8000978:	f000 f908 	bl	8000b8c <_ZN7CLIMenu4menuC1EPc>
};
 800097c:	4c48      	ldr	r4, [pc, #288]	; (8000aa0 <_Z41__static_initialization_and_destruction_0ii+0x158>)
 800097e:	4b49      	ldr	r3, [pc, #292]	; (8000aa4 <_Z41__static_initialization_and_destruction_0ii+0x15c>)
 8000980:	4a49      	ldr	r2, [pc, #292]	; (8000aa8 <_Z41__static_initialization_and_destruction_0ii+0x160>)
 8000982:	2131      	movs	r1, #49	; 0x31
 8000984:	4620      	mov	r0, r4
 8000986:	f7ff fd09 	bl	800039c <_ZN7CLIMenu8menuItemC1EcPcPFvcE>
 800098a:	340c      	adds	r4, #12
 800098c:	4b47      	ldr	r3, [pc, #284]	; (8000aac <_Z41__static_initialization_and_destruction_0ii+0x164>)
 800098e:	4a48      	ldr	r2, [pc, #288]	; (8000ab0 <_Z41__static_initialization_and_destruction_0ii+0x168>)
 8000990:	2132      	movs	r1, #50	; 0x32
 8000992:	4620      	mov	r0, r4
 8000994:	f7ff fd02 	bl	800039c <_ZN7CLIMenu8menuItemC1EcPcPFvcE>
 8000998:	340c      	adds	r4, #12
 800099a:	4b46      	ldr	r3, [pc, #280]	; (8000ab4 <_Z41__static_initialization_and_destruction_0ii+0x16c>)
 800099c:	4a46      	ldr	r2, [pc, #280]	; (8000ab8 <_Z41__static_initialization_and_destruction_0ii+0x170>)
 800099e:	2133      	movs	r1, #51	; 0x33
 80009a0:	4620      	mov	r0, r4
 80009a2:	f7ff fcfb 	bl	800039c <_ZN7CLIMenu8menuItemC1EcPcPFvcE>
 80009a6:	f104 000c 	add.w	r0, r4, #12
 80009aa:	4b44      	ldr	r3, [pc, #272]	; (8000abc <_Z41__static_initialization_and_destruction_0ii+0x174>)
 80009ac:	4a44      	ldr	r2, [pc, #272]	; (8000ac0 <_Z41__static_initialization_and_destruction_0ii+0x178>)
 80009ae:	2134      	movs	r1, #52	; 0x34
 80009b0:	f7ff fcf4 	bl	800039c <_ZN7CLIMenu8menuItemC1EcPcPFvcE>
};
 80009b4:	4c43      	ldr	r4, [pc, #268]	; (8000ac4 <_Z41__static_initialization_and_destruction_0ii+0x17c>)
 80009b6:	4b44      	ldr	r3, [pc, #272]	; (8000ac8 <_Z41__static_initialization_and_destruction_0ii+0x180>)
 80009b8:	4a44      	ldr	r2, [pc, #272]	; (8000acc <_Z41__static_initialization_and_destruction_0ii+0x184>)
 80009ba:	2131      	movs	r1, #49	; 0x31
 80009bc:	4620      	mov	r0, r4
 80009be:	f7ff fced 	bl	800039c <_ZN7CLIMenu8menuItemC1EcPcPFvcE>
 80009c2:	340c      	adds	r4, #12
 80009c4:	4b40      	ldr	r3, [pc, #256]	; (8000ac8 <_Z41__static_initialization_and_destruction_0ii+0x180>)
 80009c6:	4a42      	ldr	r2, [pc, #264]	; (8000ad0 <_Z41__static_initialization_and_destruction_0ii+0x188>)
 80009c8:	2132      	movs	r1, #50	; 0x32
 80009ca:	4620      	mov	r0, r4
 80009cc:	f7ff fce6 	bl	800039c <_ZN7CLIMenu8menuItemC1EcPcPFvcE>
 80009d0:	340c      	adds	r4, #12
 80009d2:	4b3d      	ldr	r3, [pc, #244]	; (8000ac8 <_Z41__static_initialization_and_destruction_0ii+0x180>)
 80009d4:	4a3f      	ldr	r2, [pc, #252]	; (8000ad4 <_Z41__static_initialization_and_destruction_0ii+0x18c>)
 80009d6:	2133      	movs	r1, #51	; 0x33
 80009d8:	4620      	mov	r0, r4
 80009da:	f7ff fcdf 	bl	800039c <_ZN7CLIMenu8menuItemC1EcPcPFvcE>
 80009de:	f104 000c 	add.w	r0, r4, #12
 80009e2:	4b39      	ldr	r3, [pc, #228]	; (8000ac8 <_Z41__static_initialization_and_destruction_0ii+0x180>)
 80009e4:	4a3c      	ldr	r2, [pc, #240]	; (8000ad8 <_Z41__static_initialization_and_destruction_0ii+0x190>)
 80009e6:	2134      	movs	r1, #52	; 0x34
 80009e8:	f7ff fcd8 	bl	800039c <_ZN7CLIMenu8menuItemC1EcPcPFvcE>
};
 80009ec:	4c3b      	ldr	r4, [pc, #236]	; (8000adc <_Z41__static_initialization_and_destruction_0ii+0x194>)
 80009ee:	4b3c      	ldr	r3, [pc, #240]	; (8000ae0 <_Z41__static_initialization_and_destruction_0ii+0x198>)
 80009f0:	4a3c      	ldr	r2, [pc, #240]	; (8000ae4 <_Z41__static_initialization_and_destruction_0ii+0x19c>)
 80009f2:	2131      	movs	r1, #49	; 0x31
 80009f4:	4620      	mov	r0, r4
 80009f6:	f7ff fcd1 	bl	800039c <_ZN7CLIMenu8menuItemC1EcPcPFvcE>
 80009fa:	340c      	adds	r4, #12
 80009fc:	4b3a      	ldr	r3, [pc, #232]	; (8000ae8 <_Z41__static_initialization_and_destruction_0ii+0x1a0>)
 80009fe:	4a3b      	ldr	r2, [pc, #236]	; (8000aec <_Z41__static_initialization_and_destruction_0ii+0x1a4>)
 8000a00:	2132      	movs	r1, #50	; 0x32
 8000a02:	4620      	mov	r0, r4
 8000a04:	f7ff fcca 	bl	800039c <_ZN7CLIMenu8menuItemC1EcPcPFvcE>
 8000a08:	340c      	adds	r4, #12
 8000a0a:	4b37      	ldr	r3, [pc, #220]	; (8000ae8 <_Z41__static_initialization_and_destruction_0ii+0x1a0>)
 8000a0c:	4a38      	ldr	r2, [pc, #224]	; (8000af0 <_Z41__static_initialization_and_destruction_0ii+0x1a8>)
 8000a0e:	2133      	movs	r1, #51	; 0x33
 8000a10:	4620      	mov	r0, r4
 8000a12:	f7ff fcc3 	bl	800039c <_ZN7CLIMenu8menuItemC1EcPcPFvcE>
 8000a16:	340c      	adds	r4, #12
 8000a18:	4b33      	ldr	r3, [pc, #204]	; (8000ae8 <_Z41__static_initialization_and_destruction_0ii+0x1a0>)
 8000a1a:	4a36      	ldr	r2, [pc, #216]	; (8000af4 <_Z41__static_initialization_and_destruction_0ii+0x1ac>)
 8000a1c:	2134      	movs	r1, #52	; 0x34
 8000a1e:	4620      	mov	r0, r4
 8000a20:	f7ff fcbc 	bl	800039c <_ZN7CLIMenu8menuItemC1EcPcPFvcE>
 8000a24:	340c      	adds	r4, #12
 8000a26:	4b2e      	ldr	r3, [pc, #184]	; (8000ae0 <_Z41__static_initialization_and_destruction_0ii+0x198>)
 8000a28:	4a33      	ldr	r2, [pc, #204]	; (8000af8 <_Z41__static_initialization_and_destruction_0ii+0x1b0>)
 8000a2a:	2135      	movs	r1, #53	; 0x35
 8000a2c:	4620      	mov	r0, r4
 8000a2e:	f7ff fcb5 	bl	800039c <_ZN7CLIMenu8menuItemC1EcPcPFvcE>
 8000a32:	340c      	adds	r4, #12
 8000a34:	4b2c      	ldr	r3, [pc, #176]	; (8000ae8 <_Z41__static_initialization_and_destruction_0ii+0x1a0>)
 8000a36:	4a31      	ldr	r2, [pc, #196]	; (8000afc <_Z41__static_initialization_and_destruction_0ii+0x1b4>)
 8000a38:	2136      	movs	r1, #54	; 0x36
 8000a3a:	4620      	mov	r0, r4
 8000a3c:	f7ff fcae 	bl	800039c <_ZN7CLIMenu8menuItemC1EcPcPFvcE>
 8000a40:	340c      	adds	r4, #12
 8000a42:	4b29      	ldr	r3, [pc, #164]	; (8000ae8 <_Z41__static_initialization_and_destruction_0ii+0x1a0>)
 8000a44:	4a2e      	ldr	r2, [pc, #184]	; (8000b00 <_Z41__static_initialization_and_destruction_0ii+0x1b8>)
 8000a46:	2137      	movs	r1, #55	; 0x37
 8000a48:	4620      	mov	r0, r4
 8000a4a:	f7ff fca7 	bl	800039c <_ZN7CLIMenu8menuItemC1EcPcPFvcE>
 8000a4e:	f104 000c 	add.w	r0, r4, #12
 8000a52:	4b25      	ldr	r3, [pc, #148]	; (8000ae8 <_Z41__static_initialization_and_destruction_0ii+0x1a0>)
 8000a54:	4a2b      	ldr	r2, [pc, #172]	; (8000b04 <_Z41__static_initialization_and_destruction_0ii+0x1bc>)
 8000a56:	2138      	movs	r1, #56	; 0x38
 8000a58:	f7ff fca0 	bl	800039c <_ZN7CLIMenu8menuItemC1EcPcPFvcE>
menuItem bkupMenuItems[NUM_BKUPMENUITEMS] =
 8000a5c:	687b      	ldr	r3, [r7, #4]
 8000a5e:	2b00      	cmp	r3, #0
 8000a60:	d10d      	bne.n	8000a7e <_Z41__static_initialization_and_destruction_0ii+0x136>
 8000a62:	683b      	ldr	r3, [r7, #0]
 8000a64:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000a68:	4293      	cmp	r3, r2
 8000a6a:	d108      	bne.n	8000a7e <_Z41__static_initialization_and_destruction_0ii+0x136>
menu backupMenu("Select backup memory operation-----");
 8000a6c:	480b      	ldr	r0, [pc, #44]	; (8000a9c <_Z41__static_initialization_and_destruction_0ii+0x154>)
 8000a6e:	f000 f8a5 	bl	8000bbc <_ZN7CLIMenu4menuD1Ev>
menu wakeupMenu("Select wakeup source signal--------");
 8000a72:	4808      	ldr	r0, [pc, #32]	; (8000a94 <_Z41__static_initialization_and_destruction_0ii+0x14c>)
 8000a74:	f000 f8a2 	bl	8000bbc <_ZN7CLIMenu4menuD1Ev>
menu mainMenu("Sleep demo menu----------------------");
 8000a78:	4804      	ldr	r0, [pc, #16]	; (8000a8c <_Z41__static_initialization_and_destruction_0ii+0x144>)
 8000a7a:	f000 f89f 	bl	8000bbc <_ZN7CLIMenu4menuD1Ev>
}
 8000a7e:	bf00      	nop
 8000a80:	370c      	adds	r7, #12
 8000a82:	46bd      	mov	sp, r7
 8000a84:	bd90      	pop	{r4, r7, pc}
 8000a86:	bf00      	nop
 8000a88:	0800637c 	.word	0x0800637c
 8000a8c:	20000140 	.word	0x20000140
 8000a90:	080063a4 	.word	0x080063a4
 8000a94:	20000154 	.word	0x20000154
 8000a98:	080063c8 	.word	0x080063c8
 8000a9c:	20000168 	.word	0x20000168
 8000aa0:	2000017c 	.word	0x2000017c
 8000aa4:	08000491 	.word	0x08000491
 8000aa8:	080063ec 	.word	0x080063ec
 8000aac:	080004e9 	.word	0x080004e9
 8000ab0:	08006400 	.word	0x08006400
 8000ab4:	08000545 	.word	0x08000545
 8000ab8:	08006410 	.word	0x08006410
 8000abc:	08000589 	.word	0x08000589
 8000ac0:	08006424 	.word	0x08006424
 8000ac4:	200001ac 	.word	0x200001ac
 8000ac8:	08000711 	.word	0x08000711
 8000acc:	0800643c 	.word	0x0800643c
 8000ad0:	08006468 	.word	0x08006468
 8000ad4:	08006490 	.word	0x08006490
 8000ad8:	080064a0 	.word	0x080064a0
 8000adc:	200001dc 	.word	0x200001dc
 8000ae0:	08000605 	.word	0x08000605
 8000ae4:	080064d4 	.word	0x080064d4
 8000ae8:	08000689 	.word	0x08000689
 8000aec:	080064f0 	.word	0x080064f0
 8000af0:	08006510 	.word	0x08006510
 8000af4:	08006534 	.word	0x08006534
 8000af8:	08006560 	.word	0x08006560
 8000afc:	08006580 	.word	0x08006580
 8000b00:	080065a4 	.word	0x080065a4
 8000b04:	080065cc 	.word	0x080065cc

08000b08 <_GLOBAL__sub_I_hrtc>:
 8000b08:	b580      	push	{r7, lr}
 8000b0a:	af00      	add	r7, sp, #0
 8000b0c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8000b10:	2001      	movs	r0, #1
 8000b12:	f7ff ff19 	bl	8000948 <_Z41__static_initialization_and_destruction_0ii>
 8000b16:	bd80      	pop	{r7, pc}

08000b18 <_GLOBAL__sub_D_hrtc>:
 8000b18:	b580      	push	{r7, lr}
 8000b1a:	af00      	add	r7, sp, #0
 8000b1c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8000b20:	2000      	movs	r0, #0
 8000b22:	f7ff ff11 	bl	8000948 <_Z41__static_initialization_and_destruction_0ii>
 8000b26:	bd80      	pop	{r7, pc}

08000b28 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 8000b28:	b480      	push	{r7}
 8000b2a:	b083      	sub	sp, #12
 8000b2c:	af00      	add	r7, sp, #0
 8000b2e:	6078      	str	r0, [r7, #4]
 8000b30:	6039      	str	r1, [r7, #0]
 8000b32:	683b      	ldr	r3, [r7, #0]
 8000b34:	4618      	mov	r0, r3
 8000b36:	370c      	adds	r7, #12
 8000b38:	46bd      	mov	sp, r7
 8000b3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b3e:	4770      	bx	lr

08000b40 <_ZNSt12_Vector_baseIPN7CLIMenu8menuItemESaIS2_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
 8000b40:	b580      	push	{r7, lr}
 8000b42:	b082      	sub	sp, #8
 8000b44:	af00      	add	r7, sp, #0
 8000b46:	6078      	str	r0, [r7, #4]
 8000b48:	6878      	ldr	r0, [r7, #4]
 8000b4a:	f000 f921 	bl	8000d90 <_ZNSaIPN7CLIMenu8menuItemEED1Ev>
 8000b4e:	687b      	ldr	r3, [r7, #4]
 8000b50:	4618      	mov	r0, r3
 8000b52:	3708      	adds	r7, #8
 8000b54:	46bd      	mov	sp, r7
 8000b56:	bd80      	pop	{r7, pc}

08000b58 <_ZNSt12_Vector_baseIPN7CLIMenu8menuItemESaIS2_EEC1Ev>:
      allocator_type
      get_allocator() const _GLIBCXX_NOEXCEPT
      { return allocator_type(_M_get_Tp_allocator()); }

#if __cplusplus >= 201103L
      _Vector_base() = default;
 8000b58:	b580      	push	{r7, lr}
 8000b5a:	b082      	sub	sp, #8
 8000b5c:	af00      	add	r7, sp, #0
 8000b5e:	6078      	str	r0, [r7, #4]
 8000b60:	687b      	ldr	r3, [r7, #4]
 8000b62:	4618      	mov	r0, r3
 8000b64:	f000 f904 	bl	8000d70 <_ZNSt12_Vector_baseIPN7CLIMenu8menuItemESaIS2_EE12_Vector_implC1Ev>
 8000b68:	687b      	ldr	r3, [r7, #4]
 8000b6a:	4618      	mov	r0, r3
 8000b6c:	3708      	adds	r7, #8
 8000b6e:	46bd      	mov	sp, r7
 8000b70:	bd80      	pop	{r7, pc}

08000b72 <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EEC1Ev>:

      /**
       *  @brief  Creates a %vector with no elements.
       */
#if __cplusplus >= 201103L
      vector() = default;
 8000b72:	b580      	push	{r7, lr}
 8000b74:	b082      	sub	sp, #8
 8000b76:	af00      	add	r7, sp, #0
 8000b78:	6078      	str	r0, [r7, #4]
 8000b7a:	687b      	ldr	r3, [r7, #4]
 8000b7c:	4618      	mov	r0, r3
 8000b7e:	f7ff ffeb 	bl	8000b58 <_ZNSt12_Vector_baseIPN7CLIMenu8menuItemESaIS2_EEC1Ev>
 8000b82:	687b      	ldr	r3, [r7, #4]
 8000b84:	4618      	mov	r0, r3
 8000b86:	3708      	adds	r7, #8
 8000b88:	46bd      	mov	sp, r7
 8000b8a:	bd80      	pop	{r7, pc}

08000b8c <_ZN7CLIMenu4menuC1EPc>:
 8000b8c:	b580      	push	{r7, lr}
 8000b8e:	b082      	sub	sp, #8
 8000b90:	af00      	add	r7, sp, #0
 8000b92:	6078      	str	r0, [r7, #4]
 8000b94:	6039      	str	r1, [r7, #0]
 8000b96:	4a08      	ldr	r2, [pc, #32]	; (8000bb8 <_ZN7CLIMenu4menuC1EPc+0x2c>)
 8000b98:	687b      	ldr	r3, [r7, #4]
 8000b9a:	601a      	str	r2, [r3, #0]
 8000b9c:	687b      	ldr	r3, [r7, #4]
 8000b9e:	3308      	adds	r3, #8
 8000ba0:	4618      	mov	r0, r3
 8000ba2:	f7ff ffe6 	bl	8000b72 <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EEC1Ev>
 8000ba6:	687b      	ldr	r3, [r7, #4]
 8000ba8:	683a      	ldr	r2, [r7, #0]
 8000baa:	605a      	str	r2, [r3, #4]
 8000bac:	687b      	ldr	r3, [r7, #4]
 8000bae:	4618      	mov	r0, r3
 8000bb0:	3708      	adds	r7, #8
 8000bb2:	46bd      	mov	sp, r7
 8000bb4:	bd80      	pop	{r7, pc}
 8000bb6:	bf00      	nop
 8000bb8:	080066dc 	.word	0x080066dc

08000bbc <_ZN7CLIMenu4menuD1Ev>:
 8000bbc:	b580      	push	{r7, lr}
 8000bbe:	b082      	sub	sp, #8
 8000bc0:	af00      	add	r7, sp, #0
 8000bc2:	6078      	str	r0, [r7, #4]
 8000bc4:	4a06      	ldr	r2, [pc, #24]	; (8000be0 <_ZN7CLIMenu4menuD1Ev+0x24>)
 8000bc6:	687b      	ldr	r3, [r7, #4]
 8000bc8:	601a      	str	r2, [r3, #0]
 8000bca:	687b      	ldr	r3, [r7, #4]
 8000bcc:	3308      	adds	r3, #8
 8000bce:	4618      	mov	r0, r3
 8000bd0:	f000 f903 	bl	8000dda <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EED1Ev>
 8000bd4:	687b      	ldr	r3, [r7, #4]
 8000bd6:	4618      	mov	r0, r3
 8000bd8:	3708      	adds	r7, #8
 8000bda:	46bd      	mov	sp, r7
 8000bdc:	bd80      	pop	{r7, pc}
 8000bde:	bf00      	nop
 8000be0:	080066dc 	.word	0x080066dc

08000be4 <_ZN7CLIMenu4menuD0Ev>:
 8000be4:	b580      	push	{r7, lr}
 8000be6:	b082      	sub	sp, #8
 8000be8:	af00      	add	r7, sp, #0
 8000bea:	6078      	str	r0, [r7, #4]
 8000bec:	6878      	ldr	r0, [r7, #4]
 8000bee:	f7ff ffe5 	bl	8000bbc <_ZN7CLIMenu4menuD1Ev>
 8000bf2:	2114      	movs	r1, #20
 8000bf4:	6878      	ldr	r0, [r7, #4]
 8000bf6:	f004 f9e2 	bl	8004fbe <_ZdlPvj>
 8000bfa:	687b      	ldr	r3, [r7, #4]
 8000bfc:	4618      	mov	r0, r3
 8000bfe:	3708      	adds	r7, #8
 8000c00:	46bd      	mov	sp, r7
 8000c02:	bd80      	pop	{r7, pc}

08000c04 <_ZN7CLIMenu4menu7addItemEPNS_8menuItemE>:
 8000c04:	b580      	push	{r7, lr}
 8000c06:	b082      	sub	sp, #8
 8000c08:	af00      	add	r7, sp, #0
 8000c0a:	6078      	str	r0, [r7, #4]
 8000c0c:	6039      	str	r1, [r7, #0]
 8000c0e:	687b      	ldr	r3, [r7, #4]
 8000c10:	3308      	adds	r3, #8
 8000c12:	463a      	mov	r2, r7
 8000c14:	4611      	mov	r1, r2
 8000c16:	4618      	mov	r0, r3
 8000c18:	f000 f8fa 	bl	8000e10 <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE9push_backERKS2_>
 8000c1c:	bf00      	nop
 8000c1e:	3708      	adds	r7, #8
 8000c20:	46bd      	mov	sp, r7
 8000c22:	bd80      	pop	{r7, pc}

08000c24 <_ZN7CLIMenu4menu3runEb>:
 8000c24:	b590      	push	{r4, r7, lr}
 8000c26:	b087      	sub	sp, #28
 8000c28:	af00      	add	r7, sp, #0
 8000c2a:	6078      	str	r0, [r7, #4]
 8000c2c:	460b      	mov	r3, r1
 8000c2e:	70fb      	strb	r3, [r7, #3]
 8000c30:	687b      	ldr	r3, [r7, #4]
 8000c32:	685b      	ldr	r3, [r3, #4]
 8000c34:	4619      	mov	r1, r3
 8000c36:	4847      	ldr	r0, [pc, #284]	; (8000d54 <_ZN7CLIMenu4menu3runEb+0x130>)
 8000c38:	f004 fd80 	bl	800573c <iprintf>
 8000c3c:	2300      	movs	r3, #0
 8000c3e:	75bb      	strb	r3, [r7, #22]
 8000c40:	7dbc      	ldrb	r4, [r7, #22]
 8000c42:	687b      	ldr	r3, [r7, #4]
 8000c44:	3308      	adds	r3, #8
 8000c46:	4618      	mov	r0, r3
 8000c48:	f000 f907 	bl	8000e5a <_ZNKSt6vectorIPN7CLIMenu8menuItemESaIS2_EE4sizeEv>
 8000c4c:	4603      	mov	r3, r0
 8000c4e:	429c      	cmp	r4, r3
 8000c50:	bf34      	ite	cc
 8000c52:	2301      	movcc	r3, #1
 8000c54:	2300      	movcs	r3, #0
 8000c56:	b2db      	uxtb	r3, r3
 8000c58:	2b00      	cmp	r3, #0
 8000c5a:	d016      	beq.n	8000c8a <_ZN7CLIMenu4menu3runEb+0x66>
 8000c5c:	687b      	ldr	r3, [r7, #4]
 8000c5e:	3308      	adds	r3, #8
 8000c60:	7dba      	ldrb	r2, [r7, #22]
 8000c62:	4611      	mov	r1, r2
 8000c64:	4618      	mov	r0, r3
 8000c66:	f000 f908 	bl	8000e7a <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE2atEj>
 8000c6a:	4603      	mov	r3, r0
 8000c6c:	681b      	ldr	r3, [r3, #0]
 8000c6e:	613b      	str	r3, [r7, #16]
 8000c70:	693b      	ldr	r3, [r7, #16]
 8000c72:	781b      	ldrb	r3, [r3, #0]
 8000c74:	4619      	mov	r1, r3
 8000c76:	693b      	ldr	r3, [r7, #16]
 8000c78:	685b      	ldr	r3, [r3, #4]
 8000c7a:	461a      	mov	r2, r3
 8000c7c:	4836      	ldr	r0, [pc, #216]	; (8000d58 <_ZN7CLIMenu4menu3runEb+0x134>)
 8000c7e:	f004 fd5d 	bl	800573c <iprintf>
 8000c82:	7dbb      	ldrb	r3, [r7, #22]
 8000c84:	3301      	adds	r3, #1
 8000c86:	75bb      	strb	r3, [r7, #22]
 8000c88:	e7da      	b.n	8000c40 <_ZN7CLIMenu4menu3runEb+0x1c>
 8000c8a:	4834      	ldr	r0, [pc, #208]	; (8000d5c <_ZN7CLIMenu4menu3runEb+0x138>)
 8000c8c:	f004 fd56 	bl	800573c <iprintf>
 8000c90:	4b33      	ldr	r3, [pc, #204]	; (8000d60 <_ZN7CLIMenu4menu3runEb+0x13c>)
 8000c92:	681b      	ldr	r3, [r3, #0]
 8000c94:	689b      	ldr	r3, [r3, #8]
 8000c96:	4618      	mov	r0, r3
 8000c98:	f004 fb36 	bl	8005308 <fflush>
 8000c9c:	f107 030f 	add.w	r3, r7, #15
 8000ca0:	2201      	movs	r2, #1
 8000ca2:	4619      	mov	r1, r3
 8000ca4:	2000      	movs	r0, #0
 8000ca6:	f7ff fb91 	bl	80003cc <_read>
 8000caa:	7bfb      	ldrb	r3, [r7, #15]
 8000cac:	2b78      	cmp	r3, #120	; 0x78
 8000cae:	d04d      	beq.n	8000d4c <_ZN7CLIMenu4menu3runEb+0x128>
 8000cb0:	2300      	movs	r3, #0
 8000cb2:	75fb      	strb	r3, [r7, #23]
 8000cb4:	482b      	ldr	r0, [pc, #172]	; (8000d64 <_ZN7CLIMenu4menu3runEb+0x140>)
 8000cb6:	f004 fd41 	bl	800573c <iprintf>
 8000cba:	4b29      	ldr	r3, [pc, #164]	; (8000d60 <_ZN7CLIMenu4menu3runEb+0x13c>)
 8000cbc:	681b      	ldr	r3, [r3, #0]
 8000cbe:	689b      	ldr	r3, [r3, #8]
 8000cc0:	4618      	mov	r0, r3
 8000cc2:	f004 fb21 	bl	8005308 <fflush>
 8000cc6:	2300      	movs	r3, #0
 8000cc8:	757b      	strb	r3, [r7, #21]
 8000cca:	7d7c      	ldrb	r4, [r7, #21]
 8000ccc:	687b      	ldr	r3, [r7, #4]
 8000cce:	3308      	adds	r3, #8
 8000cd0:	4618      	mov	r0, r3
 8000cd2:	f000 f8c2 	bl	8000e5a <_ZNKSt6vectorIPN7CLIMenu8menuItemESaIS2_EE4sizeEv>
 8000cd6:	4603      	mov	r3, r0
 8000cd8:	429c      	cmp	r4, r3
 8000cda:	bf34      	ite	cc
 8000cdc:	2301      	movcc	r3, #1
 8000cde:	2300      	movcs	r3, #0
 8000ce0:	b2db      	uxtb	r3, r3
 8000ce2:	2b00      	cmp	r3, #0
 8000ce4:	d027      	beq.n	8000d36 <_ZN7CLIMenu4menu3runEb+0x112>
 8000ce6:	687b      	ldr	r3, [r7, #4]
 8000ce8:	3308      	adds	r3, #8
 8000cea:	7d7a      	ldrb	r2, [r7, #21]
 8000cec:	4611      	mov	r1, r2
 8000cee:	4618      	mov	r0, r3
 8000cf0:	f000 f8c3 	bl	8000e7a <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE2atEj>
 8000cf4:	4603      	mov	r3, r0
 8000cf6:	681b      	ldr	r3, [r3, #0]
 8000cf8:	613b      	str	r3, [r7, #16]
 8000cfa:	693b      	ldr	r3, [r7, #16]
 8000cfc:	781a      	ldrb	r2, [r3, #0]
 8000cfe:	7bfb      	ldrb	r3, [r7, #15]
 8000d00:	429a      	cmp	r2, r3
 8000d02:	d114      	bne.n	8000d2e <_ZN7CLIMenu4menu3runEb+0x10a>
 8000d04:	2301      	movs	r3, #1
 8000d06:	75fb      	strb	r3, [r7, #23]
 8000d08:	693b      	ldr	r3, [r7, #16]
 8000d0a:	689b      	ldr	r3, [r3, #8]
 8000d0c:	2b00      	cmp	r3, #0
 8000d0e:	d00b      	beq.n	8000d28 <_ZN7CLIMenu4menu3runEb+0x104>
 8000d10:	693b      	ldr	r3, [r7, #16]
 8000d12:	689b      	ldr	r3, [r3, #8]
 8000d14:	7bfa      	ldrb	r2, [r7, #15]
 8000d16:	4610      	mov	r0, r2
 8000d18:	4798      	blx	r3
 8000d1a:	78fb      	ldrb	r3, [r7, #3]
 8000d1c:	f083 0301 	eor.w	r3, r3, #1
 8000d20:	b2db      	uxtb	r3, r3
 8000d22:	2b00      	cmp	r3, #0
 8000d24:	d003      	beq.n	8000d2e <_ZN7CLIMenu4menu3runEb+0x10a>
 8000d26:	e012      	b.n	8000d4e <_ZN7CLIMenu4menu3runEb+0x12a>
 8000d28:	480f      	ldr	r0, [pc, #60]	; (8000d68 <_ZN7CLIMenu4menu3runEb+0x144>)
 8000d2a:	f004 fd8d 	bl	8005848 <puts>
 8000d2e:	7d7b      	ldrb	r3, [r7, #21]
 8000d30:	3301      	adds	r3, #1
 8000d32:	757b      	strb	r3, [r7, #21]
 8000d34:	e7c9      	b.n	8000cca <_ZN7CLIMenu4menu3runEb+0xa6>
 8000d36:	7dfb      	ldrb	r3, [r7, #23]
 8000d38:	f083 0301 	eor.w	r3, r3, #1
 8000d3c:	b2db      	uxtb	r3, r3
 8000d3e:	2b00      	cmp	r3, #0
 8000d40:	f43f af76 	beq.w	8000c30 <_ZN7CLIMenu4menu3runEb+0xc>
 8000d44:	4809      	ldr	r0, [pc, #36]	; (8000d6c <_ZN7CLIMenu4menu3runEb+0x148>)
 8000d46:	f004 fd7f 	bl	8005848 <puts>
 8000d4a:	e771      	b.n	8000c30 <_ZN7CLIMenu4menu3runEb+0xc>
 8000d4c:	bf00      	nop
 8000d4e:	371c      	adds	r7, #28
 8000d50:	46bd      	mov	sp, r7
 8000d52:	bd90      	pop	{r4, r7, pc}
 8000d54:	080065fc 	.word	0x080065fc
 8000d58:	08006604 	.word	0x08006604
 8000d5c:	08006610 	.word	0x08006610
 8000d60:	2000000c 	.word	0x2000000c
 8000d64:	08006618 	.word	0x08006618
 8000d68:	0800661c 	.word	0x0800661c
 8000d6c:	0800664c 	.word	0x0800664c

08000d70 <_ZNSt12_Vector_baseIPN7CLIMenu8menuItemESaIS2_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 8000d70:	b580      	push	{r7, lr}
 8000d72:	b082      	sub	sp, #8
 8000d74:	af00      	add	r7, sp, #0
 8000d76:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 8000d78:	6878      	ldr	r0, [r7, #4]
 8000d7a:	f000 f890 	bl	8000e9e <_ZNSaIPN7CLIMenu8menuItemEEC1Ev>
 8000d7e:	687b      	ldr	r3, [r7, #4]
 8000d80:	4618      	mov	r0, r3
 8000d82:	f000 f898 	bl	8000eb6 <_ZNSt12_Vector_baseIPN7CLIMenu8menuItemESaIS2_EE17_Vector_impl_dataC1Ev>
	{ }
 8000d86:	687b      	ldr	r3, [r7, #4]
 8000d88:	4618      	mov	r0, r3
 8000d8a:	3708      	adds	r7, #8
 8000d8c:	46bd      	mov	sp, r7
 8000d8e:	bd80      	pop	{r7, pc}

08000d90 <_ZNSaIPN7CLIMenu8menuItemEED1Ev>:

      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

      ~allocator() _GLIBCXX_NOTHROW { }
 8000d90:	b580      	push	{r7, lr}
 8000d92:	b082      	sub	sp, #8
 8000d94:	af00      	add	r7, sp, #0
 8000d96:	6078      	str	r0, [r7, #4]
 8000d98:	6878      	ldr	r0, [r7, #4]
 8000d9a:	f000 f8a0 	bl	8000ede <_ZN9__gnu_cxx13new_allocatorIPN7CLIMenu8menuItemEED1Ev>
 8000d9e:	687b      	ldr	r3, [r7, #4]
 8000da0:	4618      	mov	r0, r3
 8000da2:	3708      	adds	r7, #8
 8000da4:	46bd      	mov	sp, r7
 8000da6:	bd80      	pop	{r7, pc}

08000da8 <_ZNSt12_Vector_baseIPN7CLIMenu8menuItemESaIS2_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 8000da8:	b580      	push	{r7, lr}
 8000daa:	b082      	sub	sp, #8
 8000dac:	af00      	add	r7, sp, #0
 8000dae:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 8000db0:	687b      	ldr	r3, [r7, #4]
 8000db2:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 8000db4:	687b      	ldr	r3, [r7, #4]
 8000db6:	689a      	ldr	r2, [r3, #8]
 8000db8:	687b      	ldr	r3, [r7, #4]
 8000dba:	681b      	ldr	r3, [r3, #0]
 8000dbc:	1ad3      	subs	r3, r2, r3
 8000dbe:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 8000dc0:	461a      	mov	r2, r3
 8000dc2:	6878      	ldr	r0, [r7, #4]
 8000dc4:	f000 f896 	bl	8000ef4 <_ZNSt12_Vector_baseIPN7CLIMenu8menuItemESaIS2_EE13_M_deallocateEPS2_j>
      }
 8000dc8:	687b      	ldr	r3, [r7, #4]
 8000dca:	4618      	mov	r0, r3
 8000dcc:	f7ff feb8 	bl	8000b40 <_ZNSt12_Vector_baseIPN7CLIMenu8menuItemESaIS2_EE12_Vector_implD1Ev>
 8000dd0:	687b      	ldr	r3, [r7, #4]
 8000dd2:	4618      	mov	r0, r3
 8000dd4:	3708      	adds	r7, #8
 8000dd6:	46bd      	mov	sp, r7
 8000dd8:	bd80      	pop	{r7, pc}

08000dda <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EED1Ev>:
       *  The dtor only erases the elements, and note that if the
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      ~vector() _GLIBCXX_NOEXCEPT
 8000dda:	b5b0      	push	{r4, r5, r7, lr}
 8000ddc:	b082      	sub	sp, #8
 8000dde:	af00      	add	r7, sp, #0
 8000de0:	6078      	str	r0, [r7, #4]
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8000de2:	687b      	ldr	r3, [r7, #4]
 8000de4:	681c      	ldr	r4, [r3, #0]
 8000de6:	687b      	ldr	r3, [r7, #4]
 8000de8:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 8000dea:	687b      	ldr	r3, [r7, #4]
 8000dec:	4618      	mov	r0, r3
 8000dee:	f000 f894 	bl	8000f1a <_ZNSt12_Vector_baseIPN7CLIMenu8menuItemESaIS2_EE19_M_get_Tp_allocatorEv>
 8000df2:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8000df4:	461a      	mov	r2, r3
 8000df6:	4629      	mov	r1, r5
 8000df8:	4620      	mov	r0, r4
 8000dfa:	f000 f899 	bl	8000f30 <_ZSt8_DestroyIPPN7CLIMenu8menuItemES2_EvT_S4_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
 8000dfe:	687b      	ldr	r3, [r7, #4]
 8000e00:	4618      	mov	r0, r3
 8000e02:	f7ff ffd1 	bl	8000da8 <_ZNSt12_Vector_baseIPN7CLIMenu8menuItemESaIS2_EED1Ev>
 8000e06:	687b      	ldr	r3, [r7, #4]
 8000e08:	4618      	mov	r0, r3
 8000e0a:	3708      	adds	r7, #8
 8000e0c:	46bd      	mov	sp, r7
 8000e0e:	bdb0      	pop	{r4, r5, r7, pc}

08000e10 <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE9push_backERKS2_>:
       *  to it.  Due to the nature of a %vector this operation can be
       *  done in constant time if the %vector has preallocated space
       *  available.
       */
      void
      push_back(const value_type& __x)
 8000e10:	b580      	push	{r7, lr}
 8000e12:	b082      	sub	sp, #8
 8000e14:	af00      	add	r7, sp, #0
 8000e16:	6078      	str	r0, [r7, #4]
 8000e18:	6039      	str	r1, [r7, #0]
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 8000e1a:	687b      	ldr	r3, [r7, #4]
 8000e1c:	685a      	ldr	r2, [r3, #4]
 8000e1e:	687b      	ldr	r3, [r7, #4]
 8000e20:	689b      	ldr	r3, [r3, #8]
 8000e22:	429a      	cmp	r2, r3
 8000e24:	d00c      	beq.n	8000e40 <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE9push_backERKS2_+0x30>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 8000e26:	6878      	ldr	r0, [r7, #4]
 8000e28:	687b      	ldr	r3, [r7, #4]
 8000e2a:	685b      	ldr	r3, [r3, #4]
 8000e2c:	683a      	ldr	r2, [r7, #0]
 8000e2e:	4619      	mov	r1, r3
 8000e30:	f000 f88c 	bl	8000f4c <_ZNSt16allocator_traitsISaIPN7CLIMenu8menuItemEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_>
				     __x);
	    ++this->_M_impl._M_finish;
 8000e34:	687b      	ldr	r3, [r7, #4]
 8000e36:	685b      	ldr	r3, [r3, #4]
 8000e38:	1d1a      	adds	r2, r3, #4
 8000e3a:	687b      	ldr	r3, [r7, #4]
 8000e3c:	605a      	str	r2, [r3, #4]
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), __x);
      }
 8000e3e:	e008      	b.n	8000e52 <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE9push_backERKS2_+0x42>
	  _M_realloc_insert(end(), __x);
 8000e40:	6878      	ldr	r0, [r7, #4]
 8000e42:	f000 f896 	bl	8000f72 <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE3endEv>
 8000e46:	4603      	mov	r3, r0
 8000e48:	683a      	ldr	r2, [r7, #0]
 8000e4a:	4619      	mov	r1, r3
 8000e4c:	6878      	ldr	r0, [r7, #4]
 8000e4e:	f000 f8b7 	bl	8000fc0 <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
      }
 8000e52:	bf00      	nop
 8000e54:	3708      	adds	r7, #8
 8000e56:	46bd      	mov	sp, r7
 8000e58:	bd80      	pop	{r7, pc}

08000e5a <_ZNKSt6vectorIPN7CLIMenu8menuItemESaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8000e5a:	b480      	push	{r7}
 8000e5c:	b083      	sub	sp, #12
 8000e5e:	af00      	add	r7, sp, #0
 8000e60:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8000e62:	687b      	ldr	r3, [r7, #4]
 8000e64:	685a      	ldr	r2, [r3, #4]
 8000e66:	687b      	ldr	r3, [r7, #4]
 8000e68:	681b      	ldr	r3, [r3, #0]
 8000e6a:	1ad3      	subs	r3, r2, r3
 8000e6c:	109b      	asrs	r3, r3, #2
 8000e6e:	4618      	mov	r0, r3
 8000e70:	370c      	adds	r7, #12
 8000e72:	46bd      	mov	sp, r7
 8000e74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e78:	4770      	bx	lr

08000e7a <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE2atEj>:
      at(size_type __n)
 8000e7a:	b580      	push	{r7, lr}
 8000e7c:	b082      	sub	sp, #8
 8000e7e:	af00      	add	r7, sp, #0
 8000e80:	6078      	str	r0, [r7, #4]
 8000e82:	6039      	str	r1, [r7, #0]
	_M_range_check(__n);
 8000e84:	6839      	ldr	r1, [r7, #0]
 8000e86:	6878      	ldr	r0, [r7, #4]
 8000e88:	f000 f956 	bl	8001138 <_ZNKSt6vectorIPN7CLIMenu8menuItemESaIS2_EE14_M_range_checkEj>
	return (*this)[__n];
 8000e8c:	6839      	ldr	r1, [r7, #0]
 8000e8e:	6878      	ldr	r0, [r7, #4]
 8000e90:	f000 f972 	bl	8001178 <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EEixEj>
 8000e94:	4603      	mov	r3, r0
      }
 8000e96:	4618      	mov	r0, r3
 8000e98:	3708      	adds	r7, #8
 8000e9a:	46bd      	mov	sp, r7
 8000e9c:	bd80      	pop	{r7, pc}

08000e9e <_ZNSaIPN7CLIMenu8menuItemEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 8000e9e:	b580      	push	{r7, lr}
 8000ea0:	b082      	sub	sp, #8
 8000ea2:	af00      	add	r7, sp, #0
 8000ea4:	6078      	str	r0, [r7, #4]
 8000ea6:	6878      	ldr	r0, [r7, #4]
 8000ea8:	f000 f976 	bl	8001198 <_ZN9__gnu_cxx13new_allocatorIPN7CLIMenu8menuItemEEC1Ev>
 8000eac:	687b      	ldr	r3, [r7, #4]
 8000eae:	4618      	mov	r0, r3
 8000eb0:	3708      	adds	r7, #8
 8000eb2:	46bd      	mov	sp, r7
 8000eb4:	bd80      	pop	{r7, pc}

08000eb6 <_ZNSt12_Vector_baseIPN7CLIMenu8menuItemESaIS2_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 8000eb6:	b480      	push	{r7}
 8000eb8:	b083      	sub	sp, #12
 8000eba:	af00      	add	r7, sp, #0
 8000ebc:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 8000ebe:	687b      	ldr	r3, [r7, #4]
 8000ec0:	2200      	movs	r2, #0
 8000ec2:	601a      	str	r2, [r3, #0]
 8000ec4:	687b      	ldr	r3, [r7, #4]
 8000ec6:	2200      	movs	r2, #0
 8000ec8:	605a      	str	r2, [r3, #4]
 8000eca:	687b      	ldr	r3, [r7, #4]
 8000ecc:	2200      	movs	r2, #0
 8000ece:	609a      	str	r2, [r3, #8]
	{ }
 8000ed0:	687b      	ldr	r3, [r7, #4]
 8000ed2:	4618      	mov	r0, r3
 8000ed4:	370c      	adds	r7, #12
 8000ed6:	46bd      	mov	sp, r7
 8000ed8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000edc:	4770      	bx	lr

08000ede <_ZN9__gnu_cxx13new_allocatorIPN7CLIMenu8menuItemEED1Ev>:

      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8000ede:	b480      	push	{r7}
 8000ee0:	b083      	sub	sp, #12
 8000ee2:	af00      	add	r7, sp, #0
 8000ee4:	6078      	str	r0, [r7, #4]
 8000ee6:	687b      	ldr	r3, [r7, #4]
 8000ee8:	4618      	mov	r0, r3
 8000eea:	370c      	adds	r7, #12
 8000eec:	46bd      	mov	sp, r7
 8000eee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ef2:	4770      	bx	lr

08000ef4 <_ZNSt12_Vector_baseIPN7CLIMenu8menuItemESaIS2_EE13_M_deallocateEPS2_j>:
      _M_deallocate(pointer __p, size_t __n)
 8000ef4:	b580      	push	{r7, lr}
 8000ef6:	b084      	sub	sp, #16
 8000ef8:	af00      	add	r7, sp, #0
 8000efa:	60f8      	str	r0, [r7, #12]
 8000efc:	60b9      	str	r1, [r7, #8]
 8000efe:	607a      	str	r2, [r7, #4]
	if (__p)
 8000f00:	68bb      	ldr	r3, [r7, #8]
 8000f02:	2b00      	cmp	r3, #0
 8000f04:	d005      	beq.n	8000f12 <_ZNSt12_Vector_baseIPN7CLIMenu8menuItemESaIS2_EE13_M_deallocateEPS2_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 8000f06:	68fb      	ldr	r3, [r7, #12]
 8000f08:	687a      	ldr	r2, [r7, #4]
 8000f0a:	68b9      	ldr	r1, [r7, #8]
 8000f0c:	4618      	mov	r0, r3
 8000f0e:	f000 f94e 	bl	80011ae <_ZNSt16allocator_traitsISaIPN7CLIMenu8menuItemEEE10deallocateERS3_PS2_j>
      }
 8000f12:	bf00      	nop
 8000f14:	3710      	adds	r7, #16
 8000f16:	46bd      	mov	sp, r7
 8000f18:	bd80      	pop	{r7, pc}

08000f1a <_ZNSt12_Vector_baseIPN7CLIMenu8menuItemESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 8000f1a:	b480      	push	{r7}
 8000f1c:	b083      	sub	sp, #12
 8000f1e:	af00      	add	r7, sp, #0
 8000f20:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8000f22:	687b      	ldr	r3, [r7, #4]
 8000f24:	4618      	mov	r0, r3
 8000f26:	370c      	adds	r7, #12
 8000f28:	46bd      	mov	sp, r7
 8000f2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f2e:	4770      	bx	lr

08000f30 <_ZSt8_DestroyIPPN7CLIMenu8menuItemES2_EvT_S4_RSaIT0_E>:
	__traits::destroy(__alloc, std::__addressof(*__first));
    }

  template<typename _ForwardIterator, typename _Tp>
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 8000f30:	b580      	push	{r7, lr}
 8000f32:	b084      	sub	sp, #16
 8000f34:	af00      	add	r7, sp, #0
 8000f36:	60f8      	str	r0, [r7, #12]
 8000f38:	60b9      	str	r1, [r7, #8]
 8000f3a:	607a      	str	r2, [r7, #4]
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
 8000f3c:	68b9      	ldr	r1, [r7, #8]
 8000f3e:	68f8      	ldr	r0, [r7, #12]
 8000f40:	f000 f944 	bl	80011cc <_ZSt8_DestroyIPPN7CLIMenu8menuItemEEvT_S4_>
    }
 8000f44:	bf00      	nop
 8000f46:	3710      	adds	r7, #16
 8000f48:	46bd      	mov	sp, r7
 8000f4a:	bd80      	pop	{r7, pc}

08000f4c <_ZNSt16allocator_traitsISaIPN7CLIMenu8menuItemEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_>:
       *
       *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
      */
      template<typename _Up, typename... _Args>
	static void
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8000f4c:	b580      	push	{r7, lr}
 8000f4e:	b084      	sub	sp, #16
 8000f50:	af00      	add	r7, sp, #0
 8000f52:	60f8      	str	r0, [r7, #12]
 8000f54:	60b9      	str	r1, [r7, #8]
 8000f56:	607a      	str	r2, [r7, #4]
	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8000f58:	6878      	ldr	r0, [r7, #4]
 8000f5a:	f000 f944 	bl	80011e6 <_ZSt7forwardIRKPN7CLIMenu8menuItemEEOT_RNSt16remove_referenceIS5_E4typeE>
 8000f5e:	4603      	mov	r3, r0
 8000f60:	461a      	mov	r2, r3
 8000f62:	68b9      	ldr	r1, [r7, #8]
 8000f64:	68f8      	ldr	r0, [r7, #12]
 8000f66:	f000 f949 	bl	80011fc <_ZN9__gnu_cxx13new_allocatorIPN7CLIMenu8menuItemEE9constructIS3_JRKS3_EEEvPT_DpOT0_>
 8000f6a:	bf00      	nop
 8000f6c:	3710      	adds	r7, #16
 8000f6e:	46bd      	mov	sp, r7
 8000f70:	bd80      	pop	{r7, pc}

08000f72 <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8000f72:	b580      	push	{r7, lr}
 8000f74:	b084      	sub	sp, #16
 8000f76:	af00      	add	r7, sp, #0
 8000f78:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 8000f7a:	687b      	ldr	r3, [r7, #4]
 8000f7c:	1d1a      	adds	r2, r3, #4
 8000f7e:	f107 030c 	add.w	r3, r7, #12
 8000f82:	4611      	mov	r1, r2
 8000f84:	4618      	mov	r0, r3
 8000f86:	f000 f94f 	bl	8001228 <_ZN9__gnu_cxx17__normal_iteratorIPPN7CLIMenu8menuItemESt6vectorIS3_SaIS3_EEEC1ERKS4_>
 8000f8a:	68fb      	ldr	r3, [r7, #12]
 8000f8c:	4618      	mov	r0, r3
 8000f8e:	3710      	adds	r7, #16
 8000f90:	46bd      	mov	sp, r7
 8000f92:	bd80      	pop	{r7, pc}

08000f94 <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE15_S_use_relocateEv>:
      _S_use_relocate()
 8000f94:	b580      	push	{r7, lr}
 8000f96:	b082      	sub	sp, #8
 8000f98:	af00      	add	r7, sp, #0
	return _S_nothrow_relocate(__is_move_insertable<_Tp_alloc_type>{});
 8000f9a:	4618      	mov	r0, r3
 8000f9c:	f000 f805 	bl	8000faa <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE19_S_nothrow_relocateESt17integral_constantIbLb1EE>
 8000fa0:	4603      	mov	r3, r0
      }
 8000fa2:	4618      	mov	r0, r3
 8000fa4:	3708      	adds	r7, #8
 8000fa6:	46bd      	mov	sp, r7
 8000fa8:	bd80      	pop	{r7, pc}

08000faa <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE19_S_nothrow_relocateESt17integral_constantIbLb1EE>:
      _S_nothrow_relocate(true_type)
 8000faa:	b480      	push	{r7}
 8000fac:	b083      	sub	sp, #12
 8000fae:	af00      	add	r7, sp, #0
 8000fb0:	7138      	strb	r0, [r7, #4]
					  std::declval<_Tp_alloc_type&>()));
 8000fb2:	2301      	movs	r3, #1
      }
 8000fb4:	4618      	mov	r0, r3
 8000fb6:	370c      	adds	r7, #12
 8000fb8:	46bd      	mov	sp, r7
 8000fba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fbe:	4770      	bx	lr

08000fc0 <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      void
      vector<_Tp, _Alloc>::
 8000fc0:	b5b0      	push	{r4, r5, r7, lr}
 8000fc2:	b08c      	sub	sp, #48	; 0x30
 8000fc4:	af00      	add	r7, sp, #0
 8000fc6:	60f8      	str	r0, [r7, #12]
 8000fc8:	60b9      	str	r1, [r7, #8]
 8000fca:	607a      	str	r2, [r7, #4]
    void
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
 8000fcc:	4a59      	ldr	r2, [pc, #356]	; (8001134 <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x174>)
 8000fce:	2101      	movs	r1, #1
 8000fd0:	68f8      	ldr	r0, [r7, #12]
 8000fd2:	f000 f939 	bl	8001248 <_ZNKSt6vectorIPN7CLIMenu8menuItemESaIS2_EE12_M_check_lenEjPKc>
 8000fd6:	62b8      	str	r0, [r7, #40]	; 0x28
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
      pointer __old_start = this->_M_impl._M_start;
 8000fd8:	68fb      	ldr	r3, [r7, #12]
 8000fda:	681b      	ldr	r3, [r3, #0]
 8000fdc:	627b      	str	r3, [r7, #36]	; 0x24
      pointer __old_finish = this->_M_impl._M_finish;
 8000fde:	68fb      	ldr	r3, [r7, #12]
 8000fe0:	685b      	ldr	r3, [r3, #4]
 8000fe2:	623b      	str	r3, [r7, #32]
      const size_type __elems_before = __position - begin();
 8000fe4:	68f8      	ldr	r0, [r7, #12]
 8000fe6:	f000 f976 	bl	80012d6 <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE5beginEv>
 8000fea:	4603      	mov	r3, r0
 8000fec:	617b      	str	r3, [r7, #20]
 8000fee:	f107 0214 	add.w	r2, r7, #20
 8000ff2:	f107 0308 	add.w	r3, r7, #8
 8000ff6:	4611      	mov	r1, r2
 8000ff8:	4618      	mov	r0, r3
 8000ffa:	f000 f97c 	bl	80012f6 <_ZN9__gnu_cxxmiIPPN7CLIMenu8menuItemESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_>
 8000ffe:	4603      	mov	r3, r0
 8001000:	61fb      	str	r3, [r7, #28]
      pointer __new_start(this->_M_allocate(__len));
 8001002:	68fb      	ldr	r3, [r7, #12]
 8001004:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8001006:	4618      	mov	r0, r3
 8001008:	f000 f98a 	bl	8001320 <_ZNSt12_Vector_baseIPN7CLIMenu8menuItemESaIS2_EE11_M_allocateEj>
 800100c:	61b8      	str	r0, [r7, #24]
      pointer __new_finish(__new_start);
 800100e:	69bb      	ldr	r3, [r7, #24]
 8001010:	62fb      	str	r3, [r7, #44]	; 0x2c
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
 8001012:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 8001014:	69fb      	ldr	r3, [r7, #28]
 8001016:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 8001018:	69ba      	ldr	r2, [r7, #24]
 800101a:	18d5      	adds	r5, r2, r3
 800101c:	6878      	ldr	r0, [r7, #4]
 800101e:	f000 f8e2 	bl	80011e6 <_ZSt7forwardIRKPN7CLIMenu8menuItemEEOT_RNSt16remove_referenceIS5_E4typeE>
 8001022:	4603      	mov	r3, r0
 8001024:	461a      	mov	r2, r3
 8001026:	4629      	mov	r1, r5
 8001028:	4620      	mov	r0, r4
 800102a:	f7ff ff8f 	bl	8000f4c <_ZNSt16allocator_traitsISaIPN7CLIMenu8menuItemEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
 800102e:	2300      	movs	r3, #0
 8001030:	62fb      	str	r3, [r7, #44]	; 0x2c

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
 8001032:	f7ff ffaf 	bl	8000f94 <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE15_S_use_relocateEv>
 8001036:	4603      	mov	r3, r0
 8001038:	2b00      	cmp	r3, #0
 800103a:	d027      	beq.n	800108c <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xcc>
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
 800103c:	f107 0308 	add.w	r3, r7, #8
 8001040:	4618      	mov	r0, r3
 8001042:	f000 f995 	bl	8001370 <_ZNK9__gnu_cxx17__normal_iteratorIPPN7CLIMenu8menuItemESt6vectorIS3_SaIS3_EEE4baseEv>
 8001046:	4603      	mov	r3, r0
 8001048:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 800104a:	68fb      	ldr	r3, [r7, #12]
 800104c:	4618      	mov	r0, r3
 800104e:	f7ff ff64 	bl	8000f1a <_ZNSt12_Vector_baseIPN7CLIMenu8menuItemESaIS2_EE19_M_get_Tp_allocatorEv>
 8001052:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 8001054:	69ba      	ldr	r2, [r7, #24]
 8001056:	4621      	mov	r1, r4
 8001058:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800105a:	f000 f975 	bl	8001348 <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_>
 800105e:	62f8      	str	r0, [r7, #44]	; 0x2c

	      ++__new_finish;
 8001060:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001062:	3304      	adds	r3, #4
 8001064:	62fb      	str	r3, [r7, #44]	; 0x2c

	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8001066:	f107 0308 	add.w	r3, r7, #8
 800106a:	4618      	mov	r0, r3
 800106c:	f000 f980 	bl	8001370 <_ZNK9__gnu_cxx17__normal_iteratorIPPN7CLIMenu8menuItemESt6vectorIS3_SaIS3_EEE4baseEv>
 8001070:	4603      	mov	r3, r0
 8001072:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 8001074:	68fb      	ldr	r3, [r7, #12]
 8001076:	4618      	mov	r0, r3
 8001078:	f7ff ff4f 	bl	8000f1a <_ZNSt12_Vector_baseIPN7CLIMenu8menuItemESaIS2_EE19_M_get_Tp_allocatorEv>
 800107c:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 800107e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001080:	6a39      	ldr	r1, [r7, #32]
 8001082:	4620      	mov	r0, r4
 8001084:	f000 f960 	bl	8001348 <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_>
 8001088:	62f8      	str	r0, [r7, #44]	; 0x2c
 800108a:	e026      	b.n	80010da <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x11a>
	  else
#endif
	    {
	      __new_finish
		= std::__uninitialized_move_if_noexcept_a
		(__old_start, __position.base(),
 800108c:	f107 0308 	add.w	r3, r7, #8
 8001090:	4618      	mov	r0, r3
 8001092:	f000 f96d 	bl	8001370 <_ZNK9__gnu_cxx17__normal_iteratorIPPN7CLIMenu8menuItemESt6vectorIS3_SaIS3_EEE4baseEv>
 8001096:	4603      	mov	r3, r0
 8001098:	681c      	ldr	r4, [r3, #0]
		 __new_start, _M_get_Tp_allocator());
 800109a:	68fb      	ldr	r3, [r7, #12]
 800109c:	4618      	mov	r0, r3
 800109e:	f7ff ff3c 	bl	8000f1a <_ZNSt12_Vector_baseIPN7CLIMenu8menuItemESaIS2_EE19_M_get_Tp_allocatorEv>
 80010a2:	4603      	mov	r3, r0
		(__old_start, __position.base(),
 80010a4:	69ba      	ldr	r2, [r7, #24]
 80010a6:	4621      	mov	r1, r4
 80010a8:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80010aa:	f000 f96c 	bl	8001386 <_ZSt34__uninitialized_move_if_noexcept_aIPPN7CLIMenu8menuItemES3_SaIS2_EET0_T_S6_S5_RT1_>
 80010ae:	62f8      	str	r0, [r7, #44]	; 0x2c

	      ++__new_finish;
 80010b0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80010b2:	3304      	adds	r3, #4
 80010b4:	62fb      	str	r3, [r7, #44]	; 0x2c

	      __new_finish
		= std::__uninitialized_move_if_noexcept_a
		(__position.base(), __old_finish,
 80010b6:	f107 0308 	add.w	r3, r7, #8
 80010ba:	4618      	mov	r0, r3
 80010bc:	f000 f958 	bl	8001370 <_ZNK9__gnu_cxx17__normal_iteratorIPPN7CLIMenu8menuItemESt6vectorIS3_SaIS3_EEE4baseEv>
 80010c0:	4603      	mov	r3, r0
 80010c2:	681c      	ldr	r4, [r3, #0]
		 __new_finish, _M_get_Tp_allocator());
 80010c4:	68fb      	ldr	r3, [r7, #12]
 80010c6:	4618      	mov	r0, r3
 80010c8:	f7ff ff27 	bl	8000f1a <_ZNSt12_Vector_baseIPN7CLIMenu8menuItemESaIS2_EE19_M_get_Tp_allocatorEv>
 80010cc:	4603      	mov	r3, r0
		(__position.base(), __old_finish,
 80010ce:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80010d0:	6a39      	ldr	r1, [r7, #32]
 80010d2:	4620      	mov	r0, r4
 80010d4:	f000 f957 	bl	8001386 <_ZSt34__uninitialized_move_if_noexcept_aIPPN7CLIMenu8menuItemES3_SaIS2_EET0_T_S6_S5_RT1_>
 80010d8:	62f8      	str	r0, [r7, #44]	; 0x2c
	    std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
	  _M_deallocate(__new_start, __len);
	  __throw_exception_again;
	}
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
 80010da:	f7ff ff5b 	bl	8000f94 <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE15_S_use_relocateEv>
 80010de:	4603      	mov	r3, r0
 80010e0:	f083 0301 	eor.w	r3, r3, #1
 80010e4:	b2db      	uxtb	r3, r3
 80010e6:	2b00      	cmp	r3, #0
 80010e8:	d009      	beq.n	80010fe <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x13e>
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
 80010ea:	68fb      	ldr	r3, [r7, #12]
 80010ec:	4618      	mov	r0, r3
 80010ee:	f7ff ff14 	bl	8000f1a <_ZNSt12_Vector_baseIPN7CLIMenu8menuItemESaIS2_EE19_M_get_Tp_allocatorEv>
 80010f2:	4603      	mov	r3, r0
 80010f4:	461a      	mov	r2, r3
 80010f6:	6a39      	ldr	r1, [r7, #32]
 80010f8:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80010fa:	f7ff ff19 	bl	8000f30 <_ZSt8_DestroyIPPN7CLIMenu8menuItemES2_EvT_S4_RSaIT0_E>
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
 80010fe:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 8001100:	68fb      	ldr	r3, [r7, #12]
 8001102:	689a      	ldr	r2, [r3, #8]
 8001104:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001106:	1ad3      	subs	r3, r2, r3
 8001108:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 800110a:	461a      	mov	r2, r3
 800110c:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800110e:	f7ff fef1 	bl	8000ef4 <_ZNSt12_Vector_baseIPN7CLIMenu8menuItemESaIS2_EE13_M_deallocateEPS2_j>
      this->_M_impl._M_start = __new_start;
 8001112:	68fb      	ldr	r3, [r7, #12]
 8001114:	69ba      	ldr	r2, [r7, #24]
 8001116:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 8001118:	68fb      	ldr	r3, [r7, #12]
 800111a:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800111c:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 800111e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001120:	009b      	lsls	r3, r3, #2
 8001122:	69ba      	ldr	r2, [r7, #24]
 8001124:	441a      	add	r2, r3
 8001126:	68fb      	ldr	r3, [r7, #12]
 8001128:	609a      	str	r2, [r3, #8]
    }
 800112a:	bf00      	nop
 800112c:	3730      	adds	r7, #48	; 0x30
 800112e:	46bd      	mov	sp, r7
 8001130:	bdb0      	pop	{r4, r5, r7, pc}
 8001132:	bf00      	nop
 8001134:	0800666c 	.word	0x0800666c

08001138 <_ZNKSt6vectorIPN7CLIMenu8menuItemESaIS2_EE14_M_range_checkEj>:
      _M_range_check(size_type __n) const
 8001138:	b580      	push	{r7, lr}
 800113a:	b082      	sub	sp, #8
 800113c:	af00      	add	r7, sp, #0
 800113e:	6078      	str	r0, [r7, #4]
 8001140:	6039      	str	r1, [r7, #0]
	if (__n >= this->size())
 8001142:	6878      	ldr	r0, [r7, #4]
 8001144:	f7ff fe89 	bl	8000e5a <_ZNKSt6vectorIPN7CLIMenu8menuItemESaIS2_EE4sizeEv>
 8001148:	4602      	mov	r2, r0
 800114a:	683b      	ldr	r3, [r7, #0]
 800114c:	4293      	cmp	r3, r2
 800114e:	bf2c      	ite	cs
 8001150:	2301      	movcs	r3, #1
 8001152:	2300      	movcc	r3, #0
 8001154:	b2db      	uxtb	r3, r3
 8001156:	2b00      	cmp	r3, #0
 8001158:	d008      	beq.n	800116c <_ZNKSt6vectorIPN7CLIMenu8menuItemESaIS2_EE14_M_range_checkEj+0x34>
	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
 800115a:	6878      	ldr	r0, [r7, #4]
 800115c:	f7ff fe7d 	bl	8000e5a <_ZNKSt6vectorIPN7CLIMenu8menuItemESaIS2_EE4sizeEv>
 8001160:	4603      	mov	r3, r0
 8001162:	461a      	mov	r2, r3
 8001164:	6839      	ldr	r1, [r7, #0]
 8001166:	4803      	ldr	r0, [pc, #12]	; (8001174 <_ZNKSt6vectorIPN7CLIMenu8menuItemESaIS2_EE14_M_range_checkEj+0x3c>)
 8001168:	f003 ff45 	bl	8004ff6 <_ZSt24__throw_out_of_range_fmtPKcz>
      }
 800116c:	bf00      	nop
 800116e:	3708      	adds	r7, #8
 8001170:	46bd      	mov	sp, r7
 8001172:	bd80      	pop	{r7, pc}
 8001174:	08006688 	.word	0x08006688

08001178 <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 8001178:	b480      	push	{r7}
 800117a:	b083      	sub	sp, #12
 800117c:	af00      	add	r7, sp, #0
 800117e:	6078      	str	r0, [r7, #4]
 8001180:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 8001182:	687b      	ldr	r3, [r7, #4]
 8001184:	681a      	ldr	r2, [r3, #0]
 8001186:	683b      	ldr	r3, [r7, #0]
 8001188:	009b      	lsls	r3, r3, #2
 800118a:	4413      	add	r3, r2
      }
 800118c:	4618      	mov	r0, r3
 800118e:	370c      	adds	r7, #12
 8001190:	46bd      	mov	sp, r7
 8001192:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001196:	4770      	bx	lr

08001198 <_ZN9__gnu_cxx13new_allocatorIPN7CLIMenu8menuItemEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8001198:	b480      	push	{r7}
 800119a:	b083      	sub	sp, #12
 800119c:	af00      	add	r7, sp, #0
 800119e:	6078      	str	r0, [r7, #4]
 80011a0:	687b      	ldr	r3, [r7, #4]
 80011a2:	4618      	mov	r0, r3
 80011a4:	370c      	adds	r7, #12
 80011a6:	46bd      	mov	sp, r7
 80011a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011ac:	4770      	bx	lr

080011ae <_ZNSt16allocator_traitsISaIPN7CLIMenu8menuItemEEE10deallocateERS3_PS2_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 80011ae:	b580      	push	{r7, lr}
 80011b0:	b084      	sub	sp, #16
 80011b2:	af00      	add	r7, sp, #0
 80011b4:	60f8      	str	r0, [r7, #12]
 80011b6:	60b9      	str	r1, [r7, #8]
 80011b8:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 80011ba:	687a      	ldr	r2, [r7, #4]
 80011bc:	68b9      	ldr	r1, [r7, #8]
 80011be:	68f8      	ldr	r0, [r7, #12]
 80011c0:	f000 f8fa 	bl	80013b8 <_ZN9__gnu_cxx13new_allocatorIPN7CLIMenu8menuItemEE10deallocateEPS3_j>
 80011c4:	bf00      	nop
 80011c6:	3710      	adds	r7, #16
 80011c8:	46bd      	mov	sp, r7
 80011ca:	bd80      	pop	{r7, pc}

080011cc <_ZSt8_DestroyIPPN7CLIMenu8menuItemEEvT_S4_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 80011cc:	b580      	push	{r7, lr}
 80011ce:	b082      	sub	sp, #8
 80011d0:	af00      	add	r7, sp, #0
 80011d2:	6078      	str	r0, [r7, #4]
 80011d4:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 80011d6:	6839      	ldr	r1, [r7, #0]
 80011d8:	6878      	ldr	r0, [r7, #4]
 80011da:	f000 f8fa 	bl	80013d2 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7CLIMenu8menuItemEEEvT_S6_>
    }
 80011de:	bf00      	nop
 80011e0:	3708      	adds	r7, #8
 80011e2:	46bd      	mov	sp, r7
 80011e4:	bd80      	pop	{r7, pc}

080011e6 <_ZSt7forwardIRKPN7CLIMenu8menuItemEEOT_RNSt16remove_referenceIS5_E4typeE>:
   *
   *  This function is used to implement "perfect forwarding".
   */
  template<typename _Tp>
    constexpr _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80011e6:	b480      	push	{r7}
 80011e8:	b083      	sub	sp, #12
 80011ea:	af00      	add	r7, sp, #0
 80011ec:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80011ee:	687b      	ldr	r3, [r7, #4]
 80011f0:	4618      	mov	r0, r3
 80011f2:	370c      	adds	r7, #12
 80011f4:	46bd      	mov	sp, r7
 80011f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011fa:	4770      	bx	lr

080011fc <_ZN9__gnu_cxx13new_allocatorIPN7CLIMenu8menuItemEE9constructIS3_JRKS3_EEEvPT_DpOT0_>:
      }

#if __cplusplus >= 201103L
      template<typename _Up, typename... _Args>
	void
	construct(_Up* __p, _Args&&... __args)
 80011fc:	b590      	push	{r4, r7, lr}
 80011fe:	b085      	sub	sp, #20
 8001200:	af00      	add	r7, sp, #0
 8001202:	60f8      	str	r0, [r7, #12]
 8001204:	60b9      	str	r1, [r7, #8]
 8001206:	607a      	str	r2, [r7, #4]
	noexcept(noexcept(::new((void *)__p)
			    _Up(std::forward<_Args>(__args)...)))
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8001208:	6878      	ldr	r0, [r7, #4]
 800120a:	f7ff ffec 	bl	80011e6 <_ZSt7forwardIRKPN7CLIMenu8menuItemEEOT_RNSt16remove_referenceIS5_E4typeE>
 800120e:	4603      	mov	r3, r0
 8001210:	681c      	ldr	r4, [r3, #0]
 8001212:	68bb      	ldr	r3, [r7, #8]
 8001214:	4619      	mov	r1, r3
 8001216:	2004      	movs	r0, #4
 8001218:	f7ff fc86 	bl	8000b28 <_ZnwjPv>
 800121c:	4603      	mov	r3, r0
 800121e:	601c      	str	r4, [r3, #0]
 8001220:	bf00      	nop
 8001222:	3714      	adds	r7, #20
 8001224:	46bd      	mov	sp, r7
 8001226:	bd90      	pop	{r4, r7, pc}

08001228 <_ZN9__gnu_cxx17__normal_iteratorIPPN7CLIMenu8menuItemESt6vectorIS3_SaIS3_EEEC1ERKS4_>:

      _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
      : _M_current(_Iterator()) { }

      explicit
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 8001228:	b480      	push	{r7}
 800122a:	b083      	sub	sp, #12
 800122c:	af00      	add	r7, sp, #0
 800122e:	6078      	str	r0, [r7, #4]
 8001230:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 8001232:	683b      	ldr	r3, [r7, #0]
 8001234:	681a      	ldr	r2, [r3, #0]
 8001236:	687b      	ldr	r3, [r7, #4]
 8001238:	601a      	str	r2, [r3, #0]
 800123a:	687b      	ldr	r3, [r7, #4]
 800123c:	4618      	mov	r0, r3
 800123e:	370c      	adds	r7, #12
 8001240:	46bd      	mov	sp, r7
 8001242:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001246:	4770      	bx	lr

08001248 <_ZNKSt6vectorIPN7CLIMenu8menuItemESaIS2_EE12_M_check_lenEjPKc>:
      { return _M_insert_rval(__position, std::move(__v)); }
#endif

      // Called by _M_fill_insert, _M_insert_aux etc.
      size_type
      _M_check_len(size_type __n, const char* __s) const
 8001248:	b590      	push	{r4, r7, lr}
 800124a:	b087      	sub	sp, #28
 800124c:	af00      	add	r7, sp, #0
 800124e:	60f8      	str	r0, [r7, #12]
 8001250:	60b9      	str	r1, [r7, #8]
 8001252:	607a      	str	r2, [r7, #4]
      {
	if (max_size() - size() < __n)
 8001254:	68f8      	ldr	r0, [r7, #12]
 8001256:	f000 f8c7 	bl	80013e8 <_ZNKSt6vectorIPN7CLIMenu8menuItemESaIS2_EE8max_sizeEv>
 800125a:	4604      	mov	r4, r0
 800125c:	68f8      	ldr	r0, [r7, #12]
 800125e:	f7ff fdfc 	bl	8000e5a <_ZNKSt6vectorIPN7CLIMenu8menuItemESaIS2_EE4sizeEv>
 8001262:	4603      	mov	r3, r0
 8001264:	1ae2      	subs	r2, r4, r3
 8001266:	68bb      	ldr	r3, [r7, #8]
 8001268:	429a      	cmp	r2, r3
 800126a:	bf34      	ite	cc
 800126c:	2301      	movcc	r3, #1
 800126e:	2300      	movcs	r3, #0
 8001270:	b2db      	uxtb	r3, r3
 8001272:	2b00      	cmp	r3, #0
 8001274:	d002      	beq.n	800127c <_ZNKSt6vectorIPN7CLIMenu8menuItemESaIS2_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 8001276:	6878      	ldr	r0, [r7, #4]
 8001278:	f003 feba 	bl	8004ff0 <_ZSt20__throw_length_errorPKc>

	const size_type __len = size() + (std::max)(size(), __n);
 800127c:	68f8      	ldr	r0, [r7, #12]
 800127e:	f7ff fdec 	bl	8000e5a <_ZNKSt6vectorIPN7CLIMenu8menuItemESaIS2_EE4sizeEv>
 8001282:	4604      	mov	r4, r0
 8001284:	68f8      	ldr	r0, [r7, #12]
 8001286:	f7ff fde8 	bl	8000e5a <_ZNKSt6vectorIPN7CLIMenu8menuItemESaIS2_EE4sizeEv>
 800128a:	4603      	mov	r3, r0
 800128c:	613b      	str	r3, [r7, #16]
 800128e:	f107 0208 	add.w	r2, r7, #8
 8001292:	f107 0310 	add.w	r3, r7, #16
 8001296:	4611      	mov	r1, r2
 8001298:	4618      	mov	r0, r3
 800129a:	f000 f8b6 	bl	800140a <_ZSt3maxIjERKT_S2_S2_>
 800129e:	4603      	mov	r3, r0
 80012a0:	681b      	ldr	r3, [r3, #0]
 80012a2:	4423      	add	r3, r4
 80012a4:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 80012a6:	68f8      	ldr	r0, [r7, #12]
 80012a8:	f7ff fdd7 	bl	8000e5a <_ZNKSt6vectorIPN7CLIMenu8menuItemESaIS2_EE4sizeEv>
 80012ac:	4602      	mov	r2, r0
 80012ae:	697b      	ldr	r3, [r7, #20]
 80012b0:	4293      	cmp	r3, r2
 80012b2:	d306      	bcc.n	80012c2 <_ZNKSt6vectorIPN7CLIMenu8menuItemESaIS2_EE12_M_check_lenEjPKc+0x7a>
 80012b4:	68f8      	ldr	r0, [r7, #12]
 80012b6:	f000 f897 	bl	80013e8 <_ZNKSt6vectorIPN7CLIMenu8menuItemESaIS2_EE8max_sizeEv>
 80012ba:	4602      	mov	r2, r0
 80012bc:	697b      	ldr	r3, [r7, #20]
 80012be:	4293      	cmp	r3, r2
 80012c0:	d904      	bls.n	80012cc <_ZNKSt6vectorIPN7CLIMenu8menuItemESaIS2_EE12_M_check_lenEjPKc+0x84>
 80012c2:	68f8      	ldr	r0, [r7, #12]
 80012c4:	f000 f890 	bl	80013e8 <_ZNKSt6vectorIPN7CLIMenu8menuItemESaIS2_EE8max_sizeEv>
 80012c8:	4603      	mov	r3, r0
 80012ca:	e000      	b.n	80012ce <_ZNKSt6vectorIPN7CLIMenu8menuItemESaIS2_EE12_M_check_lenEjPKc+0x86>
 80012cc:	697b      	ldr	r3, [r7, #20]
      }
 80012ce:	4618      	mov	r0, r3
 80012d0:	371c      	adds	r7, #28
 80012d2:	46bd      	mov	sp, r7
 80012d4:	bd90      	pop	{r4, r7, pc}

080012d6 <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 80012d6:	b580      	push	{r7, lr}
 80012d8:	b084      	sub	sp, #16
 80012da:	af00      	add	r7, sp, #0
 80012dc:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 80012de:	687a      	ldr	r2, [r7, #4]
 80012e0:	f107 030c 	add.w	r3, r7, #12
 80012e4:	4611      	mov	r1, r2
 80012e6:	4618      	mov	r0, r3
 80012e8:	f7ff ff9e 	bl	8001228 <_ZN9__gnu_cxx17__normal_iteratorIPPN7CLIMenu8menuItemESt6vectorIS3_SaIS3_EEEC1ERKS4_>
 80012ec:	68fb      	ldr	r3, [r7, #12]
 80012ee:	4618      	mov	r0, r3
 80012f0:	3710      	adds	r7, #16
 80012f2:	46bd      	mov	sp, r7
 80012f4:	bd80      	pop	{r7, pc}

080012f6 <_ZN9__gnu_cxxmiIPPN7CLIMenu8menuItemESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_>:
#endif
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 80012f6:	b590      	push	{r4, r7, lr}
 80012f8:	b083      	sub	sp, #12
 80012fa:	af00      	add	r7, sp, #0
 80012fc:	6078      	str	r0, [r7, #4]
 80012fe:	6039      	str	r1, [r7, #0]
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
 8001300:	6878      	ldr	r0, [r7, #4]
 8001302:	f000 f835 	bl	8001370 <_ZNK9__gnu_cxx17__normal_iteratorIPPN7CLIMenu8menuItemESt6vectorIS3_SaIS3_EEE4baseEv>
 8001306:	4603      	mov	r3, r0
 8001308:	681c      	ldr	r4, [r3, #0]
 800130a:	6838      	ldr	r0, [r7, #0]
 800130c:	f000 f830 	bl	8001370 <_ZNK9__gnu_cxx17__normal_iteratorIPPN7CLIMenu8menuItemESt6vectorIS3_SaIS3_EEE4baseEv>
 8001310:	4603      	mov	r3, r0
 8001312:	681b      	ldr	r3, [r3, #0]
 8001314:	1ae3      	subs	r3, r4, r3
 8001316:	109b      	asrs	r3, r3, #2
 8001318:	4618      	mov	r0, r3
 800131a:	370c      	adds	r7, #12
 800131c:	46bd      	mov	sp, r7
 800131e:	bd90      	pop	{r4, r7, pc}

08001320 <_ZNSt12_Vector_baseIPN7CLIMenu8menuItemESaIS2_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 8001320:	b580      	push	{r7, lr}
 8001322:	b082      	sub	sp, #8
 8001324:	af00      	add	r7, sp, #0
 8001326:	6078      	str	r0, [r7, #4]
 8001328:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 800132a:	683b      	ldr	r3, [r7, #0]
 800132c:	2b00      	cmp	r3, #0
 800132e:	d006      	beq.n	800133e <_ZNSt12_Vector_baseIPN7CLIMenu8menuItemESaIS2_EE11_M_allocateEj+0x1e>
 8001330:	687b      	ldr	r3, [r7, #4]
 8001332:	6839      	ldr	r1, [r7, #0]
 8001334:	4618      	mov	r0, r3
 8001336:	f000 f87c 	bl	8001432 <_ZNSt16allocator_traitsISaIPN7CLIMenu8menuItemEEE8allocateERS3_j>
 800133a:	4603      	mov	r3, r0
 800133c:	e000      	b.n	8001340 <_ZNSt12_Vector_baseIPN7CLIMenu8menuItemESaIS2_EE11_M_allocateEj+0x20>
 800133e:	2300      	movs	r3, #0
      }
 8001340:	4618      	mov	r0, r3
 8001342:	3708      	adds	r7, #8
 8001344:	46bd      	mov	sp, r7
 8001346:	bd80      	pop	{r7, pc}

08001348 <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 8001348:	b590      	push	{r4, r7, lr}
 800134a:	b089      	sub	sp, #36	; 0x24
 800134c:	af02      	add	r7, sp, #8
 800134e:	60f8      	str	r0, [r7, #12]
 8001350:	60b9      	str	r1, [r7, #8]
 8001352:	607a      	str	r2, [r7, #4]
 8001354:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 8001356:	f88d 4000 	strb.w	r4, [sp]
 800135a:	683b      	ldr	r3, [r7, #0]
 800135c:	687a      	ldr	r2, [r7, #4]
 800135e:	68b9      	ldr	r1, [r7, #8]
 8001360:	68f8      	ldr	r0, [r7, #12]
 8001362:	f000 f875 	bl	8001450 <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE14_S_do_relocateEPS2_S5_S5_RS3_St17integral_constantIbLb1EE>
 8001366:	4603      	mov	r3, r0
      }
 8001368:	4618      	mov	r0, r3
 800136a:	371c      	adds	r7, #28
 800136c:	46bd      	mov	sp, r7
 800136e:	bd90      	pop	{r4, r7, pc}

08001370 <_ZNK9__gnu_cxx17__normal_iteratorIPPN7CLIMenu8menuItemESt6vectorIS3_SaIS3_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 8001370:	b480      	push	{r7}
 8001372:	b083      	sub	sp, #12
 8001374:	af00      	add	r7, sp, #0
 8001376:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 8001378:	687b      	ldr	r3, [r7, #4]
 800137a:	4618      	mov	r0, r3
 800137c:	370c      	adds	r7, #12
 800137e:	46bd      	mov	sp, r7
 8001380:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001384:	4770      	bx	lr

08001386 <_ZSt34__uninitialized_move_if_noexcept_aIPPN7CLIMenu8menuItemES3_SaIS2_EET0_T_S6_S5_RT1_>:
    }

  template<typename _InputIterator, typename _ForwardIterator,
	   typename _Allocator>
    inline _ForwardIterator
    __uninitialized_move_if_noexcept_a(_InputIterator __first,
 8001386:	b590      	push	{r4, r7, lr}
 8001388:	b085      	sub	sp, #20
 800138a:	af00      	add	r7, sp, #0
 800138c:	60f8      	str	r0, [r7, #12]
 800138e:	60b9      	str	r1, [r7, #8]
 8001390:	607a      	str	r2, [r7, #4]
 8001392:	603b      	str	r3, [r7, #0]
				       _InputIterator __last,
				       _ForwardIterator __result,
				       _Allocator& __alloc)
    {
      return std::__uninitialized_copy_a
	(_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__first),
 8001394:	68f8      	ldr	r0, [r7, #12]
 8001396:	f000 f86d 	bl	8001474 <_ZSt32__make_move_if_noexcept_iteratorIPN7CLIMenu8menuItemESt13move_iteratorIPS2_EET0_PT_>
 800139a:	4604      	mov	r4, r0
 800139c:	68b8      	ldr	r0, [r7, #8]
 800139e:	f000 f869 	bl	8001474 <_ZSt32__make_move_if_noexcept_iteratorIPN7CLIMenu8menuItemESt13move_iteratorIPS2_EET0_PT_>
 80013a2:	4601      	mov	r1, r0
 80013a4:	683b      	ldr	r3, [r7, #0]
 80013a6:	687a      	ldr	r2, [r7, #4]
 80013a8:	4620      	mov	r0, r4
 80013aa:	f000 f872 	bl	8001492 <_ZSt22__uninitialized_copy_aISt13move_iteratorIPPN7CLIMenu8menuItemEES4_S3_ET0_T_S7_S6_RSaIT1_E>
 80013ae:	4603      	mov	r3, r0
	 _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__last), __result, __alloc);
    }
 80013b0:	4618      	mov	r0, r3
 80013b2:	3714      	adds	r7, #20
 80013b4:	46bd      	mov	sp, r7
 80013b6:	bd90      	pop	{r4, r7, pc}

080013b8 <_ZN9__gnu_cxx13new_allocatorIPN7CLIMenu8menuItemEE10deallocateEPS3_j>:
      deallocate(pointer __p, size_type)
 80013b8:	b580      	push	{r7, lr}
 80013ba:	b084      	sub	sp, #16
 80013bc:	af00      	add	r7, sp, #0
 80013be:	60f8      	str	r0, [r7, #12]
 80013c0:	60b9      	str	r1, [r7, #8]
 80013c2:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 80013c4:	68b8      	ldr	r0, [r7, #8]
 80013c6:	f003 fdf8 	bl	8004fba <_ZdlPv>
      }
 80013ca:	bf00      	nop
 80013cc:	3710      	adds	r7, #16
 80013ce:	46bd      	mov	sp, r7
 80013d0:	bd80      	pop	{r7, pc}

080013d2 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7CLIMenu8menuItemEEEvT_S6_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
 80013d2:	b480      	push	{r7}
 80013d4:	b083      	sub	sp, #12
 80013d6:	af00      	add	r7, sp, #0
 80013d8:	6078      	str	r0, [r7, #4]
 80013da:	6039      	str	r1, [r7, #0]
 80013dc:	bf00      	nop
 80013de:	370c      	adds	r7, #12
 80013e0:	46bd      	mov	sp, r7
 80013e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013e6:	4770      	bx	lr

080013e8 <_ZNKSt6vectorIPN7CLIMenu8menuItemESaIS2_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 80013e8:	b580      	push	{r7, lr}
 80013ea:	b082      	sub	sp, #8
 80013ec:	af00      	add	r7, sp, #0
 80013ee:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 80013f0:	687b      	ldr	r3, [r7, #4]
 80013f2:	4618      	mov	r0, r3
 80013f4:	f000 f878 	bl	80014e8 <_ZNKSt12_Vector_baseIPN7CLIMenu8menuItemESaIS2_EE19_M_get_Tp_allocatorEv>
 80013f8:	4603      	mov	r3, r0
 80013fa:	4618      	mov	r0, r3
 80013fc:	f000 f85a 	bl	80014b4 <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE11_S_max_sizeERKS3_>
 8001400:	4603      	mov	r3, r0
 8001402:	4618      	mov	r0, r3
 8001404:	3708      	adds	r7, #8
 8001406:	46bd      	mov	sp, r7
 8001408:	bd80      	pop	{r7, pc}

0800140a <_ZSt3maxIjERKT_S2_S2_>:
   *  preprocessor macro.
  */
  template<typename _Tp>
    _GLIBCXX14_CONSTEXPR
    inline const _Tp&
    max(const _Tp& __a, const _Tp& __b)
 800140a:	b480      	push	{r7}
 800140c:	b083      	sub	sp, #12
 800140e:	af00      	add	r7, sp, #0
 8001410:	6078      	str	r0, [r7, #4]
 8001412:	6039      	str	r1, [r7, #0]
    {
      // concept requirements
      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
      //return  __a < __b ? __b : __a;
      if (__a < __b)
 8001414:	687b      	ldr	r3, [r7, #4]
 8001416:	681a      	ldr	r2, [r3, #0]
 8001418:	683b      	ldr	r3, [r7, #0]
 800141a:	681b      	ldr	r3, [r3, #0]
 800141c:	429a      	cmp	r2, r3
 800141e:	d201      	bcs.n	8001424 <_ZSt3maxIjERKT_S2_S2_+0x1a>
	return __b;
 8001420:	683b      	ldr	r3, [r7, #0]
 8001422:	e000      	b.n	8001426 <_ZSt3maxIjERKT_S2_S2_+0x1c>
      return __a;
 8001424:	687b      	ldr	r3, [r7, #4]
    }
 8001426:	4618      	mov	r0, r3
 8001428:	370c      	adds	r7, #12
 800142a:	46bd      	mov	sp, r7
 800142c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001430:	4770      	bx	lr

08001432 <_ZNSt16allocator_traitsISaIPN7CLIMenu8menuItemEEE8allocateERS3_j>:
      allocate(allocator_type& __a, size_type __n)
 8001432:	b580      	push	{r7, lr}
 8001434:	b082      	sub	sp, #8
 8001436:	af00      	add	r7, sp, #0
 8001438:	6078      	str	r0, [r7, #4]
 800143a:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 800143c:	2200      	movs	r2, #0
 800143e:	6839      	ldr	r1, [r7, #0]
 8001440:	6878      	ldr	r0, [r7, #4]
 8001442:	f000 f85c 	bl	80014fe <_ZN9__gnu_cxx13new_allocatorIPN7CLIMenu8menuItemEE8allocateEjPKv>
 8001446:	4603      	mov	r3, r0
 8001448:	4618      	mov	r0, r3
 800144a:	3708      	adds	r7, #8
 800144c:	46bd      	mov	sp, r7
 800144e:	bd80      	pop	{r7, pc}

08001450 <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE14_S_do_relocateEPS2_S5_S5_RS3_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 8001450:	b580      	push	{r7, lr}
 8001452:	b084      	sub	sp, #16
 8001454:	af00      	add	r7, sp, #0
 8001456:	60f8      	str	r0, [r7, #12]
 8001458:	60b9      	str	r1, [r7, #8]
 800145a:	607a      	str	r2, [r7, #4]
 800145c:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 800145e:	683b      	ldr	r3, [r7, #0]
 8001460:	687a      	ldr	r2, [r7, #4]
 8001462:	68b9      	ldr	r1, [r7, #8]
 8001464:	68f8      	ldr	r0, [r7, #12]
 8001466:	f000 f868 	bl	800153a <_ZSt12__relocate_aIPPN7CLIMenu8menuItemES3_SaIS2_EET0_T_S6_S5_RT1_>
 800146a:	4603      	mov	r3, r0
      }
 800146c:	4618      	mov	r0, r3
 800146e:	3710      	adds	r7, #16
 8001470:	46bd      	mov	sp, r7
 8001472:	bd80      	pop	{r7, pc}

08001474 <_ZSt32__make_move_if_noexcept_iteratorIPN7CLIMenu8menuItemESt13move_iteratorIPS2_EET0_PT_>:
  // returning a constant iterator when we don't want to move.
  template<typename _Tp, typename _ReturnType
    = typename conditional<__move_if_noexcept_cond<_Tp>::value,
			   const _Tp*, move_iterator<_Tp*>>::type>
    inline _GLIBCXX17_CONSTEXPR _ReturnType
    __make_move_if_noexcept_iterator(_Tp* __i)
 8001474:	b580      	push	{r7, lr}
 8001476:	b084      	sub	sp, #16
 8001478:	af00      	add	r7, sp, #0
 800147a:	6078      	str	r0, [r7, #4]
    { return _ReturnType(__i); }
 800147c:	f107 030c 	add.w	r3, r7, #12
 8001480:	6879      	ldr	r1, [r7, #4]
 8001482:	4618      	mov	r0, r3
 8001484:	f000 f876 	bl	8001574 <_ZNSt13move_iteratorIPPN7CLIMenu8menuItemEEC1ES3_>
 8001488:	68fb      	ldr	r3, [r7, #12]
 800148a:	4618      	mov	r0, r3
 800148c:	3710      	adds	r7, #16
 800148e:	46bd      	mov	sp, r7
 8001490:	bd80      	pop	{r7, pc}

08001492 <_ZSt22__uninitialized_copy_aISt13move_iteratorIPPN7CLIMenu8menuItemEES4_S3_ET0_T_S7_S6_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 8001492:	b580      	push	{r7, lr}
 8001494:	b084      	sub	sp, #16
 8001496:	af00      	add	r7, sp, #0
 8001498:	60f8      	str	r0, [r7, #12]
 800149a:	60b9      	str	r1, [r7, #8]
 800149c:	607a      	str	r2, [r7, #4]
 800149e:	603b      	str	r3, [r7, #0]
    { return std::uninitialized_copy(__first, __last, __result); }
 80014a0:	687a      	ldr	r2, [r7, #4]
 80014a2:	68b9      	ldr	r1, [r7, #8]
 80014a4:	68f8      	ldr	r0, [r7, #12]
 80014a6:	f000 f874 	bl	8001592 <_ZSt18uninitialized_copyISt13move_iteratorIPPN7CLIMenu8menuItemEES4_ET0_T_S7_S6_>
 80014aa:	4603      	mov	r3, r0
 80014ac:	4618      	mov	r0, r3
 80014ae:	3710      	adds	r7, #16
 80014b0:	46bd      	mov	sp, r7
 80014b2:	bd80      	pop	{r7, pc}

080014b4 <_ZNSt6vectorIPN7CLIMenu8menuItemESaIS2_EE11_S_max_sizeERKS3_>:
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
      }

      static size_type
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 80014b4:	b580      	push	{r7, lr}
 80014b6:	b084      	sub	sp, #16
 80014b8:	af00      	add	r7, sp, #0
 80014ba:	6078      	str	r0, [r7, #4]
      {
	// std::distance(begin(), end()) cannot be greater than PTRDIFF_MAX,
	// and realistically we can't store more than PTRDIFF_MAX/sizeof(T)
	// (even if std::allocator_traits::max_size says we can).
	const size_t __diffmax
 80014bc:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 80014c0:	60fb      	str	r3, [r7, #12]
	  = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 80014c2:	6878      	ldr	r0, [r7, #4]
 80014c4:	f000 f877 	bl	80015b6 <_ZNSt16allocator_traitsISaIPN7CLIMenu8menuItemEEE8max_sizeERKS3_>
 80014c8:	4603      	mov	r3, r0
 80014ca:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 80014cc:	f107 0208 	add.w	r2, r7, #8
 80014d0:	f107 030c 	add.w	r3, r7, #12
 80014d4:	4611      	mov	r1, r2
 80014d6:	4618      	mov	r0, r3
 80014d8:	f000 f879 	bl	80015ce <_ZSt3minIjERKT_S2_S2_>
 80014dc:	4603      	mov	r3, r0
 80014de:	681b      	ldr	r3, [r3, #0]
      }
 80014e0:	4618      	mov	r0, r3
 80014e2:	3710      	adds	r7, #16
 80014e4:	46bd      	mov	sp, r7
 80014e6:	bd80      	pop	{r7, pc}

080014e8 <_ZNKSt12_Vector_baseIPN7CLIMenu8menuItemESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 80014e8:	b480      	push	{r7}
 80014ea:	b083      	sub	sp, #12
 80014ec:	af00      	add	r7, sp, #0
 80014ee:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 80014f0:	687b      	ldr	r3, [r7, #4]
 80014f2:	4618      	mov	r0, r3
 80014f4:	370c      	adds	r7, #12
 80014f6:	46bd      	mov	sp, r7
 80014f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014fc:	4770      	bx	lr

080014fe <_ZN9__gnu_cxx13new_allocatorIPN7CLIMenu8menuItemEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 80014fe:	b580      	push	{r7, lr}
 8001500:	b084      	sub	sp, #16
 8001502:	af00      	add	r7, sp, #0
 8001504:	60f8      	str	r0, [r7, #12]
 8001506:	60b9      	str	r1, [r7, #8]
 8001508:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 800150a:	68f8      	ldr	r0, [r7, #12]
 800150c:	f000 f873 	bl	80015f6 <_ZNK9__gnu_cxx13new_allocatorIPN7CLIMenu8menuItemEE8max_sizeEv>
 8001510:	4602      	mov	r2, r0
 8001512:	68bb      	ldr	r3, [r7, #8]
 8001514:	4293      	cmp	r3, r2
 8001516:	bf8c      	ite	hi
 8001518:	2301      	movhi	r3, #1
 800151a:	2300      	movls	r3, #0
 800151c:	b2db      	uxtb	r3, r3
 800151e:	2b00      	cmp	r3, #0
 8001520:	d001      	beq.n	8001526 <_ZN9__gnu_cxx13new_allocatorIPN7CLIMenu8menuItemEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8001522:	f003 fd5f 	bl	8004fe4 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8001526:	68bb      	ldr	r3, [r7, #8]
 8001528:	009b      	lsls	r3, r3, #2
 800152a:	4618      	mov	r0, r3
 800152c:	f003 fd49 	bl	8004fc2 <_Znwj>
 8001530:	4603      	mov	r3, r0
      }
 8001532:	4618      	mov	r0, r3
 8001534:	3710      	adds	r7, #16
 8001536:	46bd      	mov	sp, r7
 8001538:	bd80      	pop	{r7, pc}

0800153a <_ZSt12__relocate_aIPPN7CLIMenu8menuItemES3_SaIS2_EET0_T_S6_S5_RT1_>:
    }

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
 800153a:	b5b0      	push	{r4, r5, r7, lr}
 800153c:	b084      	sub	sp, #16
 800153e:	af00      	add	r7, sp, #0
 8001540:	60f8      	str	r0, [r7, #12]
 8001542:	60b9      	str	r1, [r7, #8]
 8001544:	607a      	str	r2, [r7, #4]
 8001546:	603b      	str	r3, [r7, #0]
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return __relocate_a_1(std::__niter_base(__first),
 8001548:	68f8      	ldr	r0, [r7, #12]
 800154a:	f000 f860 	bl	800160e <_ZSt12__niter_baseIPPN7CLIMenu8menuItemEET_S4_>
 800154e:	4604      	mov	r4, r0
 8001550:	68b8      	ldr	r0, [r7, #8]
 8001552:	f000 f85c 	bl	800160e <_ZSt12__niter_baseIPPN7CLIMenu8menuItemEET_S4_>
 8001556:	4605      	mov	r5, r0
 8001558:	6878      	ldr	r0, [r7, #4]
 800155a:	f000 f858 	bl	800160e <_ZSt12__niter_baseIPPN7CLIMenu8menuItemEET_S4_>
 800155e:	4602      	mov	r2, r0
 8001560:	683b      	ldr	r3, [r7, #0]
 8001562:	4629      	mov	r1, r5
 8001564:	4620      	mov	r0, r4
 8001566:	f000 f85d 	bl	8001624 <_ZSt14__relocate_a_1IPN7CLIMenu8menuItemES2_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS5_E4typeES7_S7_S7_RSaIT0_E>
 800156a:	4603      	mov	r3, r0
			    std::__niter_base(__last),
			    std::__niter_base(__result), __alloc);
    }
 800156c:	4618      	mov	r0, r3
 800156e:	3710      	adds	r7, #16
 8001570:	46bd      	mov	sp, r7
 8001572:	bdb0      	pop	{r4, r5, r7, pc}

08001574 <_ZNSt13move_iteratorIPPN7CLIMenu8menuItemEEC1ES3_>:
      move_iterator(iterator_type __i)
 8001574:	b480      	push	{r7}
 8001576:	b083      	sub	sp, #12
 8001578:	af00      	add	r7, sp, #0
 800157a:	6078      	str	r0, [r7, #4]
 800157c:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800157e:	687b      	ldr	r3, [r7, #4]
 8001580:	683a      	ldr	r2, [r7, #0]
 8001582:	601a      	str	r2, [r3, #0]
 8001584:	687b      	ldr	r3, [r7, #4]
 8001586:	4618      	mov	r0, r3
 8001588:	370c      	adds	r7, #12
 800158a:	46bd      	mov	sp, r7
 800158c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001590:	4770      	bx	lr

08001592 <_ZSt18uninitialized_copyISt13move_iteratorIPPN7CLIMenu8menuItemEES4_ET0_T_S7_S6_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 8001592:	b580      	push	{r7, lr}
 8001594:	b086      	sub	sp, #24
 8001596:	af00      	add	r7, sp, #0
 8001598:	60f8      	str	r0, [r7, #12]
 800159a:	60b9      	str	r1, [r7, #8]
 800159c:	607a      	str	r2, [r7, #4]
      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 800159e:	2301      	movs	r3, #1
 80015a0:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 80015a2:	687a      	ldr	r2, [r7, #4]
 80015a4:	68b9      	ldr	r1, [r7, #8]
 80015a6:	68f8      	ldr	r0, [r7, #12]
 80015a8:	f000 f85a 	bl	8001660 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPPN7CLIMenu8menuItemEES6_EET0_T_S9_S8_>
 80015ac:	4603      	mov	r3, r0
    }
 80015ae:	4618      	mov	r0, r3
 80015b0:	3718      	adds	r7, #24
 80015b2:	46bd      	mov	sp, r7
 80015b4:	bd80      	pop	{r7, pc}

080015b6 <_ZNSt16allocator_traitsISaIPN7CLIMenu8menuItemEEE8max_sizeERKS3_>:
       *  @brief  The maximum supported allocation size
       *  @param  __a  An allocator.
       *  @return @c __a.max_size()
      */
      static size_type
      max_size(const allocator_type& __a) noexcept
 80015b6:	b580      	push	{r7, lr}
 80015b8:	b082      	sub	sp, #8
 80015ba:	af00      	add	r7, sp, #0
 80015bc:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 80015be:	6878      	ldr	r0, [r7, #4]
 80015c0:	f000 f819 	bl	80015f6 <_ZNK9__gnu_cxx13new_allocatorIPN7CLIMenu8menuItemEE8max_sizeEv>
 80015c4:	4603      	mov	r3, r0
 80015c6:	4618      	mov	r0, r3
 80015c8:	3708      	adds	r7, #8
 80015ca:	46bd      	mov	sp, r7
 80015cc:	bd80      	pop	{r7, pc}

080015ce <_ZSt3minIjERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
 80015ce:	b480      	push	{r7}
 80015d0:	b083      	sub	sp, #12
 80015d2:	af00      	add	r7, sp, #0
 80015d4:	6078      	str	r0, [r7, #4]
 80015d6:	6039      	str	r1, [r7, #0]
      if (__b < __a)
 80015d8:	683b      	ldr	r3, [r7, #0]
 80015da:	681a      	ldr	r2, [r3, #0]
 80015dc:	687b      	ldr	r3, [r7, #4]
 80015de:	681b      	ldr	r3, [r3, #0]
 80015e0:	429a      	cmp	r2, r3
 80015e2:	d201      	bcs.n	80015e8 <_ZSt3minIjERKT_S2_S2_+0x1a>
	return __b;
 80015e4:	683b      	ldr	r3, [r7, #0]
 80015e6:	e000      	b.n	80015ea <_ZSt3minIjERKT_S2_S2_+0x1c>
      return __a;
 80015e8:	687b      	ldr	r3, [r7, #4]
    }
 80015ea:	4618      	mov	r0, r3
 80015ec:	370c      	adds	r7, #12
 80015ee:	46bd      	mov	sp, r7
 80015f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015f4:	4770      	bx	lr

080015f6 <_ZNK9__gnu_cxx13new_allocatorIPN7CLIMenu8menuItemEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 80015f6:	b480      	push	{r7}
 80015f8:	b083      	sub	sp, #12
 80015fa:	af00      	add	r7, sp, #0
 80015fc:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 80015fe:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 8001602:	4618      	mov	r0, r3
 8001604:	370c      	adds	r7, #12
 8001606:	46bd      	mov	sp, r7
 8001608:	f85d 7b04 	ldr.w	r7, [sp], #4
 800160c:	4770      	bx	lr

0800160e <_ZSt12__niter_baseIPPN7CLIMenu8menuItemEET_S4_>:

  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the __normal_iterator wrapper. See copy, fill, ...
  template<typename _Iterator>
    inline _Iterator
    __niter_base(_Iterator __it)
 800160e:	b480      	push	{r7}
 8001610:	b083      	sub	sp, #12
 8001612:	af00      	add	r7, sp, #0
 8001614:	6078      	str	r0, [r7, #4]
    _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
    { return __it; }
 8001616:	687b      	ldr	r3, [r7, #4]
 8001618:	4618      	mov	r0, r3
 800161a:	370c      	adds	r7, #12
 800161c:	46bd      	mov	sp, r7
 800161e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001622:	4770      	bx	lr

08001624 <_ZSt14__relocate_a_1IPN7CLIMenu8menuItemES2_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS5_E4typeES7_S7_S7_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 8001624:	b580      	push	{r7, lr}
 8001626:	b086      	sub	sp, #24
 8001628:	af00      	add	r7, sp, #0
 800162a:	60f8      	str	r0, [r7, #12]
 800162c:	60b9      	str	r1, [r7, #8]
 800162e:	607a      	str	r2, [r7, #4]
 8001630:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 8001632:	68ba      	ldr	r2, [r7, #8]
 8001634:	68fb      	ldr	r3, [r7, #12]
 8001636:	1ad3      	subs	r3, r2, r3
 8001638:	109b      	asrs	r3, r3, #2
 800163a:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 800163c:	697b      	ldr	r3, [r7, #20]
 800163e:	2b00      	cmp	r3, #0
 8001640:	dd06      	ble.n	8001650 <_ZSt14__relocate_a_1IPN7CLIMenu8menuItemES2_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS5_E4typeES7_S7_S7_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 8001642:	697b      	ldr	r3, [r7, #20]
 8001644:	009b      	lsls	r3, r3, #2
 8001646:	461a      	mov	r2, r3
 8001648:	68f9      	ldr	r1, [r7, #12]
 800164a:	6878      	ldr	r0, [r7, #4]
 800164c:	f003 ffaa 	bl	80055a4 <memmove>
      return __result + __count;
 8001650:	697b      	ldr	r3, [r7, #20]
 8001652:	009b      	lsls	r3, r3, #2
 8001654:	687a      	ldr	r2, [r7, #4]
 8001656:	4413      	add	r3, r2
    }
 8001658:	4618      	mov	r0, r3
 800165a:	3718      	adds	r7, #24
 800165c:	46bd      	mov	sp, r7
 800165e:	bd80      	pop	{r7, pc}

08001660 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPPN7CLIMenu8menuItemEES6_EET0_T_S9_S8_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 8001660:	b580      	push	{r7, lr}
 8001662:	b084      	sub	sp, #16
 8001664:	af00      	add	r7, sp, #0
 8001666:	60f8      	str	r0, [r7, #12]
 8001668:	60b9      	str	r1, [r7, #8]
 800166a:	607a      	str	r2, [r7, #4]
        { return std::copy(__first, __last, __result); }
 800166c:	687a      	ldr	r2, [r7, #4]
 800166e:	68b9      	ldr	r1, [r7, #8]
 8001670:	68f8      	ldr	r0, [r7, #12]
 8001672:	f000 f805 	bl	8001680 <_ZSt4copyISt13move_iteratorIPPN7CLIMenu8menuItemEES4_ET0_T_S7_S6_>
 8001676:	4603      	mov	r3, r0
 8001678:	4618      	mov	r0, r3
 800167a:	3710      	adds	r7, #16
 800167c:	46bd      	mov	sp, r7
 800167e:	bd80      	pop	{r7, pc}

08001680 <_ZSt4copyISt13move_iteratorIPPN7CLIMenu8menuItemEES4_ET0_T_S7_S6_>:
   *  Note that the end of the output range is permitted to be contained
   *  within [first,last).
  */
  template<typename _II, typename _OI>
    inline _OI
    copy(_II __first, _II __last, _OI __result)
 8001680:	b590      	push	{r4, r7, lr}
 8001682:	b085      	sub	sp, #20
 8001684:	af00      	add	r7, sp, #0
 8001686:	60f8      	str	r0, [r7, #12]
 8001688:	60b9      	str	r1, [r7, #8]
 800168a:	607a      	str	r2, [r7, #4]
      __glibcxx_function_requires(_OutputIteratorConcept<_OI,
	    typename iterator_traits<_II>::value_type>)
      __glibcxx_requires_can_increment_range(__first, __last, __result);

      return std::__copy_move_a2<__is_move_iterator<_II>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 800168c:	68f8      	ldr	r0, [r7, #12]
 800168e:	f000 f80f 	bl	80016b0 <_ZSt12__miter_baseIPPN7CLIMenu8menuItemEEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E>
 8001692:	4604      	mov	r4, r0
 8001694:	68b8      	ldr	r0, [r7, #8]
 8001696:	f000 f80b 	bl	80016b0 <_ZSt12__miter_baseIPPN7CLIMenu8menuItemEEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E>
 800169a:	4603      	mov	r3, r0
 800169c:	687a      	ldr	r2, [r7, #4]
 800169e:	4619      	mov	r1, r3
 80016a0:	4620      	mov	r0, r4
 80016a2:	f000 f816 	bl	80016d2 <_ZSt14__copy_move_a2ILb1EPPN7CLIMenu8menuItemES3_ET1_T0_S5_S4_>
 80016a6:	4603      	mov	r3, r0
    }
 80016a8:	4618      	mov	r0, r3
 80016aa:	3714      	adds	r7, #20
 80016ac:	46bd      	mov	sp, r7
 80016ae:	bd90      	pop	{r4, r7, pc}

080016b0 <_ZSt12__miter_baseIPPN7CLIMenu8menuItemEEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E>:
      typedef __true_type __type;
    };

  template<typename _Iterator>
    auto
    __miter_base(move_iterator<_Iterator> __it)
 80016b0:	b580      	push	{r7, lr}
 80016b2:	b082      	sub	sp, #8
 80016b4:	af00      	add	r7, sp, #0
 80016b6:	6078      	str	r0, [r7, #4]
    -> decltype(__miter_base(__it.base()))
    { return __miter_base(__it.base()); }
 80016b8:	1d3b      	adds	r3, r7, #4
 80016ba:	4618      	mov	r0, r3
 80016bc:	f000 f82c 	bl	8001718 <_ZNKSt13move_iteratorIPPN7CLIMenu8menuItemEE4baseEv>
 80016c0:	4603      	mov	r3, r0
 80016c2:	4618      	mov	r0, r3
 80016c4:	f000 f834 	bl	8001730 <_ZSt12__miter_baseIPPN7CLIMenu8menuItemEET_S4_>
 80016c8:	4603      	mov	r3, r0
 80016ca:	4618      	mov	r0, r3
 80016cc:	3708      	adds	r7, #8
 80016ce:	46bd      	mov	sp, r7
 80016d0:	bd80      	pop	{r7, pc}

080016d2 <_ZSt14__copy_move_a2ILb1EPPN7CLIMenu8menuItemES3_ET1_T0_S5_S4_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 80016d2:	b5b0      	push	{r4, r5, r7, lr}
 80016d4:	b084      	sub	sp, #16
 80016d6:	af00      	add	r7, sp, #0
 80016d8:	60f8      	str	r0, [r7, #12]
 80016da:	60b9      	str	r1, [r7, #8]
 80016dc:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 80016de:	68f8      	ldr	r0, [r7, #12]
 80016e0:	f7ff ff95 	bl	800160e <_ZSt12__niter_baseIPPN7CLIMenu8menuItemEET_S4_>
 80016e4:	4604      	mov	r4, r0
 80016e6:	68b8      	ldr	r0, [r7, #8]
 80016e8:	f7ff ff91 	bl	800160e <_ZSt12__niter_baseIPPN7CLIMenu8menuItemEET_S4_>
 80016ec:	4605      	mov	r5, r0
 80016ee:	687b      	ldr	r3, [r7, #4]
 80016f0:	4618      	mov	r0, r3
 80016f2:	f7ff ff8c 	bl	800160e <_ZSt12__niter_baseIPPN7CLIMenu8menuItemEET_S4_>
 80016f6:	4603      	mov	r3, r0
 80016f8:	461a      	mov	r2, r3
 80016fa:	4629      	mov	r1, r5
 80016fc:	4620      	mov	r0, r4
 80016fe:	f000 f822 	bl	8001746 <_ZSt13__copy_move_aILb1EPPN7CLIMenu8menuItemES3_ET1_T0_S5_S4_>
 8001702:	4602      	mov	r2, r0
 8001704:	1d3b      	adds	r3, r7, #4
 8001706:	4611      	mov	r1, r2
 8001708:	4618      	mov	r0, r3
 800170a:	f000 f82e 	bl	800176a <_ZSt12__niter_wrapIPPN7CLIMenu8menuItemEET_RKS4_S4_>
 800170e:	4603      	mov	r3, r0
    }
 8001710:	4618      	mov	r0, r3
 8001712:	3710      	adds	r7, #16
 8001714:	46bd      	mov	sp, r7
 8001716:	bdb0      	pop	{r4, r5, r7, pc}

08001718 <_ZNKSt13move_iteratorIPPN7CLIMenu8menuItemEE4baseEv>:
      base() const
 8001718:	b480      	push	{r7}
 800171a:	b083      	sub	sp, #12
 800171c:	af00      	add	r7, sp, #0
 800171e:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 8001720:	687b      	ldr	r3, [r7, #4]
 8001722:	681b      	ldr	r3, [r3, #0]
 8001724:	4618      	mov	r0, r3
 8001726:	370c      	adds	r7, #12
 8001728:	46bd      	mov	sp, r7
 800172a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800172e:	4770      	bx	lr

08001730 <_ZSt12__miter_baseIPPN7CLIMenu8menuItemEET_S4_>:

  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    inline _Iterator
    __miter_base(_Iterator __it)
 8001730:	b480      	push	{r7}
 8001732:	b083      	sub	sp, #12
 8001734:	af00      	add	r7, sp, #0
 8001736:	6078      	str	r0, [r7, #4]
    { return __it; }
 8001738:	687b      	ldr	r3, [r7, #4]
 800173a:	4618      	mov	r0, r3
 800173c:	370c      	adds	r7, #12
 800173e:	46bd      	mov	sp, r7
 8001740:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001744:	4770      	bx	lr

08001746 <_ZSt13__copy_move_aILb1EPPN7CLIMenu8menuItemES3_ET1_T0_S5_S4_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
 8001746:	b580      	push	{r7, lr}
 8001748:	b086      	sub	sp, #24
 800174a:	af00      	add	r7, sp, #0
 800174c:	60f8      	str	r0, [r7, #12]
 800174e:	60b9      	str	r1, [r7, #8]
 8001750:	607a      	str	r2, [r7, #4]
      const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 8001752:	2301      	movs	r3, #1
 8001754:	75fb      	strb	r3, [r7, #23]
			      _Category>::__copy_m(__first, __last, __result);
 8001756:	687a      	ldr	r2, [r7, #4]
 8001758:	68b9      	ldr	r1, [r7, #8]
 800175a:	68f8      	ldr	r0, [r7, #12]
 800175c:	f000 f811 	bl	8001782 <_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIPN7CLIMenu8menuItemEEEPT_PKS6_S9_S7_>
 8001760:	4603      	mov	r3, r0
    }
 8001762:	4618      	mov	r0, r3
 8001764:	3718      	adds	r7, #24
 8001766:	46bd      	mov	sp, r7
 8001768:	bd80      	pop	{r7, pc}

0800176a <_ZSt12__niter_wrapIPPN7CLIMenu8menuItemEET_RKS4_S4_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
 800176a:	b480      	push	{r7}
 800176c:	b083      	sub	sp, #12
 800176e:	af00      	add	r7, sp, #0
 8001770:	6078      	str	r0, [r7, #4]
 8001772:	6039      	str	r1, [r7, #0]
    { return __res; }
 8001774:	683b      	ldr	r3, [r7, #0]
 8001776:	4618      	mov	r0, r3
 8001778:	370c      	adds	r7, #12
 800177a:	46bd      	mov	sp, r7
 800177c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001780:	4770      	bx	lr

08001782 <_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIPN7CLIMenu8menuItemEEEPT_PKS6_S9_S7_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 8001782:	b580      	push	{r7, lr}
 8001784:	b086      	sub	sp, #24
 8001786:	af00      	add	r7, sp, #0
 8001788:	60f8      	str	r0, [r7, #12]
 800178a:	60b9      	str	r1, [r7, #8]
 800178c:	607a      	str	r2, [r7, #4]
	  const ptrdiff_t _Num = __last - __first;
 800178e:	68ba      	ldr	r2, [r7, #8]
 8001790:	68fb      	ldr	r3, [r7, #12]
 8001792:	1ad3      	subs	r3, r2, r3
 8001794:	109b      	asrs	r3, r3, #2
 8001796:	617b      	str	r3, [r7, #20]
	  if (_Num)
 8001798:	697b      	ldr	r3, [r7, #20]
 800179a:	2b00      	cmp	r3, #0
 800179c:	d006      	beq.n	80017ac <_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIPN7CLIMenu8menuItemEEEPT_PKS6_S9_S7_+0x2a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 800179e:	697b      	ldr	r3, [r7, #20]
 80017a0:	009b      	lsls	r3, r3, #2
 80017a2:	461a      	mov	r2, r3
 80017a4:	68f9      	ldr	r1, [r7, #12]
 80017a6:	6878      	ldr	r0, [r7, #4]
 80017a8:	f003 fefc 	bl	80055a4 <memmove>
	  return __result + _Num;
 80017ac:	697b      	ldr	r3, [r7, #20]
 80017ae:	009b      	lsls	r3, r3, #2
 80017b0:	687a      	ldr	r2, [r7, #4]
 80017b2:	4413      	add	r3, r2
	}
 80017b4:	4618      	mov	r0, r3
 80017b6:	3718      	adds	r7, #24
 80017b8:	46bd      	mov	sp, r7
 80017ba:	bd80      	pop	{r7, pc}

080017bc <MX_RTC_Init>:
 80017bc:	b580      	push	{r7, lr}
 80017be:	af00      	add	r7, sp, #0
 80017c0:	4b14      	ldr	r3, [pc, #80]	; (8001814 <MX_RTC_Init+0x58>)
 80017c2:	4a15      	ldr	r2, [pc, #84]	; (8001818 <MX_RTC_Init+0x5c>)
 80017c4:	601a      	str	r2, [r3, #0]
 80017c6:	4b13      	ldr	r3, [pc, #76]	; (8001814 <MX_RTC_Init+0x58>)
 80017c8:	2200      	movs	r2, #0
 80017ca:	605a      	str	r2, [r3, #4]
 80017cc:	4b11      	ldr	r3, [pc, #68]	; (8001814 <MX_RTC_Init+0x58>)
 80017ce:	227f      	movs	r2, #127	; 0x7f
 80017d0:	609a      	str	r2, [r3, #8]
 80017d2:	4b10      	ldr	r3, [pc, #64]	; (8001814 <MX_RTC_Init+0x58>)
 80017d4:	22ff      	movs	r2, #255	; 0xff
 80017d6:	60da      	str	r2, [r3, #12]
 80017d8:	4b0e      	ldr	r3, [pc, #56]	; (8001814 <MX_RTC_Init+0x58>)
 80017da:	2200      	movs	r2, #0
 80017dc:	611a      	str	r2, [r3, #16]
 80017de:	4b0d      	ldr	r3, [pc, #52]	; (8001814 <MX_RTC_Init+0x58>)
 80017e0:	2200      	movs	r2, #0
 80017e2:	615a      	str	r2, [r3, #20]
 80017e4:	4b0b      	ldr	r3, [pc, #44]	; (8001814 <MX_RTC_Init+0x58>)
 80017e6:	2200      	movs	r2, #0
 80017e8:	619a      	str	r2, [r3, #24]
 80017ea:	480a      	ldr	r0, [pc, #40]	; (8001814 <MX_RTC_Init+0x58>)
 80017ec:	f002 fa1a 	bl	8003c24 <HAL_RTC_Init>
 80017f0:	4603      	mov	r3, r0
 80017f2:	2b00      	cmp	r3, #0
 80017f4:	d001      	beq.n	80017fa <MX_RTC_Init+0x3e>
 80017f6:	f7ff f8a1 	bl	800093c <Error_Handler>
 80017fa:	2200      	movs	r2, #0
 80017fc:	2100      	movs	r1, #0
 80017fe:	4805      	ldr	r0, [pc, #20]	; (8001814 <MX_RTC_Init+0x58>)
 8001800:	f002 faf6 	bl	8003df0 <HAL_RTCEx_SetWakeUpTimer_IT>
 8001804:	4603      	mov	r3, r0
 8001806:	2b00      	cmp	r3, #0
 8001808:	d001      	beq.n	800180e <MX_RTC_Init+0x52>
 800180a:	f7ff f897 	bl	800093c <Error_Handler>
 800180e:	bf00      	nop
 8001810:	bd80      	pop	{r7, pc}
 8001812:	bf00      	nop
 8001814:	2000008c 	.word	0x2000008c
 8001818:	40002800 	.word	0x40002800

0800181c <HAL_RTC_MspInit>:
 800181c:	b580      	push	{r7, lr}
 800181e:	b084      	sub	sp, #16
 8001820:	af00      	add	r7, sp, #0
 8001822:	6078      	str	r0, [r7, #4]
 8001824:	687b      	ldr	r3, [r7, #4]
 8001826:	681b      	ldr	r3, [r3, #0]
 8001828:	4a10      	ldr	r2, [pc, #64]	; (800186c <HAL_RTC_MspInit+0x50>)
 800182a:	4293      	cmp	r3, r2
 800182c:	d119      	bne.n	8001862 <HAL_RTC_MspInit+0x46>
 800182e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8001832:	60fb      	str	r3, [r7, #12]
 8001834:	68fb      	ldr	r3, [r7, #12]
 8001836:	fa93 f3a3 	rbit	r3, r3
 800183a:	60bb      	str	r3, [r7, #8]
 800183c:	68bb      	ldr	r3, [r7, #8]
 800183e:	fab3 f383 	clz	r3, r3
 8001842:	b2db      	uxtb	r3, r3
 8001844:	461a      	mov	r2, r3
 8001846:	4b0a      	ldr	r3, [pc, #40]	; (8001870 <HAL_RTC_MspInit+0x54>)
 8001848:	4413      	add	r3, r2
 800184a:	009b      	lsls	r3, r3, #2
 800184c:	461a      	mov	r2, r3
 800184e:	2301      	movs	r3, #1
 8001850:	6013      	str	r3, [r2, #0]
 8001852:	2200      	movs	r2, #0
 8001854:	2100      	movs	r1, #0
 8001856:	2003      	movs	r0, #3
 8001858:	f000 fb71 	bl	8001f3e <HAL_NVIC_SetPriority>
 800185c:	2003      	movs	r0, #3
 800185e:	f000 fb8a 	bl	8001f76 <HAL_NVIC_EnableIRQ>
 8001862:	bf00      	nop
 8001864:	3710      	adds	r7, #16
 8001866:	46bd      	mov	sp, r7
 8001868:	bd80      	pop	{r7, pc}
 800186a:	bf00      	nop
 800186c:	40002800 	.word	0x40002800
 8001870:	10908100 	.word	0x10908100

08001874 <HAL_MspInit>:
 8001874:	b580      	push	{r7, lr}
 8001876:	b082      	sub	sp, #8
 8001878:	af00      	add	r7, sp, #0
 800187a:	4b0f      	ldr	r3, [pc, #60]	; (80018b8 <HAL_MspInit+0x44>)
 800187c:	699b      	ldr	r3, [r3, #24]
 800187e:	4a0e      	ldr	r2, [pc, #56]	; (80018b8 <HAL_MspInit+0x44>)
 8001880:	f043 0301 	orr.w	r3, r3, #1
 8001884:	6193      	str	r3, [r2, #24]
 8001886:	4b0c      	ldr	r3, [pc, #48]	; (80018b8 <HAL_MspInit+0x44>)
 8001888:	699b      	ldr	r3, [r3, #24]
 800188a:	f003 0301 	and.w	r3, r3, #1
 800188e:	607b      	str	r3, [r7, #4]
 8001890:	687b      	ldr	r3, [r7, #4]
 8001892:	4b09      	ldr	r3, [pc, #36]	; (80018b8 <HAL_MspInit+0x44>)
 8001894:	69db      	ldr	r3, [r3, #28]
 8001896:	4a08      	ldr	r2, [pc, #32]	; (80018b8 <HAL_MspInit+0x44>)
 8001898:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800189c:	61d3      	str	r3, [r2, #28]
 800189e:	4b06      	ldr	r3, [pc, #24]	; (80018b8 <HAL_MspInit+0x44>)
 80018a0:	69db      	ldr	r3, [r3, #28]
 80018a2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80018a6:	603b      	str	r3, [r7, #0]
 80018a8:	683b      	ldr	r3, [r7, #0]
 80018aa:	2007      	movs	r0, #7
 80018ac:	f000 fb3c 	bl	8001f28 <HAL_NVIC_SetPriorityGrouping>
 80018b0:	bf00      	nop
 80018b2:	3708      	adds	r7, #8
 80018b4:	46bd      	mov	sp, r7
 80018b6:	bd80      	pop	{r7, pc}
 80018b8:	40021000 	.word	0x40021000

080018bc <NMI_Handler>:
 80018bc:	b480      	push	{r7}
 80018be:	af00      	add	r7, sp, #0
 80018c0:	e7fe      	b.n	80018c0 <NMI_Handler+0x4>

080018c2 <HardFault_Handler>:
 80018c2:	b480      	push	{r7}
 80018c4:	af00      	add	r7, sp, #0
 80018c6:	e7fe      	b.n	80018c6 <HardFault_Handler+0x4>

080018c8 <MemManage_Handler>:
 80018c8:	b480      	push	{r7}
 80018ca:	af00      	add	r7, sp, #0
 80018cc:	e7fe      	b.n	80018cc <MemManage_Handler+0x4>

080018ce <BusFault_Handler>:
 80018ce:	b480      	push	{r7}
 80018d0:	af00      	add	r7, sp, #0
 80018d2:	e7fe      	b.n	80018d2 <BusFault_Handler+0x4>

080018d4 <UsageFault_Handler>:
 80018d4:	b480      	push	{r7}
 80018d6:	af00      	add	r7, sp, #0
 80018d8:	e7fe      	b.n	80018d8 <UsageFault_Handler+0x4>

080018da <SVC_Handler>:
 80018da:	b480      	push	{r7}
 80018dc:	af00      	add	r7, sp, #0
 80018de:	bf00      	nop
 80018e0:	46bd      	mov	sp, r7
 80018e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018e6:	4770      	bx	lr

080018e8 <DebugMon_Handler>:
 80018e8:	b480      	push	{r7}
 80018ea:	af00      	add	r7, sp, #0
 80018ec:	bf00      	nop
 80018ee:	46bd      	mov	sp, r7
 80018f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018f4:	4770      	bx	lr

080018f6 <PendSV_Handler>:
 80018f6:	b480      	push	{r7}
 80018f8:	af00      	add	r7, sp, #0
 80018fa:	bf00      	nop
 80018fc:	46bd      	mov	sp, r7
 80018fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001902:	4770      	bx	lr

08001904 <SysTick_Handler>:
 8001904:	b580      	push	{r7, lr}
 8001906:	af00      	add	r7, sp, #0
 8001908:	f000 f9b6 	bl	8001c78 <HAL_IncTick>
 800190c:	bf00      	nop
 800190e:	bd80      	pop	{r7, pc}

08001910 <RTC_WKUP_IRQHandler>:
 8001910:	b580      	push	{r7, lr}
 8001912:	af00      	add	r7, sp, #0
 8001914:	4804      	ldr	r0, [pc, #16]	; (8001928 <RTC_WKUP_IRQHandler+0x18>)
 8001916:	f002 fb77 	bl	8004008 <HAL_RTCEx_WakeUpTimerIRQHandler>
 800191a:	4803      	ldr	r0, [pc, #12]	; (8001928 <RTC_WKUP_IRQHandler+0x18>)
 800191c:	f002 fb1c 	bl	8003f58 <HAL_RTCEx_DeactivateWakeUpTimer>
 8001920:	f000 f9fe 	bl	8001d20 <HAL_ResumeTick>
 8001924:	bf00      	nop
 8001926:	bd80      	pop	{r7, pc}
 8001928:	2000008c 	.word	0x2000008c

0800192c <EXTI0_IRQHandler>:
 800192c:	b580      	push	{r7, lr}
 800192e:	af00      	add	r7, sp, #0
 8001930:	2001      	movs	r0, #1
 8001932:	f000 fd61 	bl	80023f8 <HAL_GPIO_EXTI_IRQHandler>
 8001936:	f000 f9f3 	bl	8001d20 <HAL_ResumeTick>
 800193a:	bf00      	nop
 800193c:	bd80      	pop	{r7, pc}
	...

08001940 <USART2_IRQHandler>:
 8001940:	b580      	push	{r7, lr}
 8001942:	af00      	add	r7, sp, #0
 8001944:	4802      	ldr	r0, [pc, #8]	; (8001950 <USART2_IRQHandler+0x10>)
 8001946:	f002 fd73 	bl	8004430 <HAL_UART_IRQHandler>
 800194a:	bf00      	nop
 800194c:	bd80      	pop	{r7, pc}
 800194e:	bf00      	nop
 8001950:	200000ac 	.word	0x200000ac

08001954 <EXTI15_10_IRQHandler>:
 8001954:	b580      	push	{r7, lr}
 8001956:	af00      	add	r7, sp, #0
 8001958:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 800195c:	f000 fd4c 	bl	80023f8 <HAL_GPIO_EXTI_IRQHandler>
 8001960:	f000 f9de 	bl	8001d20 <HAL_ResumeTick>
 8001964:	bf00      	nop
 8001966:	bd80      	pop	{r7, pc}

08001968 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001968:	b480      	push	{r7}
 800196a:	af00      	add	r7, sp, #0
	return 1;
 800196c:	2301      	movs	r3, #1
}
 800196e:	4618      	mov	r0, r3
 8001970:	46bd      	mov	sp, r7
 8001972:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001976:	4770      	bx	lr

08001978 <_kill>:

int _kill(int pid, int sig)
{
 8001978:	b580      	push	{r7, lr}
 800197a:	b082      	sub	sp, #8
 800197c:	af00      	add	r7, sp, #0
 800197e:	6078      	str	r0, [r7, #4]
 8001980:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8001982:	f003 fbf9 	bl	8005178 <__errno>
 8001986:	4603      	mov	r3, r0
 8001988:	2216      	movs	r2, #22
 800198a:	601a      	str	r2, [r3, #0]
	return -1;
 800198c:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001990:	4618      	mov	r0, r3
 8001992:	3708      	adds	r7, #8
 8001994:	46bd      	mov	sp, r7
 8001996:	bd80      	pop	{r7, pc}

08001998 <_exit>:

void _exit (int status)
{
 8001998:	b580      	push	{r7, lr}
 800199a:	b082      	sub	sp, #8
 800199c:	af00      	add	r7, sp, #0
 800199e:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 80019a0:	f04f 31ff 	mov.w	r1, #4294967295
 80019a4:	6878      	ldr	r0, [r7, #4]
 80019a6:	f7ff ffe7 	bl	8001978 <_kill>
	while (1) {}		/* Make sure we hang here */
 80019aa:	e7fe      	b.n	80019aa <_exit+0x12>

080019ac <_close>:
	}
	return len;
}

int _close(int file)
{
 80019ac:	b480      	push	{r7}
 80019ae:	b083      	sub	sp, #12
 80019b0:	af00      	add	r7, sp, #0
 80019b2:	6078      	str	r0, [r7, #4]
	return -1;
 80019b4:	f04f 33ff 	mov.w	r3, #4294967295
}
 80019b8:	4618      	mov	r0, r3
 80019ba:	370c      	adds	r7, #12
 80019bc:	46bd      	mov	sp, r7
 80019be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019c2:	4770      	bx	lr

080019c4 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80019c4:	b480      	push	{r7}
 80019c6:	b083      	sub	sp, #12
 80019c8:	af00      	add	r7, sp, #0
 80019ca:	6078      	str	r0, [r7, #4]
 80019cc:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80019ce:	683b      	ldr	r3, [r7, #0]
 80019d0:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80019d4:	605a      	str	r2, [r3, #4]
	return 0;
 80019d6:	2300      	movs	r3, #0
}
 80019d8:	4618      	mov	r0, r3
 80019da:	370c      	adds	r7, #12
 80019dc:	46bd      	mov	sp, r7
 80019de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019e2:	4770      	bx	lr

080019e4 <_isatty>:

int _isatty(int file)
{
 80019e4:	b480      	push	{r7}
 80019e6:	b083      	sub	sp, #12
 80019e8:	af00      	add	r7, sp, #0
 80019ea:	6078      	str	r0, [r7, #4]
	return 1;
 80019ec:	2301      	movs	r3, #1
}
 80019ee:	4618      	mov	r0, r3
 80019f0:	370c      	adds	r7, #12
 80019f2:	46bd      	mov	sp, r7
 80019f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019f8:	4770      	bx	lr

080019fa <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80019fa:	b480      	push	{r7}
 80019fc:	b085      	sub	sp, #20
 80019fe:	af00      	add	r7, sp, #0
 8001a00:	60f8      	str	r0, [r7, #12]
 8001a02:	60b9      	str	r1, [r7, #8]
 8001a04:	607a      	str	r2, [r7, #4]
	return 0;
 8001a06:	2300      	movs	r3, #0
}
 8001a08:	4618      	mov	r0, r3
 8001a0a:	3714      	adds	r7, #20
 8001a0c:	46bd      	mov	sp, r7
 8001a0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a12:	4770      	bx	lr

08001a14 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001a14:	b580      	push	{r7, lr}
 8001a16:	b086      	sub	sp, #24
 8001a18:	af00      	add	r7, sp, #0
 8001a1a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001a1c:	4a14      	ldr	r2, [pc, #80]	; (8001a70 <_sbrk+0x5c>)
 8001a1e:	4b15      	ldr	r3, [pc, #84]	; (8001a74 <_sbrk+0x60>)
 8001a20:	1ad3      	subs	r3, r2, r3
 8001a22:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001a24:	697b      	ldr	r3, [r7, #20]
 8001a26:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001a28:	4b13      	ldr	r3, [pc, #76]	; (8001a78 <_sbrk+0x64>)
 8001a2a:	681b      	ldr	r3, [r3, #0]
 8001a2c:	2b00      	cmp	r3, #0
 8001a2e:	d102      	bne.n	8001a36 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001a30:	4b11      	ldr	r3, [pc, #68]	; (8001a78 <_sbrk+0x64>)
 8001a32:	4a12      	ldr	r2, [pc, #72]	; (8001a7c <_sbrk+0x68>)
 8001a34:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001a36:	4b10      	ldr	r3, [pc, #64]	; (8001a78 <_sbrk+0x64>)
 8001a38:	681a      	ldr	r2, [r3, #0]
 8001a3a:	687b      	ldr	r3, [r7, #4]
 8001a3c:	4413      	add	r3, r2
 8001a3e:	693a      	ldr	r2, [r7, #16]
 8001a40:	429a      	cmp	r2, r3
 8001a42:	d207      	bcs.n	8001a54 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001a44:	f003 fb98 	bl	8005178 <__errno>
 8001a48:	4603      	mov	r3, r0
 8001a4a:	220c      	movs	r2, #12
 8001a4c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001a4e:	f04f 33ff 	mov.w	r3, #4294967295
 8001a52:	e009      	b.n	8001a68 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001a54:	4b08      	ldr	r3, [pc, #32]	; (8001a78 <_sbrk+0x64>)
 8001a56:	681b      	ldr	r3, [r3, #0]
 8001a58:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001a5a:	4b07      	ldr	r3, [pc, #28]	; (8001a78 <_sbrk+0x64>)
 8001a5c:	681a      	ldr	r2, [r3, #0]
 8001a5e:	687b      	ldr	r3, [r7, #4]
 8001a60:	4413      	add	r3, r2
 8001a62:	4a05      	ldr	r2, [pc, #20]	; (8001a78 <_sbrk+0x64>)
 8001a64:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001a66:	68fb      	ldr	r3, [r7, #12]
}
 8001a68:	4618      	mov	r0, r3
 8001a6a:	3718      	adds	r7, #24
 8001a6c:	46bd      	mov	sp, r7
 8001a6e:	bd80      	pop	{r7, pc}
 8001a70:	20010000 	.word	0x20010000
 8001a74:	00000400 	.word	0x00000400
 8001a78:	2000023c 	.word	0x2000023c
 8001a7c:	20000260 	.word	0x20000260

08001a80 <SystemInit>:
 8001a80:	b480      	push	{r7}
 8001a82:	af00      	add	r7, sp, #0
 8001a84:	4b06      	ldr	r3, [pc, #24]	; (8001aa0 <SystemInit+0x20>)
 8001a86:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001a8a:	4a05      	ldr	r2, [pc, #20]	; (8001aa0 <SystemInit+0x20>)
 8001a8c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001a90:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8001a94:	bf00      	nop
 8001a96:	46bd      	mov	sp, r7
 8001a98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a9c:	4770      	bx	lr
 8001a9e:	bf00      	nop
 8001aa0:	e000ed00 	.word	0xe000ed00

08001aa4 <MX_USART2_UART_Init>:
 8001aa4:	b580      	push	{r7, lr}
 8001aa6:	af00      	add	r7, sp, #0
 8001aa8:	4b14      	ldr	r3, [pc, #80]	; (8001afc <MX_USART2_UART_Init+0x58>)
 8001aaa:	4a15      	ldr	r2, [pc, #84]	; (8001b00 <MX_USART2_UART_Init+0x5c>)
 8001aac:	601a      	str	r2, [r3, #0]
 8001aae:	4b13      	ldr	r3, [pc, #76]	; (8001afc <MX_USART2_UART_Init+0x58>)
 8001ab0:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8001ab4:	605a      	str	r2, [r3, #4]
 8001ab6:	4b11      	ldr	r3, [pc, #68]	; (8001afc <MX_USART2_UART_Init+0x58>)
 8001ab8:	2200      	movs	r2, #0
 8001aba:	609a      	str	r2, [r3, #8]
 8001abc:	4b0f      	ldr	r3, [pc, #60]	; (8001afc <MX_USART2_UART_Init+0x58>)
 8001abe:	2200      	movs	r2, #0
 8001ac0:	60da      	str	r2, [r3, #12]
 8001ac2:	4b0e      	ldr	r3, [pc, #56]	; (8001afc <MX_USART2_UART_Init+0x58>)
 8001ac4:	2200      	movs	r2, #0
 8001ac6:	611a      	str	r2, [r3, #16]
 8001ac8:	4b0c      	ldr	r3, [pc, #48]	; (8001afc <MX_USART2_UART_Init+0x58>)
 8001aca:	220c      	movs	r2, #12
 8001acc:	615a      	str	r2, [r3, #20]
 8001ace:	4b0b      	ldr	r3, [pc, #44]	; (8001afc <MX_USART2_UART_Init+0x58>)
 8001ad0:	2200      	movs	r2, #0
 8001ad2:	619a      	str	r2, [r3, #24]
 8001ad4:	4b09      	ldr	r3, [pc, #36]	; (8001afc <MX_USART2_UART_Init+0x58>)
 8001ad6:	2200      	movs	r2, #0
 8001ad8:	61da      	str	r2, [r3, #28]
 8001ada:	4b08      	ldr	r3, [pc, #32]	; (8001afc <MX_USART2_UART_Init+0x58>)
 8001adc:	2200      	movs	r2, #0
 8001ade:	621a      	str	r2, [r3, #32]
 8001ae0:	4b06      	ldr	r3, [pc, #24]	; (8001afc <MX_USART2_UART_Init+0x58>)
 8001ae2:	2200      	movs	r2, #0
 8001ae4:	625a      	str	r2, [r3, #36]	; 0x24
 8001ae6:	4805      	ldr	r0, [pc, #20]	; (8001afc <MX_USART2_UART_Init+0x58>)
 8001ae8:	f002 faee 	bl	80040c8 <HAL_UART_Init>
 8001aec:	4603      	mov	r3, r0
 8001aee:	2b00      	cmp	r3, #0
 8001af0:	d001      	beq.n	8001af6 <MX_USART2_UART_Init+0x52>
 8001af2:	f7fe ff23 	bl	800093c <Error_Handler>
 8001af6:	bf00      	nop
 8001af8:	bd80      	pop	{r7, pc}
 8001afa:	bf00      	nop
 8001afc:	200000ac 	.word	0x200000ac
 8001b00:	40004400 	.word	0x40004400

08001b04 <HAL_UART_MspInit>:
 8001b04:	b580      	push	{r7, lr}
 8001b06:	b08a      	sub	sp, #40	; 0x28
 8001b08:	af00      	add	r7, sp, #0
 8001b0a:	6078      	str	r0, [r7, #4]
 8001b0c:	f107 0314 	add.w	r3, r7, #20
 8001b10:	2200      	movs	r2, #0
 8001b12:	601a      	str	r2, [r3, #0]
 8001b14:	605a      	str	r2, [r3, #4]
 8001b16:	609a      	str	r2, [r3, #8]
 8001b18:	60da      	str	r2, [r3, #12]
 8001b1a:	611a      	str	r2, [r3, #16]
 8001b1c:	687b      	ldr	r3, [r7, #4]
 8001b1e:	681b      	ldr	r3, [r3, #0]
 8001b20:	4a1b      	ldr	r2, [pc, #108]	; (8001b90 <HAL_UART_MspInit+0x8c>)
 8001b22:	4293      	cmp	r3, r2
 8001b24:	d130      	bne.n	8001b88 <HAL_UART_MspInit+0x84>
 8001b26:	4b1b      	ldr	r3, [pc, #108]	; (8001b94 <HAL_UART_MspInit+0x90>)
 8001b28:	69db      	ldr	r3, [r3, #28]
 8001b2a:	4a1a      	ldr	r2, [pc, #104]	; (8001b94 <HAL_UART_MspInit+0x90>)
 8001b2c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001b30:	61d3      	str	r3, [r2, #28]
 8001b32:	4b18      	ldr	r3, [pc, #96]	; (8001b94 <HAL_UART_MspInit+0x90>)
 8001b34:	69db      	ldr	r3, [r3, #28]
 8001b36:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001b3a:	613b      	str	r3, [r7, #16]
 8001b3c:	693b      	ldr	r3, [r7, #16]
 8001b3e:	4b15      	ldr	r3, [pc, #84]	; (8001b94 <HAL_UART_MspInit+0x90>)
 8001b40:	695b      	ldr	r3, [r3, #20]
 8001b42:	4a14      	ldr	r2, [pc, #80]	; (8001b94 <HAL_UART_MspInit+0x90>)
 8001b44:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001b48:	6153      	str	r3, [r2, #20]
 8001b4a:	4b12      	ldr	r3, [pc, #72]	; (8001b94 <HAL_UART_MspInit+0x90>)
 8001b4c:	695b      	ldr	r3, [r3, #20]
 8001b4e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001b52:	60fb      	str	r3, [r7, #12]
 8001b54:	68fb      	ldr	r3, [r7, #12]
 8001b56:	230c      	movs	r3, #12
 8001b58:	617b      	str	r3, [r7, #20]
 8001b5a:	2302      	movs	r3, #2
 8001b5c:	61bb      	str	r3, [r7, #24]
 8001b5e:	2300      	movs	r3, #0
 8001b60:	61fb      	str	r3, [r7, #28]
 8001b62:	2300      	movs	r3, #0
 8001b64:	623b      	str	r3, [r7, #32]
 8001b66:	2307      	movs	r3, #7
 8001b68:	627b      	str	r3, [r7, #36]	; 0x24
 8001b6a:	f107 0314 	add.w	r3, r7, #20
 8001b6e:	4619      	mov	r1, r3
 8001b70:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8001b74:	f000 fa9e 	bl	80020b4 <HAL_GPIO_Init>
 8001b78:	2200      	movs	r2, #0
 8001b7a:	2100      	movs	r1, #0
 8001b7c:	2026      	movs	r0, #38	; 0x26
 8001b7e:	f000 f9de 	bl	8001f3e <HAL_NVIC_SetPriority>
 8001b82:	2026      	movs	r0, #38	; 0x26
 8001b84:	f000 f9f7 	bl	8001f76 <HAL_NVIC_EnableIRQ>
 8001b88:	bf00      	nop
 8001b8a:	3728      	adds	r7, #40	; 0x28
 8001b8c:	46bd      	mov	sp, r7
 8001b8e:	bd80      	pop	{r7, pc}
 8001b90:	40004400 	.word	0x40004400
 8001b94:	40021000 	.word	0x40021000

08001b98 <Reset_Handler>:
 8001b98:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001bd0 <LoopForever+0x2>
 8001b9c:	480d      	ldr	r0, [pc, #52]	; (8001bd4 <LoopForever+0x6>)
 8001b9e:	490e      	ldr	r1, [pc, #56]	; (8001bd8 <LoopForever+0xa>)
 8001ba0:	4a0e      	ldr	r2, [pc, #56]	; (8001bdc <LoopForever+0xe>)
 8001ba2:	2300      	movs	r3, #0
 8001ba4:	e002      	b.n	8001bac <LoopCopyDataInit>

08001ba6 <CopyDataInit>:
 8001ba6:	58d4      	ldr	r4, [r2, r3]
 8001ba8:	50c4      	str	r4, [r0, r3]
 8001baa:	3304      	adds	r3, #4

08001bac <LoopCopyDataInit>:
 8001bac:	18c4      	adds	r4, r0, r3
 8001bae:	428c      	cmp	r4, r1
 8001bb0:	d3f9      	bcc.n	8001ba6 <CopyDataInit>
 8001bb2:	4a0b      	ldr	r2, [pc, #44]	; (8001be0 <LoopForever+0x12>)
 8001bb4:	4c0b      	ldr	r4, [pc, #44]	; (8001be4 <LoopForever+0x16>)
 8001bb6:	2300      	movs	r3, #0
 8001bb8:	e001      	b.n	8001bbe <LoopFillZerobss>

08001bba <FillZerobss>:
 8001bba:	6013      	str	r3, [r2, #0]
 8001bbc:	3204      	adds	r2, #4

08001bbe <LoopFillZerobss>:
 8001bbe:	42a2      	cmp	r2, r4
 8001bc0:	d3fb      	bcc.n	8001bba <FillZerobss>
 8001bc2:	f7ff ff5d 	bl	8001a80 <SystemInit>
 8001bc6:	f003 fca7 	bl	8005518 <__libc_init_array>
 8001bca:	f7fe fdcd 	bl	8000768 <main>

08001bce <LoopForever>:
 8001bce:	e7fe      	b.n	8001bce <LoopForever>
 8001bd0:	20010000 	.word	0x20010000
 8001bd4:	20000000 	.word	0x20000000
 8001bd8:	20000070 	.word	0x20000070
 8001bdc:	08006838 	.word	0x08006838
 8001be0:	20000070 	.word	0x20000070
 8001be4:	20000260 	.word	0x20000260

08001be8 <ADC1_2_IRQHandler>:
 8001be8:	e7fe      	b.n	8001be8 <ADC1_2_IRQHandler>
	...

08001bec <HAL_Init>:
 8001bec:	b580      	push	{r7, lr}
 8001bee:	af00      	add	r7, sp, #0
 8001bf0:	4b08      	ldr	r3, [pc, #32]	; (8001c14 <HAL_Init+0x28>)
 8001bf2:	681b      	ldr	r3, [r3, #0]
 8001bf4:	4a07      	ldr	r2, [pc, #28]	; (8001c14 <HAL_Init+0x28>)
 8001bf6:	f043 0310 	orr.w	r3, r3, #16
 8001bfa:	6013      	str	r3, [r2, #0]
 8001bfc:	2003      	movs	r0, #3
 8001bfe:	f000 f993 	bl	8001f28 <HAL_NVIC_SetPriorityGrouping>
 8001c02:	2000      	movs	r0, #0
 8001c04:	f000 f808 	bl	8001c18 <HAL_InitTick>
 8001c08:	f7ff fe34 	bl	8001874 <HAL_MspInit>
 8001c0c:	2300      	movs	r3, #0
 8001c0e:	4618      	mov	r0, r3
 8001c10:	bd80      	pop	{r7, pc}
 8001c12:	bf00      	nop
 8001c14:	40022000 	.word	0x40022000

08001c18 <HAL_InitTick>:
 8001c18:	b580      	push	{r7, lr}
 8001c1a:	b082      	sub	sp, #8
 8001c1c:	af00      	add	r7, sp, #0
 8001c1e:	6078      	str	r0, [r7, #4]
 8001c20:	4b12      	ldr	r3, [pc, #72]	; (8001c6c <HAL_InitTick+0x54>)
 8001c22:	681a      	ldr	r2, [r3, #0]
 8001c24:	4b12      	ldr	r3, [pc, #72]	; (8001c70 <HAL_InitTick+0x58>)
 8001c26:	781b      	ldrb	r3, [r3, #0]
 8001c28:	4619      	mov	r1, r3
 8001c2a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001c2e:	fbb3 f3f1 	udiv	r3, r3, r1
 8001c32:	fbb2 f3f3 	udiv	r3, r2, r3
 8001c36:	4618      	mov	r0, r3
 8001c38:	f000 f9b9 	bl	8001fae <HAL_SYSTICK_Config>
 8001c3c:	4603      	mov	r3, r0
 8001c3e:	2b00      	cmp	r3, #0
 8001c40:	d001      	beq.n	8001c46 <HAL_InitTick+0x2e>
 8001c42:	2301      	movs	r3, #1
 8001c44:	e00e      	b.n	8001c64 <HAL_InitTick+0x4c>
 8001c46:	687b      	ldr	r3, [r7, #4]
 8001c48:	2b0f      	cmp	r3, #15
 8001c4a:	d80a      	bhi.n	8001c62 <HAL_InitTick+0x4a>
 8001c4c:	2200      	movs	r2, #0
 8001c4e:	6879      	ldr	r1, [r7, #4]
 8001c50:	f04f 30ff 	mov.w	r0, #4294967295
 8001c54:	f000 f973 	bl	8001f3e <HAL_NVIC_SetPriority>
 8001c58:	4a06      	ldr	r2, [pc, #24]	; (8001c74 <HAL_InitTick+0x5c>)
 8001c5a:	687b      	ldr	r3, [r7, #4]
 8001c5c:	6013      	str	r3, [r2, #0]
 8001c5e:	2300      	movs	r3, #0
 8001c60:	e000      	b.n	8001c64 <HAL_InitTick+0x4c>
 8001c62:	2301      	movs	r3, #1
 8001c64:	4618      	mov	r0, r3
 8001c66:	3708      	adds	r7, #8
 8001c68:	46bd      	mov	sp, r7
 8001c6a:	bd80      	pop	{r7, pc}
 8001c6c:	20000000 	.word	0x20000000
 8001c70:	20000008 	.word	0x20000008
 8001c74:	20000004 	.word	0x20000004

08001c78 <HAL_IncTick>:
 8001c78:	b480      	push	{r7}
 8001c7a:	af00      	add	r7, sp, #0
 8001c7c:	4b06      	ldr	r3, [pc, #24]	; (8001c98 <HAL_IncTick+0x20>)
 8001c7e:	781b      	ldrb	r3, [r3, #0]
 8001c80:	461a      	mov	r2, r3
 8001c82:	4b06      	ldr	r3, [pc, #24]	; (8001c9c <HAL_IncTick+0x24>)
 8001c84:	681b      	ldr	r3, [r3, #0]
 8001c86:	4413      	add	r3, r2
 8001c88:	4a04      	ldr	r2, [pc, #16]	; (8001c9c <HAL_IncTick+0x24>)
 8001c8a:	6013      	str	r3, [r2, #0]
 8001c8c:	bf00      	nop
 8001c8e:	46bd      	mov	sp, r7
 8001c90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c94:	4770      	bx	lr
 8001c96:	bf00      	nop
 8001c98:	20000008 	.word	0x20000008
 8001c9c:	2000024c 	.word	0x2000024c

08001ca0 <HAL_GetTick>:
 8001ca0:	b480      	push	{r7}
 8001ca2:	af00      	add	r7, sp, #0
 8001ca4:	4b03      	ldr	r3, [pc, #12]	; (8001cb4 <HAL_GetTick+0x14>)
 8001ca6:	681b      	ldr	r3, [r3, #0]
 8001ca8:	4618      	mov	r0, r3
 8001caa:	46bd      	mov	sp, r7
 8001cac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cb0:	4770      	bx	lr
 8001cb2:	bf00      	nop
 8001cb4:	2000024c 	.word	0x2000024c

08001cb8 <HAL_Delay>:
 8001cb8:	b580      	push	{r7, lr}
 8001cba:	b084      	sub	sp, #16
 8001cbc:	af00      	add	r7, sp, #0
 8001cbe:	6078      	str	r0, [r7, #4]
 8001cc0:	f7ff ffee 	bl	8001ca0 <HAL_GetTick>
 8001cc4:	60b8      	str	r0, [r7, #8]
 8001cc6:	687b      	ldr	r3, [r7, #4]
 8001cc8:	60fb      	str	r3, [r7, #12]
 8001cca:	68fb      	ldr	r3, [r7, #12]
 8001ccc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001cd0:	d005      	beq.n	8001cde <HAL_Delay+0x26>
 8001cd2:	4b0a      	ldr	r3, [pc, #40]	; (8001cfc <HAL_Delay+0x44>)
 8001cd4:	781b      	ldrb	r3, [r3, #0]
 8001cd6:	461a      	mov	r2, r3
 8001cd8:	68fb      	ldr	r3, [r7, #12]
 8001cda:	4413      	add	r3, r2
 8001cdc:	60fb      	str	r3, [r7, #12]
 8001cde:	bf00      	nop
 8001ce0:	f7ff ffde 	bl	8001ca0 <HAL_GetTick>
 8001ce4:	4602      	mov	r2, r0
 8001ce6:	68bb      	ldr	r3, [r7, #8]
 8001ce8:	1ad3      	subs	r3, r2, r3
 8001cea:	68fa      	ldr	r2, [r7, #12]
 8001cec:	429a      	cmp	r2, r3
 8001cee:	d8f7      	bhi.n	8001ce0 <HAL_Delay+0x28>
 8001cf0:	bf00      	nop
 8001cf2:	bf00      	nop
 8001cf4:	3710      	adds	r7, #16
 8001cf6:	46bd      	mov	sp, r7
 8001cf8:	bd80      	pop	{r7, pc}
 8001cfa:	bf00      	nop
 8001cfc:	20000008 	.word	0x20000008

08001d00 <HAL_SuspendTick>:
 8001d00:	b480      	push	{r7}
 8001d02:	af00      	add	r7, sp, #0
 8001d04:	4b05      	ldr	r3, [pc, #20]	; (8001d1c <HAL_SuspendTick+0x1c>)
 8001d06:	681b      	ldr	r3, [r3, #0]
 8001d08:	4a04      	ldr	r2, [pc, #16]	; (8001d1c <HAL_SuspendTick+0x1c>)
 8001d0a:	f023 0302 	bic.w	r3, r3, #2
 8001d0e:	6013      	str	r3, [r2, #0]
 8001d10:	bf00      	nop
 8001d12:	46bd      	mov	sp, r7
 8001d14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d18:	4770      	bx	lr
 8001d1a:	bf00      	nop
 8001d1c:	e000e010 	.word	0xe000e010

08001d20 <HAL_ResumeTick>:
 8001d20:	b480      	push	{r7}
 8001d22:	af00      	add	r7, sp, #0
 8001d24:	4b05      	ldr	r3, [pc, #20]	; (8001d3c <HAL_ResumeTick+0x1c>)
 8001d26:	681b      	ldr	r3, [r3, #0]
 8001d28:	4a04      	ldr	r2, [pc, #16]	; (8001d3c <HAL_ResumeTick+0x1c>)
 8001d2a:	f043 0302 	orr.w	r3, r3, #2
 8001d2e:	6013      	str	r3, [r2, #0]
 8001d30:	bf00      	nop
 8001d32:	46bd      	mov	sp, r7
 8001d34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d38:	4770      	bx	lr
 8001d3a:	bf00      	nop
 8001d3c:	e000e010 	.word	0xe000e010

08001d40 <__NVIC_SetPriorityGrouping>:
 8001d40:	b480      	push	{r7}
 8001d42:	b085      	sub	sp, #20
 8001d44:	af00      	add	r7, sp, #0
 8001d46:	6078      	str	r0, [r7, #4]
 8001d48:	687b      	ldr	r3, [r7, #4]
 8001d4a:	f003 0307 	and.w	r3, r3, #7
 8001d4e:	60fb      	str	r3, [r7, #12]
 8001d50:	4b0c      	ldr	r3, [pc, #48]	; (8001d84 <__NVIC_SetPriorityGrouping+0x44>)
 8001d52:	68db      	ldr	r3, [r3, #12]
 8001d54:	60bb      	str	r3, [r7, #8]
 8001d56:	68ba      	ldr	r2, [r7, #8]
 8001d58:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001d5c:	4013      	ands	r3, r2
 8001d5e:	60bb      	str	r3, [r7, #8]
 8001d60:	68fb      	ldr	r3, [r7, #12]
 8001d62:	021a      	lsls	r2, r3, #8
 8001d64:	68bb      	ldr	r3, [r7, #8]
 8001d66:	4313      	orrs	r3, r2
 8001d68:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001d6c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001d70:	60bb      	str	r3, [r7, #8]
 8001d72:	4a04      	ldr	r2, [pc, #16]	; (8001d84 <__NVIC_SetPriorityGrouping+0x44>)
 8001d74:	68bb      	ldr	r3, [r7, #8]
 8001d76:	60d3      	str	r3, [r2, #12]
 8001d78:	bf00      	nop
 8001d7a:	3714      	adds	r7, #20
 8001d7c:	46bd      	mov	sp, r7
 8001d7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d82:	4770      	bx	lr
 8001d84:	e000ed00 	.word	0xe000ed00

08001d88 <__NVIC_GetPriorityGrouping>:
 8001d88:	b480      	push	{r7}
 8001d8a:	af00      	add	r7, sp, #0
 8001d8c:	4b04      	ldr	r3, [pc, #16]	; (8001da0 <__NVIC_GetPriorityGrouping+0x18>)
 8001d8e:	68db      	ldr	r3, [r3, #12]
 8001d90:	0a1b      	lsrs	r3, r3, #8
 8001d92:	f003 0307 	and.w	r3, r3, #7
 8001d96:	4618      	mov	r0, r3
 8001d98:	46bd      	mov	sp, r7
 8001d9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d9e:	4770      	bx	lr
 8001da0:	e000ed00 	.word	0xe000ed00

08001da4 <__NVIC_EnableIRQ>:
 8001da4:	b480      	push	{r7}
 8001da6:	b083      	sub	sp, #12
 8001da8:	af00      	add	r7, sp, #0
 8001daa:	4603      	mov	r3, r0
 8001dac:	71fb      	strb	r3, [r7, #7]
 8001dae:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001db2:	2b00      	cmp	r3, #0
 8001db4:	db0b      	blt.n	8001dce <__NVIC_EnableIRQ+0x2a>
 8001db6:	79fb      	ldrb	r3, [r7, #7]
 8001db8:	f003 021f 	and.w	r2, r3, #31
 8001dbc:	4907      	ldr	r1, [pc, #28]	; (8001ddc <__NVIC_EnableIRQ+0x38>)
 8001dbe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001dc2:	095b      	lsrs	r3, r3, #5
 8001dc4:	2001      	movs	r0, #1
 8001dc6:	fa00 f202 	lsl.w	r2, r0, r2
 8001dca:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001dce:	bf00      	nop
 8001dd0:	370c      	adds	r7, #12
 8001dd2:	46bd      	mov	sp, r7
 8001dd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dd8:	4770      	bx	lr
 8001dda:	bf00      	nop
 8001ddc:	e000e100 	.word	0xe000e100

08001de0 <__NVIC_DisableIRQ>:
 8001de0:	b480      	push	{r7}
 8001de2:	b083      	sub	sp, #12
 8001de4:	af00      	add	r7, sp, #0
 8001de6:	4603      	mov	r3, r0
 8001de8:	71fb      	strb	r3, [r7, #7]
 8001dea:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001dee:	2b00      	cmp	r3, #0
 8001df0:	db12      	blt.n	8001e18 <__NVIC_DisableIRQ+0x38>
 8001df2:	79fb      	ldrb	r3, [r7, #7]
 8001df4:	f003 021f 	and.w	r2, r3, #31
 8001df8:	490a      	ldr	r1, [pc, #40]	; (8001e24 <__NVIC_DisableIRQ+0x44>)
 8001dfa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001dfe:	095b      	lsrs	r3, r3, #5
 8001e00:	2001      	movs	r0, #1
 8001e02:	fa00 f202 	lsl.w	r2, r0, r2
 8001e06:	3320      	adds	r3, #32
 8001e08:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001e0c:	f3bf 8f4f 	dsb	sy
 8001e10:	bf00      	nop
 8001e12:	f3bf 8f6f 	isb	sy
 8001e16:	bf00      	nop
 8001e18:	bf00      	nop
 8001e1a:	370c      	adds	r7, #12
 8001e1c:	46bd      	mov	sp, r7
 8001e1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e22:	4770      	bx	lr
 8001e24:	e000e100 	.word	0xe000e100

08001e28 <__NVIC_SetPriority>:
 8001e28:	b480      	push	{r7}
 8001e2a:	b083      	sub	sp, #12
 8001e2c:	af00      	add	r7, sp, #0
 8001e2e:	4603      	mov	r3, r0
 8001e30:	6039      	str	r1, [r7, #0]
 8001e32:	71fb      	strb	r3, [r7, #7]
 8001e34:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001e38:	2b00      	cmp	r3, #0
 8001e3a:	db0a      	blt.n	8001e52 <__NVIC_SetPriority+0x2a>
 8001e3c:	683b      	ldr	r3, [r7, #0]
 8001e3e:	b2da      	uxtb	r2, r3
 8001e40:	490c      	ldr	r1, [pc, #48]	; (8001e74 <__NVIC_SetPriority+0x4c>)
 8001e42:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001e46:	0112      	lsls	r2, r2, #4
 8001e48:	b2d2      	uxtb	r2, r2
 8001e4a:	440b      	add	r3, r1
 8001e4c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001e50:	e00a      	b.n	8001e68 <__NVIC_SetPriority+0x40>
 8001e52:	683b      	ldr	r3, [r7, #0]
 8001e54:	b2da      	uxtb	r2, r3
 8001e56:	4908      	ldr	r1, [pc, #32]	; (8001e78 <__NVIC_SetPriority+0x50>)
 8001e58:	79fb      	ldrb	r3, [r7, #7]
 8001e5a:	f003 030f 	and.w	r3, r3, #15
 8001e5e:	3b04      	subs	r3, #4
 8001e60:	0112      	lsls	r2, r2, #4
 8001e62:	b2d2      	uxtb	r2, r2
 8001e64:	440b      	add	r3, r1
 8001e66:	761a      	strb	r2, [r3, #24]
 8001e68:	bf00      	nop
 8001e6a:	370c      	adds	r7, #12
 8001e6c:	46bd      	mov	sp, r7
 8001e6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e72:	4770      	bx	lr
 8001e74:	e000e100 	.word	0xe000e100
 8001e78:	e000ed00 	.word	0xe000ed00

08001e7c <NVIC_EncodePriority>:
 8001e7c:	b480      	push	{r7}
 8001e7e:	b089      	sub	sp, #36	; 0x24
 8001e80:	af00      	add	r7, sp, #0
 8001e82:	60f8      	str	r0, [r7, #12]
 8001e84:	60b9      	str	r1, [r7, #8]
 8001e86:	607a      	str	r2, [r7, #4]
 8001e88:	68fb      	ldr	r3, [r7, #12]
 8001e8a:	f003 0307 	and.w	r3, r3, #7
 8001e8e:	61fb      	str	r3, [r7, #28]
 8001e90:	69fb      	ldr	r3, [r7, #28]
 8001e92:	f1c3 0307 	rsb	r3, r3, #7
 8001e96:	2b04      	cmp	r3, #4
 8001e98:	bf28      	it	cs
 8001e9a:	2304      	movcs	r3, #4
 8001e9c:	61bb      	str	r3, [r7, #24]
 8001e9e:	69fb      	ldr	r3, [r7, #28]
 8001ea0:	3304      	adds	r3, #4
 8001ea2:	2b06      	cmp	r3, #6
 8001ea4:	d902      	bls.n	8001eac <NVIC_EncodePriority+0x30>
 8001ea6:	69fb      	ldr	r3, [r7, #28]
 8001ea8:	3b03      	subs	r3, #3
 8001eaa:	e000      	b.n	8001eae <NVIC_EncodePriority+0x32>
 8001eac:	2300      	movs	r3, #0
 8001eae:	617b      	str	r3, [r7, #20]
 8001eb0:	f04f 32ff 	mov.w	r2, #4294967295
 8001eb4:	69bb      	ldr	r3, [r7, #24]
 8001eb6:	fa02 f303 	lsl.w	r3, r2, r3
 8001eba:	43da      	mvns	r2, r3
 8001ebc:	68bb      	ldr	r3, [r7, #8]
 8001ebe:	401a      	ands	r2, r3
 8001ec0:	697b      	ldr	r3, [r7, #20]
 8001ec2:	409a      	lsls	r2, r3
 8001ec4:	f04f 31ff 	mov.w	r1, #4294967295
 8001ec8:	697b      	ldr	r3, [r7, #20]
 8001eca:	fa01 f303 	lsl.w	r3, r1, r3
 8001ece:	43d9      	mvns	r1, r3
 8001ed0:	687b      	ldr	r3, [r7, #4]
 8001ed2:	400b      	ands	r3, r1
 8001ed4:	4313      	orrs	r3, r2
 8001ed6:	4618      	mov	r0, r3
 8001ed8:	3724      	adds	r7, #36	; 0x24
 8001eda:	46bd      	mov	sp, r7
 8001edc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ee0:	4770      	bx	lr
	...

08001ee4 <SysTick_Config>:
 8001ee4:	b580      	push	{r7, lr}
 8001ee6:	b082      	sub	sp, #8
 8001ee8:	af00      	add	r7, sp, #0
 8001eea:	6078      	str	r0, [r7, #4]
 8001eec:	687b      	ldr	r3, [r7, #4]
 8001eee:	3b01      	subs	r3, #1
 8001ef0:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001ef4:	d301      	bcc.n	8001efa <SysTick_Config+0x16>
 8001ef6:	2301      	movs	r3, #1
 8001ef8:	e00f      	b.n	8001f1a <SysTick_Config+0x36>
 8001efa:	4a0a      	ldr	r2, [pc, #40]	; (8001f24 <SysTick_Config+0x40>)
 8001efc:	687b      	ldr	r3, [r7, #4]
 8001efe:	3b01      	subs	r3, #1
 8001f00:	6053      	str	r3, [r2, #4]
 8001f02:	210f      	movs	r1, #15
 8001f04:	f04f 30ff 	mov.w	r0, #4294967295
 8001f08:	f7ff ff8e 	bl	8001e28 <__NVIC_SetPriority>
 8001f0c:	4b05      	ldr	r3, [pc, #20]	; (8001f24 <SysTick_Config+0x40>)
 8001f0e:	2200      	movs	r2, #0
 8001f10:	609a      	str	r2, [r3, #8]
 8001f12:	4b04      	ldr	r3, [pc, #16]	; (8001f24 <SysTick_Config+0x40>)
 8001f14:	2207      	movs	r2, #7
 8001f16:	601a      	str	r2, [r3, #0]
 8001f18:	2300      	movs	r3, #0
 8001f1a:	4618      	mov	r0, r3
 8001f1c:	3708      	adds	r7, #8
 8001f1e:	46bd      	mov	sp, r7
 8001f20:	bd80      	pop	{r7, pc}
 8001f22:	bf00      	nop
 8001f24:	e000e010 	.word	0xe000e010

08001f28 <HAL_NVIC_SetPriorityGrouping>:
 8001f28:	b580      	push	{r7, lr}
 8001f2a:	b082      	sub	sp, #8
 8001f2c:	af00      	add	r7, sp, #0
 8001f2e:	6078      	str	r0, [r7, #4]
 8001f30:	6878      	ldr	r0, [r7, #4]
 8001f32:	f7ff ff05 	bl	8001d40 <__NVIC_SetPriorityGrouping>
 8001f36:	bf00      	nop
 8001f38:	3708      	adds	r7, #8
 8001f3a:	46bd      	mov	sp, r7
 8001f3c:	bd80      	pop	{r7, pc}

08001f3e <HAL_NVIC_SetPriority>:
 8001f3e:	b580      	push	{r7, lr}
 8001f40:	b086      	sub	sp, #24
 8001f42:	af00      	add	r7, sp, #0
 8001f44:	4603      	mov	r3, r0
 8001f46:	60b9      	str	r1, [r7, #8]
 8001f48:	607a      	str	r2, [r7, #4]
 8001f4a:	73fb      	strb	r3, [r7, #15]
 8001f4c:	2300      	movs	r3, #0
 8001f4e:	617b      	str	r3, [r7, #20]
 8001f50:	f7ff ff1a 	bl	8001d88 <__NVIC_GetPriorityGrouping>
 8001f54:	6178      	str	r0, [r7, #20]
 8001f56:	687a      	ldr	r2, [r7, #4]
 8001f58:	68b9      	ldr	r1, [r7, #8]
 8001f5a:	6978      	ldr	r0, [r7, #20]
 8001f5c:	f7ff ff8e 	bl	8001e7c <NVIC_EncodePriority>
 8001f60:	4602      	mov	r2, r0
 8001f62:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001f66:	4611      	mov	r1, r2
 8001f68:	4618      	mov	r0, r3
 8001f6a:	f7ff ff5d 	bl	8001e28 <__NVIC_SetPriority>
 8001f6e:	bf00      	nop
 8001f70:	3718      	adds	r7, #24
 8001f72:	46bd      	mov	sp, r7
 8001f74:	bd80      	pop	{r7, pc}

08001f76 <HAL_NVIC_EnableIRQ>:
 8001f76:	b580      	push	{r7, lr}
 8001f78:	b082      	sub	sp, #8
 8001f7a:	af00      	add	r7, sp, #0
 8001f7c:	4603      	mov	r3, r0
 8001f7e:	71fb      	strb	r3, [r7, #7]
 8001f80:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001f84:	4618      	mov	r0, r3
 8001f86:	f7ff ff0d 	bl	8001da4 <__NVIC_EnableIRQ>
 8001f8a:	bf00      	nop
 8001f8c:	3708      	adds	r7, #8
 8001f8e:	46bd      	mov	sp, r7
 8001f90:	bd80      	pop	{r7, pc}

08001f92 <HAL_NVIC_DisableIRQ>:
 8001f92:	b580      	push	{r7, lr}
 8001f94:	b082      	sub	sp, #8
 8001f96:	af00      	add	r7, sp, #0
 8001f98:	4603      	mov	r3, r0
 8001f9a:	71fb      	strb	r3, [r7, #7]
 8001f9c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001fa0:	4618      	mov	r0, r3
 8001fa2:	f7ff ff1d 	bl	8001de0 <__NVIC_DisableIRQ>
 8001fa6:	bf00      	nop
 8001fa8:	3708      	adds	r7, #8
 8001faa:	46bd      	mov	sp, r7
 8001fac:	bd80      	pop	{r7, pc}

08001fae <HAL_SYSTICK_Config>:
 8001fae:	b580      	push	{r7, lr}
 8001fb0:	b082      	sub	sp, #8
 8001fb2:	af00      	add	r7, sp, #0
 8001fb4:	6078      	str	r0, [r7, #4]
 8001fb6:	6878      	ldr	r0, [r7, #4]
 8001fb8:	f7ff ff94 	bl	8001ee4 <SysTick_Config>
 8001fbc:	4603      	mov	r3, r0
 8001fbe:	4618      	mov	r0, r3
 8001fc0:	3708      	adds	r7, #8
 8001fc2:	46bd      	mov	sp, r7
 8001fc4:	bd80      	pop	{r7, pc}

08001fc6 <HAL_DMA_Abort>:
 8001fc6:	b480      	push	{r7}
 8001fc8:	b083      	sub	sp, #12
 8001fca:	af00      	add	r7, sp, #0
 8001fcc:	6078      	str	r0, [r7, #4]
 8001fce:	687b      	ldr	r3, [r7, #4]
 8001fd0:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8001fd4:	2b02      	cmp	r3, #2
 8001fd6:	d008      	beq.n	8001fea <HAL_DMA_Abort+0x24>
 8001fd8:	687b      	ldr	r3, [r7, #4]
 8001fda:	2204      	movs	r2, #4
 8001fdc:	639a      	str	r2, [r3, #56]	; 0x38
 8001fde:	687b      	ldr	r3, [r7, #4]
 8001fe0:	2200      	movs	r2, #0
 8001fe2:	f883 2020 	strb.w	r2, [r3, #32]
 8001fe6:	2301      	movs	r3, #1
 8001fe8:	e020      	b.n	800202c <HAL_DMA_Abort+0x66>
 8001fea:	687b      	ldr	r3, [r7, #4]
 8001fec:	681b      	ldr	r3, [r3, #0]
 8001fee:	681a      	ldr	r2, [r3, #0]
 8001ff0:	687b      	ldr	r3, [r7, #4]
 8001ff2:	681b      	ldr	r3, [r3, #0]
 8001ff4:	f022 020e 	bic.w	r2, r2, #14
 8001ff8:	601a      	str	r2, [r3, #0]
 8001ffa:	687b      	ldr	r3, [r7, #4]
 8001ffc:	681b      	ldr	r3, [r3, #0]
 8001ffe:	681a      	ldr	r2, [r3, #0]
 8002000:	687b      	ldr	r3, [r7, #4]
 8002002:	681b      	ldr	r3, [r3, #0]
 8002004:	f022 0201 	bic.w	r2, r2, #1
 8002008:	601a      	str	r2, [r3, #0]
 800200a:	687b      	ldr	r3, [r7, #4]
 800200c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800200e:	687b      	ldr	r3, [r7, #4]
 8002010:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002012:	2101      	movs	r1, #1
 8002014:	fa01 f202 	lsl.w	r2, r1, r2
 8002018:	605a      	str	r2, [r3, #4]
 800201a:	687b      	ldr	r3, [r7, #4]
 800201c:	2201      	movs	r2, #1
 800201e:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8002022:	687b      	ldr	r3, [r7, #4]
 8002024:	2200      	movs	r2, #0
 8002026:	f883 2020 	strb.w	r2, [r3, #32]
 800202a:	2300      	movs	r3, #0
 800202c:	4618      	mov	r0, r3
 800202e:	370c      	adds	r7, #12
 8002030:	46bd      	mov	sp, r7
 8002032:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002036:	4770      	bx	lr

08002038 <HAL_DMA_Abort_IT>:
 8002038:	b580      	push	{r7, lr}
 800203a:	b084      	sub	sp, #16
 800203c:	af00      	add	r7, sp, #0
 800203e:	6078      	str	r0, [r7, #4]
 8002040:	2300      	movs	r3, #0
 8002042:	73fb      	strb	r3, [r7, #15]
 8002044:	687b      	ldr	r3, [r7, #4]
 8002046:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 800204a:	2b02      	cmp	r3, #2
 800204c:	d005      	beq.n	800205a <HAL_DMA_Abort_IT+0x22>
 800204e:	687b      	ldr	r3, [r7, #4]
 8002050:	2204      	movs	r2, #4
 8002052:	639a      	str	r2, [r3, #56]	; 0x38
 8002054:	2301      	movs	r3, #1
 8002056:	73fb      	strb	r3, [r7, #15]
 8002058:	e027      	b.n	80020aa <HAL_DMA_Abort_IT+0x72>
 800205a:	687b      	ldr	r3, [r7, #4]
 800205c:	681b      	ldr	r3, [r3, #0]
 800205e:	681a      	ldr	r2, [r3, #0]
 8002060:	687b      	ldr	r3, [r7, #4]
 8002062:	681b      	ldr	r3, [r3, #0]
 8002064:	f022 020e 	bic.w	r2, r2, #14
 8002068:	601a      	str	r2, [r3, #0]
 800206a:	687b      	ldr	r3, [r7, #4]
 800206c:	681b      	ldr	r3, [r3, #0]
 800206e:	681a      	ldr	r2, [r3, #0]
 8002070:	687b      	ldr	r3, [r7, #4]
 8002072:	681b      	ldr	r3, [r3, #0]
 8002074:	f022 0201 	bic.w	r2, r2, #1
 8002078:	601a      	str	r2, [r3, #0]
 800207a:	687b      	ldr	r3, [r7, #4]
 800207c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800207e:	687b      	ldr	r3, [r7, #4]
 8002080:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002082:	2101      	movs	r1, #1
 8002084:	fa01 f202 	lsl.w	r2, r1, r2
 8002088:	605a      	str	r2, [r3, #4]
 800208a:	687b      	ldr	r3, [r7, #4]
 800208c:	2201      	movs	r2, #1
 800208e:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8002092:	687b      	ldr	r3, [r7, #4]
 8002094:	2200      	movs	r2, #0
 8002096:	f883 2020 	strb.w	r2, [r3, #32]
 800209a:	687b      	ldr	r3, [r7, #4]
 800209c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800209e:	2b00      	cmp	r3, #0
 80020a0:	d003      	beq.n	80020aa <HAL_DMA_Abort_IT+0x72>
 80020a2:	687b      	ldr	r3, [r7, #4]
 80020a4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80020a6:	6878      	ldr	r0, [r7, #4]
 80020a8:	4798      	blx	r3
 80020aa:	7bfb      	ldrb	r3, [r7, #15]
 80020ac:	4618      	mov	r0, r3
 80020ae:	3710      	adds	r7, #16
 80020b0:	46bd      	mov	sp, r7
 80020b2:	bd80      	pop	{r7, pc}

080020b4 <HAL_GPIO_Init>:
 80020b4:	b480      	push	{r7}
 80020b6:	b087      	sub	sp, #28
 80020b8:	af00      	add	r7, sp, #0
 80020ba:	6078      	str	r0, [r7, #4]
 80020bc:	6039      	str	r1, [r7, #0]
 80020be:	2300      	movs	r3, #0
 80020c0:	617b      	str	r3, [r7, #20]
 80020c2:	e160      	b.n	8002386 <HAL_GPIO_Init+0x2d2>
 80020c4:	683b      	ldr	r3, [r7, #0]
 80020c6:	681a      	ldr	r2, [r3, #0]
 80020c8:	2101      	movs	r1, #1
 80020ca:	697b      	ldr	r3, [r7, #20]
 80020cc:	fa01 f303 	lsl.w	r3, r1, r3
 80020d0:	4013      	ands	r3, r2
 80020d2:	60fb      	str	r3, [r7, #12]
 80020d4:	68fb      	ldr	r3, [r7, #12]
 80020d6:	2b00      	cmp	r3, #0
 80020d8:	f000 8152 	beq.w	8002380 <HAL_GPIO_Init+0x2cc>
 80020dc:	683b      	ldr	r3, [r7, #0]
 80020de:	685b      	ldr	r3, [r3, #4]
 80020e0:	2b01      	cmp	r3, #1
 80020e2:	d00b      	beq.n	80020fc <HAL_GPIO_Init+0x48>
 80020e4:	683b      	ldr	r3, [r7, #0]
 80020e6:	685b      	ldr	r3, [r3, #4]
 80020e8:	2b02      	cmp	r3, #2
 80020ea:	d007      	beq.n	80020fc <HAL_GPIO_Init+0x48>
 80020ec:	683b      	ldr	r3, [r7, #0]
 80020ee:	685b      	ldr	r3, [r3, #4]
 80020f0:	2b11      	cmp	r3, #17
 80020f2:	d003      	beq.n	80020fc <HAL_GPIO_Init+0x48>
 80020f4:	683b      	ldr	r3, [r7, #0]
 80020f6:	685b      	ldr	r3, [r3, #4]
 80020f8:	2b12      	cmp	r3, #18
 80020fa:	d130      	bne.n	800215e <HAL_GPIO_Init+0xaa>
 80020fc:	687b      	ldr	r3, [r7, #4]
 80020fe:	689b      	ldr	r3, [r3, #8]
 8002100:	613b      	str	r3, [r7, #16]
 8002102:	697b      	ldr	r3, [r7, #20]
 8002104:	005b      	lsls	r3, r3, #1
 8002106:	2203      	movs	r2, #3
 8002108:	fa02 f303 	lsl.w	r3, r2, r3
 800210c:	43db      	mvns	r3, r3
 800210e:	693a      	ldr	r2, [r7, #16]
 8002110:	4013      	ands	r3, r2
 8002112:	613b      	str	r3, [r7, #16]
 8002114:	683b      	ldr	r3, [r7, #0]
 8002116:	68da      	ldr	r2, [r3, #12]
 8002118:	697b      	ldr	r3, [r7, #20]
 800211a:	005b      	lsls	r3, r3, #1
 800211c:	fa02 f303 	lsl.w	r3, r2, r3
 8002120:	693a      	ldr	r2, [r7, #16]
 8002122:	4313      	orrs	r3, r2
 8002124:	613b      	str	r3, [r7, #16]
 8002126:	687b      	ldr	r3, [r7, #4]
 8002128:	693a      	ldr	r2, [r7, #16]
 800212a:	609a      	str	r2, [r3, #8]
 800212c:	687b      	ldr	r3, [r7, #4]
 800212e:	685b      	ldr	r3, [r3, #4]
 8002130:	613b      	str	r3, [r7, #16]
 8002132:	2201      	movs	r2, #1
 8002134:	697b      	ldr	r3, [r7, #20]
 8002136:	fa02 f303 	lsl.w	r3, r2, r3
 800213a:	43db      	mvns	r3, r3
 800213c:	693a      	ldr	r2, [r7, #16]
 800213e:	4013      	ands	r3, r2
 8002140:	613b      	str	r3, [r7, #16]
 8002142:	683b      	ldr	r3, [r7, #0]
 8002144:	685b      	ldr	r3, [r3, #4]
 8002146:	091b      	lsrs	r3, r3, #4
 8002148:	f003 0201 	and.w	r2, r3, #1
 800214c:	697b      	ldr	r3, [r7, #20]
 800214e:	fa02 f303 	lsl.w	r3, r2, r3
 8002152:	693a      	ldr	r2, [r7, #16]
 8002154:	4313      	orrs	r3, r2
 8002156:	613b      	str	r3, [r7, #16]
 8002158:	687b      	ldr	r3, [r7, #4]
 800215a:	693a      	ldr	r2, [r7, #16]
 800215c:	605a      	str	r2, [r3, #4]
 800215e:	687b      	ldr	r3, [r7, #4]
 8002160:	68db      	ldr	r3, [r3, #12]
 8002162:	613b      	str	r3, [r7, #16]
 8002164:	697b      	ldr	r3, [r7, #20]
 8002166:	005b      	lsls	r3, r3, #1
 8002168:	2203      	movs	r2, #3
 800216a:	fa02 f303 	lsl.w	r3, r2, r3
 800216e:	43db      	mvns	r3, r3
 8002170:	693a      	ldr	r2, [r7, #16]
 8002172:	4013      	ands	r3, r2
 8002174:	613b      	str	r3, [r7, #16]
 8002176:	683b      	ldr	r3, [r7, #0]
 8002178:	689a      	ldr	r2, [r3, #8]
 800217a:	697b      	ldr	r3, [r7, #20]
 800217c:	005b      	lsls	r3, r3, #1
 800217e:	fa02 f303 	lsl.w	r3, r2, r3
 8002182:	693a      	ldr	r2, [r7, #16]
 8002184:	4313      	orrs	r3, r2
 8002186:	613b      	str	r3, [r7, #16]
 8002188:	687b      	ldr	r3, [r7, #4]
 800218a:	693a      	ldr	r2, [r7, #16]
 800218c:	60da      	str	r2, [r3, #12]
 800218e:	683b      	ldr	r3, [r7, #0]
 8002190:	685b      	ldr	r3, [r3, #4]
 8002192:	2b02      	cmp	r3, #2
 8002194:	d003      	beq.n	800219e <HAL_GPIO_Init+0xea>
 8002196:	683b      	ldr	r3, [r7, #0]
 8002198:	685b      	ldr	r3, [r3, #4]
 800219a:	2b12      	cmp	r3, #18
 800219c:	d123      	bne.n	80021e6 <HAL_GPIO_Init+0x132>
 800219e:	697b      	ldr	r3, [r7, #20]
 80021a0:	08da      	lsrs	r2, r3, #3
 80021a2:	687b      	ldr	r3, [r7, #4]
 80021a4:	3208      	adds	r2, #8
 80021a6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80021aa:	613b      	str	r3, [r7, #16]
 80021ac:	697b      	ldr	r3, [r7, #20]
 80021ae:	f003 0307 	and.w	r3, r3, #7
 80021b2:	009b      	lsls	r3, r3, #2
 80021b4:	220f      	movs	r2, #15
 80021b6:	fa02 f303 	lsl.w	r3, r2, r3
 80021ba:	43db      	mvns	r3, r3
 80021bc:	693a      	ldr	r2, [r7, #16]
 80021be:	4013      	ands	r3, r2
 80021c0:	613b      	str	r3, [r7, #16]
 80021c2:	683b      	ldr	r3, [r7, #0]
 80021c4:	691a      	ldr	r2, [r3, #16]
 80021c6:	697b      	ldr	r3, [r7, #20]
 80021c8:	f003 0307 	and.w	r3, r3, #7
 80021cc:	009b      	lsls	r3, r3, #2
 80021ce:	fa02 f303 	lsl.w	r3, r2, r3
 80021d2:	693a      	ldr	r2, [r7, #16]
 80021d4:	4313      	orrs	r3, r2
 80021d6:	613b      	str	r3, [r7, #16]
 80021d8:	697b      	ldr	r3, [r7, #20]
 80021da:	08da      	lsrs	r2, r3, #3
 80021dc:	687b      	ldr	r3, [r7, #4]
 80021de:	3208      	adds	r2, #8
 80021e0:	6939      	ldr	r1, [r7, #16]
 80021e2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80021e6:	687b      	ldr	r3, [r7, #4]
 80021e8:	681b      	ldr	r3, [r3, #0]
 80021ea:	613b      	str	r3, [r7, #16]
 80021ec:	697b      	ldr	r3, [r7, #20]
 80021ee:	005b      	lsls	r3, r3, #1
 80021f0:	2203      	movs	r2, #3
 80021f2:	fa02 f303 	lsl.w	r3, r2, r3
 80021f6:	43db      	mvns	r3, r3
 80021f8:	693a      	ldr	r2, [r7, #16]
 80021fa:	4013      	ands	r3, r2
 80021fc:	613b      	str	r3, [r7, #16]
 80021fe:	683b      	ldr	r3, [r7, #0]
 8002200:	685b      	ldr	r3, [r3, #4]
 8002202:	f003 0203 	and.w	r2, r3, #3
 8002206:	697b      	ldr	r3, [r7, #20]
 8002208:	005b      	lsls	r3, r3, #1
 800220a:	fa02 f303 	lsl.w	r3, r2, r3
 800220e:	693a      	ldr	r2, [r7, #16]
 8002210:	4313      	orrs	r3, r2
 8002212:	613b      	str	r3, [r7, #16]
 8002214:	687b      	ldr	r3, [r7, #4]
 8002216:	693a      	ldr	r2, [r7, #16]
 8002218:	601a      	str	r2, [r3, #0]
 800221a:	683b      	ldr	r3, [r7, #0]
 800221c:	685b      	ldr	r3, [r3, #4]
 800221e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002222:	2b00      	cmp	r3, #0
 8002224:	f000 80ac 	beq.w	8002380 <HAL_GPIO_Init+0x2cc>
 8002228:	4b5e      	ldr	r3, [pc, #376]	; (80023a4 <HAL_GPIO_Init+0x2f0>)
 800222a:	699b      	ldr	r3, [r3, #24]
 800222c:	4a5d      	ldr	r2, [pc, #372]	; (80023a4 <HAL_GPIO_Init+0x2f0>)
 800222e:	f043 0301 	orr.w	r3, r3, #1
 8002232:	6193      	str	r3, [r2, #24]
 8002234:	4b5b      	ldr	r3, [pc, #364]	; (80023a4 <HAL_GPIO_Init+0x2f0>)
 8002236:	699b      	ldr	r3, [r3, #24]
 8002238:	f003 0301 	and.w	r3, r3, #1
 800223c:	60bb      	str	r3, [r7, #8]
 800223e:	68bb      	ldr	r3, [r7, #8]
 8002240:	4a59      	ldr	r2, [pc, #356]	; (80023a8 <HAL_GPIO_Init+0x2f4>)
 8002242:	697b      	ldr	r3, [r7, #20]
 8002244:	089b      	lsrs	r3, r3, #2
 8002246:	3302      	adds	r3, #2
 8002248:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800224c:	613b      	str	r3, [r7, #16]
 800224e:	697b      	ldr	r3, [r7, #20]
 8002250:	f003 0303 	and.w	r3, r3, #3
 8002254:	009b      	lsls	r3, r3, #2
 8002256:	220f      	movs	r2, #15
 8002258:	fa02 f303 	lsl.w	r3, r2, r3
 800225c:	43db      	mvns	r3, r3
 800225e:	693a      	ldr	r2, [r7, #16]
 8002260:	4013      	ands	r3, r2
 8002262:	613b      	str	r3, [r7, #16]
 8002264:	687b      	ldr	r3, [r7, #4]
 8002266:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 800226a:	d025      	beq.n	80022b8 <HAL_GPIO_Init+0x204>
 800226c:	687b      	ldr	r3, [r7, #4]
 800226e:	4a4f      	ldr	r2, [pc, #316]	; (80023ac <HAL_GPIO_Init+0x2f8>)
 8002270:	4293      	cmp	r3, r2
 8002272:	d01f      	beq.n	80022b4 <HAL_GPIO_Init+0x200>
 8002274:	687b      	ldr	r3, [r7, #4]
 8002276:	4a4e      	ldr	r2, [pc, #312]	; (80023b0 <HAL_GPIO_Init+0x2fc>)
 8002278:	4293      	cmp	r3, r2
 800227a:	d019      	beq.n	80022b0 <HAL_GPIO_Init+0x1fc>
 800227c:	687b      	ldr	r3, [r7, #4]
 800227e:	4a4d      	ldr	r2, [pc, #308]	; (80023b4 <HAL_GPIO_Init+0x300>)
 8002280:	4293      	cmp	r3, r2
 8002282:	d013      	beq.n	80022ac <HAL_GPIO_Init+0x1f8>
 8002284:	687b      	ldr	r3, [r7, #4]
 8002286:	4a4c      	ldr	r2, [pc, #304]	; (80023b8 <HAL_GPIO_Init+0x304>)
 8002288:	4293      	cmp	r3, r2
 800228a:	d00d      	beq.n	80022a8 <HAL_GPIO_Init+0x1f4>
 800228c:	687b      	ldr	r3, [r7, #4]
 800228e:	4a4b      	ldr	r2, [pc, #300]	; (80023bc <HAL_GPIO_Init+0x308>)
 8002290:	4293      	cmp	r3, r2
 8002292:	d007      	beq.n	80022a4 <HAL_GPIO_Init+0x1f0>
 8002294:	687b      	ldr	r3, [r7, #4]
 8002296:	4a4a      	ldr	r2, [pc, #296]	; (80023c0 <HAL_GPIO_Init+0x30c>)
 8002298:	4293      	cmp	r3, r2
 800229a:	d101      	bne.n	80022a0 <HAL_GPIO_Init+0x1ec>
 800229c:	2306      	movs	r3, #6
 800229e:	e00c      	b.n	80022ba <HAL_GPIO_Init+0x206>
 80022a0:	2307      	movs	r3, #7
 80022a2:	e00a      	b.n	80022ba <HAL_GPIO_Init+0x206>
 80022a4:	2305      	movs	r3, #5
 80022a6:	e008      	b.n	80022ba <HAL_GPIO_Init+0x206>
 80022a8:	2304      	movs	r3, #4
 80022aa:	e006      	b.n	80022ba <HAL_GPIO_Init+0x206>
 80022ac:	2303      	movs	r3, #3
 80022ae:	e004      	b.n	80022ba <HAL_GPIO_Init+0x206>
 80022b0:	2302      	movs	r3, #2
 80022b2:	e002      	b.n	80022ba <HAL_GPIO_Init+0x206>
 80022b4:	2301      	movs	r3, #1
 80022b6:	e000      	b.n	80022ba <HAL_GPIO_Init+0x206>
 80022b8:	2300      	movs	r3, #0
 80022ba:	697a      	ldr	r2, [r7, #20]
 80022bc:	f002 0203 	and.w	r2, r2, #3
 80022c0:	0092      	lsls	r2, r2, #2
 80022c2:	4093      	lsls	r3, r2
 80022c4:	693a      	ldr	r2, [r7, #16]
 80022c6:	4313      	orrs	r3, r2
 80022c8:	613b      	str	r3, [r7, #16]
 80022ca:	4937      	ldr	r1, [pc, #220]	; (80023a8 <HAL_GPIO_Init+0x2f4>)
 80022cc:	697b      	ldr	r3, [r7, #20]
 80022ce:	089b      	lsrs	r3, r3, #2
 80022d0:	3302      	adds	r3, #2
 80022d2:	693a      	ldr	r2, [r7, #16]
 80022d4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80022d8:	4b3a      	ldr	r3, [pc, #232]	; (80023c4 <HAL_GPIO_Init+0x310>)
 80022da:	681b      	ldr	r3, [r3, #0]
 80022dc:	613b      	str	r3, [r7, #16]
 80022de:	68fb      	ldr	r3, [r7, #12]
 80022e0:	43db      	mvns	r3, r3
 80022e2:	693a      	ldr	r2, [r7, #16]
 80022e4:	4013      	ands	r3, r2
 80022e6:	613b      	str	r3, [r7, #16]
 80022e8:	683b      	ldr	r3, [r7, #0]
 80022ea:	685b      	ldr	r3, [r3, #4]
 80022ec:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80022f0:	2b00      	cmp	r3, #0
 80022f2:	d003      	beq.n	80022fc <HAL_GPIO_Init+0x248>
 80022f4:	693a      	ldr	r2, [r7, #16]
 80022f6:	68fb      	ldr	r3, [r7, #12]
 80022f8:	4313      	orrs	r3, r2
 80022fa:	613b      	str	r3, [r7, #16]
 80022fc:	4a31      	ldr	r2, [pc, #196]	; (80023c4 <HAL_GPIO_Init+0x310>)
 80022fe:	693b      	ldr	r3, [r7, #16]
 8002300:	6013      	str	r3, [r2, #0]
 8002302:	4b30      	ldr	r3, [pc, #192]	; (80023c4 <HAL_GPIO_Init+0x310>)
 8002304:	685b      	ldr	r3, [r3, #4]
 8002306:	613b      	str	r3, [r7, #16]
 8002308:	68fb      	ldr	r3, [r7, #12]
 800230a:	43db      	mvns	r3, r3
 800230c:	693a      	ldr	r2, [r7, #16]
 800230e:	4013      	ands	r3, r2
 8002310:	613b      	str	r3, [r7, #16]
 8002312:	683b      	ldr	r3, [r7, #0]
 8002314:	685b      	ldr	r3, [r3, #4]
 8002316:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800231a:	2b00      	cmp	r3, #0
 800231c:	d003      	beq.n	8002326 <HAL_GPIO_Init+0x272>
 800231e:	693a      	ldr	r2, [r7, #16]
 8002320:	68fb      	ldr	r3, [r7, #12]
 8002322:	4313      	orrs	r3, r2
 8002324:	613b      	str	r3, [r7, #16]
 8002326:	4a27      	ldr	r2, [pc, #156]	; (80023c4 <HAL_GPIO_Init+0x310>)
 8002328:	693b      	ldr	r3, [r7, #16]
 800232a:	6053      	str	r3, [r2, #4]
 800232c:	4b25      	ldr	r3, [pc, #148]	; (80023c4 <HAL_GPIO_Init+0x310>)
 800232e:	689b      	ldr	r3, [r3, #8]
 8002330:	613b      	str	r3, [r7, #16]
 8002332:	68fb      	ldr	r3, [r7, #12]
 8002334:	43db      	mvns	r3, r3
 8002336:	693a      	ldr	r2, [r7, #16]
 8002338:	4013      	ands	r3, r2
 800233a:	613b      	str	r3, [r7, #16]
 800233c:	683b      	ldr	r3, [r7, #0]
 800233e:	685b      	ldr	r3, [r3, #4]
 8002340:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8002344:	2b00      	cmp	r3, #0
 8002346:	d003      	beq.n	8002350 <HAL_GPIO_Init+0x29c>
 8002348:	693a      	ldr	r2, [r7, #16]
 800234a:	68fb      	ldr	r3, [r7, #12]
 800234c:	4313      	orrs	r3, r2
 800234e:	613b      	str	r3, [r7, #16]
 8002350:	4a1c      	ldr	r2, [pc, #112]	; (80023c4 <HAL_GPIO_Init+0x310>)
 8002352:	693b      	ldr	r3, [r7, #16]
 8002354:	6093      	str	r3, [r2, #8]
 8002356:	4b1b      	ldr	r3, [pc, #108]	; (80023c4 <HAL_GPIO_Init+0x310>)
 8002358:	68db      	ldr	r3, [r3, #12]
 800235a:	613b      	str	r3, [r7, #16]
 800235c:	68fb      	ldr	r3, [r7, #12]
 800235e:	43db      	mvns	r3, r3
 8002360:	693a      	ldr	r2, [r7, #16]
 8002362:	4013      	ands	r3, r2
 8002364:	613b      	str	r3, [r7, #16]
 8002366:	683b      	ldr	r3, [r7, #0]
 8002368:	685b      	ldr	r3, [r3, #4]
 800236a:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800236e:	2b00      	cmp	r3, #0
 8002370:	d003      	beq.n	800237a <HAL_GPIO_Init+0x2c6>
 8002372:	693a      	ldr	r2, [r7, #16]
 8002374:	68fb      	ldr	r3, [r7, #12]
 8002376:	4313      	orrs	r3, r2
 8002378:	613b      	str	r3, [r7, #16]
 800237a:	4a12      	ldr	r2, [pc, #72]	; (80023c4 <HAL_GPIO_Init+0x310>)
 800237c:	693b      	ldr	r3, [r7, #16]
 800237e:	60d3      	str	r3, [r2, #12]
 8002380:	697b      	ldr	r3, [r7, #20]
 8002382:	3301      	adds	r3, #1
 8002384:	617b      	str	r3, [r7, #20]
 8002386:	683b      	ldr	r3, [r7, #0]
 8002388:	681a      	ldr	r2, [r3, #0]
 800238a:	697b      	ldr	r3, [r7, #20]
 800238c:	fa22 f303 	lsr.w	r3, r2, r3
 8002390:	2b00      	cmp	r3, #0
 8002392:	f47f ae97 	bne.w	80020c4 <HAL_GPIO_Init+0x10>
 8002396:	bf00      	nop
 8002398:	bf00      	nop
 800239a:	371c      	adds	r7, #28
 800239c:	46bd      	mov	sp, r7
 800239e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023a2:	4770      	bx	lr
 80023a4:	40021000 	.word	0x40021000
 80023a8:	40010000 	.word	0x40010000
 80023ac:	48000400 	.word	0x48000400
 80023b0:	48000800 	.word	0x48000800
 80023b4:	48000c00 	.word	0x48000c00
 80023b8:	48001000 	.word	0x48001000
 80023bc:	48001400 	.word	0x48001400
 80023c0:	48001800 	.word	0x48001800
 80023c4:	40010400 	.word	0x40010400

080023c8 <HAL_GPIO_WritePin>:
 80023c8:	b480      	push	{r7}
 80023ca:	b083      	sub	sp, #12
 80023cc:	af00      	add	r7, sp, #0
 80023ce:	6078      	str	r0, [r7, #4]
 80023d0:	460b      	mov	r3, r1
 80023d2:	807b      	strh	r3, [r7, #2]
 80023d4:	4613      	mov	r3, r2
 80023d6:	707b      	strb	r3, [r7, #1]
 80023d8:	787b      	ldrb	r3, [r7, #1]
 80023da:	2b00      	cmp	r3, #0
 80023dc:	d003      	beq.n	80023e6 <HAL_GPIO_WritePin+0x1e>
 80023de:	887a      	ldrh	r2, [r7, #2]
 80023e0:	687b      	ldr	r3, [r7, #4]
 80023e2:	619a      	str	r2, [r3, #24]
 80023e4:	e002      	b.n	80023ec <HAL_GPIO_WritePin+0x24>
 80023e6:	887a      	ldrh	r2, [r7, #2]
 80023e8:	687b      	ldr	r3, [r7, #4]
 80023ea:	629a      	str	r2, [r3, #40]	; 0x28
 80023ec:	bf00      	nop
 80023ee:	370c      	adds	r7, #12
 80023f0:	46bd      	mov	sp, r7
 80023f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023f6:	4770      	bx	lr

080023f8 <HAL_GPIO_EXTI_IRQHandler>:
 80023f8:	b580      	push	{r7, lr}
 80023fa:	b082      	sub	sp, #8
 80023fc:	af00      	add	r7, sp, #0
 80023fe:	4603      	mov	r3, r0
 8002400:	80fb      	strh	r3, [r7, #6]
 8002402:	4b08      	ldr	r3, [pc, #32]	; (8002424 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8002404:	695a      	ldr	r2, [r3, #20]
 8002406:	88fb      	ldrh	r3, [r7, #6]
 8002408:	4013      	ands	r3, r2
 800240a:	2b00      	cmp	r3, #0
 800240c:	d006      	beq.n	800241c <HAL_GPIO_EXTI_IRQHandler+0x24>
 800240e:	4a05      	ldr	r2, [pc, #20]	; (8002424 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8002410:	88fb      	ldrh	r3, [r7, #6]
 8002412:	6153      	str	r3, [r2, #20]
 8002414:	88fb      	ldrh	r3, [r7, #6]
 8002416:	4618      	mov	r0, r3
 8002418:	f000 f806 	bl	8002428 <HAL_GPIO_EXTI_Callback>
 800241c:	bf00      	nop
 800241e:	3708      	adds	r7, #8
 8002420:	46bd      	mov	sp, r7
 8002422:	bd80      	pop	{r7, pc}
 8002424:	40010400 	.word	0x40010400

08002428 <HAL_GPIO_EXTI_Callback>:
 8002428:	b480      	push	{r7}
 800242a:	b083      	sub	sp, #12
 800242c:	af00      	add	r7, sp, #0
 800242e:	4603      	mov	r3, r0
 8002430:	80fb      	strh	r3, [r7, #6]
 8002432:	bf00      	nop
 8002434:	370c      	adds	r7, #12
 8002436:	46bd      	mov	sp, r7
 8002438:	f85d 7b04 	ldr.w	r7, [sp], #4
 800243c:	4770      	bx	lr
	...

08002440 <HAL_PWR_EnableBkUpAccess>:
 8002440:	b480      	push	{r7}
 8002442:	af00      	add	r7, sp, #0
 8002444:	4b05      	ldr	r3, [pc, #20]	; (800245c <HAL_PWR_EnableBkUpAccess+0x1c>)
 8002446:	681b      	ldr	r3, [r3, #0]
 8002448:	4a04      	ldr	r2, [pc, #16]	; (800245c <HAL_PWR_EnableBkUpAccess+0x1c>)
 800244a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800244e:	6013      	str	r3, [r2, #0]
 8002450:	bf00      	nop
 8002452:	46bd      	mov	sp, r7
 8002454:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002458:	4770      	bx	lr
 800245a:	bf00      	nop
 800245c:	40007000 	.word	0x40007000

08002460 <HAL_PWR_DisableBkUpAccess>:
 8002460:	b480      	push	{r7}
 8002462:	af00      	add	r7, sp, #0
 8002464:	4b05      	ldr	r3, [pc, #20]	; (800247c <HAL_PWR_DisableBkUpAccess+0x1c>)
 8002466:	681b      	ldr	r3, [r3, #0]
 8002468:	4a04      	ldr	r2, [pc, #16]	; (800247c <HAL_PWR_DisableBkUpAccess+0x1c>)
 800246a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800246e:	6013      	str	r3, [r2, #0]
 8002470:	bf00      	nop
 8002472:	46bd      	mov	sp, r7
 8002474:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002478:	4770      	bx	lr
 800247a:	bf00      	nop
 800247c:	40007000 	.word	0x40007000

08002480 <HAL_PWR_EnterSLEEPMode>:
 8002480:	b480      	push	{r7}
 8002482:	b083      	sub	sp, #12
 8002484:	af00      	add	r7, sp, #0
 8002486:	6078      	str	r0, [r7, #4]
 8002488:	460b      	mov	r3, r1
 800248a:	70fb      	strb	r3, [r7, #3]
 800248c:	4b09      	ldr	r3, [pc, #36]	; (80024b4 <HAL_PWR_EnterSLEEPMode+0x34>)
 800248e:	691b      	ldr	r3, [r3, #16]
 8002490:	4a08      	ldr	r2, [pc, #32]	; (80024b4 <HAL_PWR_EnterSLEEPMode+0x34>)
 8002492:	f023 0304 	bic.w	r3, r3, #4
 8002496:	6113      	str	r3, [r2, #16]
 8002498:	78fb      	ldrb	r3, [r7, #3]
 800249a:	2b01      	cmp	r3, #1
 800249c:	d101      	bne.n	80024a2 <HAL_PWR_EnterSLEEPMode+0x22>
 800249e:	bf30      	wfi
 80024a0:	e002      	b.n	80024a8 <HAL_PWR_EnterSLEEPMode+0x28>
 80024a2:	bf40      	sev
 80024a4:	bf20      	wfe
 80024a6:	bf20      	wfe
 80024a8:	bf00      	nop
 80024aa:	370c      	adds	r7, #12
 80024ac:	46bd      	mov	sp, r7
 80024ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024b2:	4770      	bx	lr
 80024b4:	e000ed00 	.word	0xe000ed00

080024b8 <HAL_PWR_EnterSTOPMode>:
 80024b8:	b480      	push	{r7}
 80024ba:	b085      	sub	sp, #20
 80024bc:	af00      	add	r7, sp, #0
 80024be:	6078      	str	r0, [r7, #4]
 80024c0:	460b      	mov	r3, r1
 80024c2:	70fb      	strb	r3, [r7, #3]
 80024c4:	2300      	movs	r3, #0
 80024c6:	60fb      	str	r3, [r7, #12]
 80024c8:	4b13      	ldr	r3, [pc, #76]	; (8002518 <HAL_PWR_EnterSTOPMode+0x60>)
 80024ca:	681b      	ldr	r3, [r3, #0]
 80024cc:	60fb      	str	r3, [r7, #12]
 80024ce:	68fb      	ldr	r3, [r7, #12]
 80024d0:	f023 0303 	bic.w	r3, r3, #3
 80024d4:	60fb      	str	r3, [r7, #12]
 80024d6:	68fa      	ldr	r2, [r7, #12]
 80024d8:	687b      	ldr	r3, [r7, #4]
 80024da:	4313      	orrs	r3, r2
 80024dc:	60fb      	str	r3, [r7, #12]
 80024de:	4a0e      	ldr	r2, [pc, #56]	; (8002518 <HAL_PWR_EnterSTOPMode+0x60>)
 80024e0:	68fb      	ldr	r3, [r7, #12]
 80024e2:	6013      	str	r3, [r2, #0]
 80024e4:	4b0d      	ldr	r3, [pc, #52]	; (800251c <HAL_PWR_EnterSTOPMode+0x64>)
 80024e6:	691b      	ldr	r3, [r3, #16]
 80024e8:	4a0c      	ldr	r2, [pc, #48]	; (800251c <HAL_PWR_EnterSTOPMode+0x64>)
 80024ea:	f043 0304 	orr.w	r3, r3, #4
 80024ee:	6113      	str	r3, [r2, #16]
 80024f0:	78fb      	ldrb	r3, [r7, #3]
 80024f2:	2b01      	cmp	r3, #1
 80024f4:	d101      	bne.n	80024fa <HAL_PWR_EnterSTOPMode+0x42>
 80024f6:	bf30      	wfi
 80024f8:	e002      	b.n	8002500 <HAL_PWR_EnterSTOPMode+0x48>
 80024fa:	bf40      	sev
 80024fc:	bf20      	wfe
 80024fe:	bf20      	wfe
 8002500:	4b06      	ldr	r3, [pc, #24]	; (800251c <HAL_PWR_EnterSTOPMode+0x64>)
 8002502:	691b      	ldr	r3, [r3, #16]
 8002504:	4a05      	ldr	r2, [pc, #20]	; (800251c <HAL_PWR_EnterSTOPMode+0x64>)
 8002506:	f023 0304 	bic.w	r3, r3, #4
 800250a:	6113      	str	r3, [r2, #16]
 800250c:	bf00      	nop
 800250e:	3714      	adds	r7, #20
 8002510:	46bd      	mov	sp, r7
 8002512:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002516:	4770      	bx	lr
 8002518:	40007000 	.word	0x40007000
 800251c:	e000ed00 	.word	0xe000ed00

08002520 <HAL_PWR_EnterSTANDBYMode>:
 8002520:	b480      	push	{r7}
 8002522:	af00      	add	r7, sp, #0
 8002524:	4b08      	ldr	r3, [pc, #32]	; (8002548 <HAL_PWR_EnterSTANDBYMode+0x28>)
 8002526:	681b      	ldr	r3, [r3, #0]
 8002528:	4a07      	ldr	r2, [pc, #28]	; (8002548 <HAL_PWR_EnterSTANDBYMode+0x28>)
 800252a:	f043 0302 	orr.w	r3, r3, #2
 800252e:	6013      	str	r3, [r2, #0]
 8002530:	4b06      	ldr	r3, [pc, #24]	; (800254c <HAL_PWR_EnterSTANDBYMode+0x2c>)
 8002532:	691b      	ldr	r3, [r3, #16]
 8002534:	4a05      	ldr	r2, [pc, #20]	; (800254c <HAL_PWR_EnterSTANDBYMode+0x2c>)
 8002536:	f043 0304 	orr.w	r3, r3, #4
 800253a:	6113      	str	r3, [r2, #16]
 800253c:	bf30      	wfi
 800253e:	bf00      	nop
 8002540:	46bd      	mov	sp, r7
 8002542:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002546:	4770      	bx	lr
 8002548:	40007000 	.word	0x40007000
 800254c:	e000ed00 	.word	0xe000ed00

08002550 <HAL_RCC_OscConfig>:
 8002550:	b580      	push	{r7, lr}
 8002552:	f5ad 7d02 	sub.w	sp, sp, #520	; 0x208
 8002556:	af00      	add	r7, sp, #0
 8002558:	1d3b      	adds	r3, r7, #4
 800255a:	6018      	str	r0, [r3, #0]
 800255c:	1d3b      	adds	r3, r7, #4
 800255e:	681b      	ldr	r3, [r3, #0]
 8002560:	2b00      	cmp	r3, #0
 8002562:	d102      	bne.n	800256a <HAL_RCC_OscConfig+0x1a>
 8002564:	2301      	movs	r3, #1
 8002566:	f000 bf01 	b.w	800336c <HAL_RCC_OscConfig+0xe1c>
 800256a:	1d3b      	adds	r3, r7, #4
 800256c:	681b      	ldr	r3, [r3, #0]
 800256e:	681b      	ldr	r3, [r3, #0]
 8002570:	f003 0301 	and.w	r3, r3, #1
 8002574:	2b00      	cmp	r3, #0
 8002576:	f000 8160 	beq.w	800283a <HAL_RCC_OscConfig+0x2ea>
 800257a:	4bae      	ldr	r3, [pc, #696]	; (8002834 <HAL_RCC_OscConfig+0x2e4>)
 800257c:	685b      	ldr	r3, [r3, #4]
 800257e:	f003 030c 	and.w	r3, r3, #12
 8002582:	2b04      	cmp	r3, #4
 8002584:	d00c      	beq.n	80025a0 <HAL_RCC_OscConfig+0x50>
 8002586:	4bab      	ldr	r3, [pc, #684]	; (8002834 <HAL_RCC_OscConfig+0x2e4>)
 8002588:	685b      	ldr	r3, [r3, #4]
 800258a:	f003 030c 	and.w	r3, r3, #12
 800258e:	2b08      	cmp	r3, #8
 8002590:	d159      	bne.n	8002646 <HAL_RCC_OscConfig+0xf6>
 8002592:	4ba8      	ldr	r3, [pc, #672]	; (8002834 <HAL_RCC_OscConfig+0x2e4>)
 8002594:	685b      	ldr	r3, [r3, #4]
 8002596:	f403 33c0 	and.w	r3, r3, #98304	; 0x18000
 800259a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800259e:	d152      	bne.n	8002646 <HAL_RCC_OscConfig+0xf6>
 80025a0:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80025a4:	f8c7 31f4 	str.w	r3, [r7, #500]	; 0x1f4
 80025a8:	f8d7 31f4 	ldr.w	r3, [r7, #500]	; 0x1f4
 80025ac:	fa93 f3a3 	rbit	r3, r3
 80025b0:	f8c7 31f0 	str.w	r3, [r7, #496]	; 0x1f0
 80025b4:	f8d7 31f0 	ldr.w	r3, [r7, #496]	; 0x1f0
 80025b8:	fab3 f383 	clz	r3, r3
 80025bc:	b2db      	uxtb	r3, r3
 80025be:	095b      	lsrs	r3, r3, #5
 80025c0:	b2db      	uxtb	r3, r3
 80025c2:	f043 0301 	orr.w	r3, r3, #1
 80025c6:	b2db      	uxtb	r3, r3
 80025c8:	2b01      	cmp	r3, #1
 80025ca:	d102      	bne.n	80025d2 <HAL_RCC_OscConfig+0x82>
 80025cc:	4b99      	ldr	r3, [pc, #612]	; (8002834 <HAL_RCC_OscConfig+0x2e4>)
 80025ce:	681b      	ldr	r3, [r3, #0]
 80025d0:	e015      	b.n	80025fe <HAL_RCC_OscConfig+0xae>
 80025d2:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80025d6:	f8c7 31ec 	str.w	r3, [r7, #492]	; 0x1ec
 80025da:	f8d7 31ec 	ldr.w	r3, [r7, #492]	; 0x1ec
 80025de:	fa93 f3a3 	rbit	r3, r3
 80025e2:	f8c7 31e8 	str.w	r3, [r7, #488]	; 0x1e8
 80025e6:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80025ea:	f8c7 31e4 	str.w	r3, [r7, #484]	; 0x1e4
 80025ee:	f8d7 31e4 	ldr.w	r3, [r7, #484]	; 0x1e4
 80025f2:	fa93 f3a3 	rbit	r3, r3
 80025f6:	f8c7 31e0 	str.w	r3, [r7, #480]	; 0x1e0
 80025fa:	4b8e      	ldr	r3, [pc, #568]	; (8002834 <HAL_RCC_OscConfig+0x2e4>)
 80025fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80025fe:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8002602:	f8c7 21dc 	str.w	r2, [r7, #476]	; 0x1dc
 8002606:	f8d7 21dc 	ldr.w	r2, [r7, #476]	; 0x1dc
 800260a:	fa92 f2a2 	rbit	r2, r2
 800260e:	f8c7 21d8 	str.w	r2, [r7, #472]	; 0x1d8
 8002612:	f8d7 21d8 	ldr.w	r2, [r7, #472]	; 0x1d8
 8002616:	fab2 f282 	clz	r2, r2
 800261a:	b2d2      	uxtb	r2, r2
 800261c:	f042 0220 	orr.w	r2, r2, #32
 8002620:	b2d2      	uxtb	r2, r2
 8002622:	f002 021f 	and.w	r2, r2, #31
 8002626:	2101      	movs	r1, #1
 8002628:	fa01 f202 	lsl.w	r2, r1, r2
 800262c:	4013      	ands	r3, r2
 800262e:	2b00      	cmp	r3, #0
 8002630:	f000 8102 	beq.w	8002838 <HAL_RCC_OscConfig+0x2e8>
 8002634:	1d3b      	adds	r3, r7, #4
 8002636:	681b      	ldr	r3, [r3, #0]
 8002638:	685b      	ldr	r3, [r3, #4]
 800263a:	2b00      	cmp	r3, #0
 800263c:	f040 80fc 	bne.w	8002838 <HAL_RCC_OscConfig+0x2e8>
 8002640:	2301      	movs	r3, #1
 8002642:	f000 be93 	b.w	800336c <HAL_RCC_OscConfig+0xe1c>
 8002646:	1d3b      	adds	r3, r7, #4
 8002648:	681b      	ldr	r3, [r3, #0]
 800264a:	685b      	ldr	r3, [r3, #4]
 800264c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002650:	d106      	bne.n	8002660 <HAL_RCC_OscConfig+0x110>
 8002652:	4b78      	ldr	r3, [pc, #480]	; (8002834 <HAL_RCC_OscConfig+0x2e4>)
 8002654:	681b      	ldr	r3, [r3, #0]
 8002656:	4a77      	ldr	r2, [pc, #476]	; (8002834 <HAL_RCC_OscConfig+0x2e4>)
 8002658:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800265c:	6013      	str	r3, [r2, #0]
 800265e:	e030      	b.n	80026c2 <HAL_RCC_OscConfig+0x172>
 8002660:	1d3b      	adds	r3, r7, #4
 8002662:	681b      	ldr	r3, [r3, #0]
 8002664:	685b      	ldr	r3, [r3, #4]
 8002666:	2b00      	cmp	r3, #0
 8002668:	d10c      	bne.n	8002684 <HAL_RCC_OscConfig+0x134>
 800266a:	4b72      	ldr	r3, [pc, #456]	; (8002834 <HAL_RCC_OscConfig+0x2e4>)
 800266c:	681b      	ldr	r3, [r3, #0]
 800266e:	4a71      	ldr	r2, [pc, #452]	; (8002834 <HAL_RCC_OscConfig+0x2e4>)
 8002670:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002674:	6013      	str	r3, [r2, #0]
 8002676:	4b6f      	ldr	r3, [pc, #444]	; (8002834 <HAL_RCC_OscConfig+0x2e4>)
 8002678:	681b      	ldr	r3, [r3, #0]
 800267a:	4a6e      	ldr	r2, [pc, #440]	; (8002834 <HAL_RCC_OscConfig+0x2e4>)
 800267c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002680:	6013      	str	r3, [r2, #0]
 8002682:	e01e      	b.n	80026c2 <HAL_RCC_OscConfig+0x172>
 8002684:	1d3b      	adds	r3, r7, #4
 8002686:	681b      	ldr	r3, [r3, #0]
 8002688:	685b      	ldr	r3, [r3, #4]
 800268a:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800268e:	d10c      	bne.n	80026aa <HAL_RCC_OscConfig+0x15a>
 8002690:	4b68      	ldr	r3, [pc, #416]	; (8002834 <HAL_RCC_OscConfig+0x2e4>)
 8002692:	681b      	ldr	r3, [r3, #0]
 8002694:	4a67      	ldr	r2, [pc, #412]	; (8002834 <HAL_RCC_OscConfig+0x2e4>)
 8002696:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800269a:	6013      	str	r3, [r2, #0]
 800269c:	4b65      	ldr	r3, [pc, #404]	; (8002834 <HAL_RCC_OscConfig+0x2e4>)
 800269e:	681b      	ldr	r3, [r3, #0]
 80026a0:	4a64      	ldr	r2, [pc, #400]	; (8002834 <HAL_RCC_OscConfig+0x2e4>)
 80026a2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80026a6:	6013      	str	r3, [r2, #0]
 80026a8:	e00b      	b.n	80026c2 <HAL_RCC_OscConfig+0x172>
 80026aa:	4b62      	ldr	r3, [pc, #392]	; (8002834 <HAL_RCC_OscConfig+0x2e4>)
 80026ac:	681b      	ldr	r3, [r3, #0]
 80026ae:	4a61      	ldr	r2, [pc, #388]	; (8002834 <HAL_RCC_OscConfig+0x2e4>)
 80026b0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80026b4:	6013      	str	r3, [r2, #0]
 80026b6:	4b5f      	ldr	r3, [pc, #380]	; (8002834 <HAL_RCC_OscConfig+0x2e4>)
 80026b8:	681b      	ldr	r3, [r3, #0]
 80026ba:	4a5e      	ldr	r2, [pc, #376]	; (8002834 <HAL_RCC_OscConfig+0x2e4>)
 80026bc:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80026c0:	6013      	str	r3, [r2, #0]
 80026c2:	1d3b      	adds	r3, r7, #4
 80026c4:	681b      	ldr	r3, [r3, #0]
 80026c6:	685b      	ldr	r3, [r3, #4]
 80026c8:	2b00      	cmp	r3, #0
 80026ca:	d059      	beq.n	8002780 <HAL_RCC_OscConfig+0x230>
 80026cc:	f7ff fae8 	bl	8001ca0 <HAL_GetTick>
 80026d0:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
 80026d4:	e00a      	b.n	80026ec <HAL_RCC_OscConfig+0x19c>
 80026d6:	f7ff fae3 	bl	8001ca0 <HAL_GetTick>
 80026da:	4602      	mov	r2, r0
 80026dc:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 80026e0:	1ad3      	subs	r3, r2, r3
 80026e2:	2b64      	cmp	r3, #100	; 0x64
 80026e4:	d902      	bls.n	80026ec <HAL_RCC_OscConfig+0x19c>
 80026e6:	2303      	movs	r3, #3
 80026e8:	f000 be40 	b.w	800336c <HAL_RCC_OscConfig+0xe1c>
 80026ec:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80026f0:	f8c7 31d4 	str.w	r3, [r7, #468]	; 0x1d4
 80026f4:	f8d7 31d4 	ldr.w	r3, [r7, #468]	; 0x1d4
 80026f8:	fa93 f3a3 	rbit	r3, r3
 80026fc:	f8c7 31d0 	str.w	r3, [r7, #464]	; 0x1d0
 8002700:	f8d7 31d0 	ldr.w	r3, [r7, #464]	; 0x1d0
 8002704:	fab3 f383 	clz	r3, r3
 8002708:	b2db      	uxtb	r3, r3
 800270a:	095b      	lsrs	r3, r3, #5
 800270c:	b2db      	uxtb	r3, r3
 800270e:	f043 0301 	orr.w	r3, r3, #1
 8002712:	b2db      	uxtb	r3, r3
 8002714:	2b01      	cmp	r3, #1
 8002716:	d102      	bne.n	800271e <HAL_RCC_OscConfig+0x1ce>
 8002718:	4b46      	ldr	r3, [pc, #280]	; (8002834 <HAL_RCC_OscConfig+0x2e4>)
 800271a:	681b      	ldr	r3, [r3, #0]
 800271c:	e015      	b.n	800274a <HAL_RCC_OscConfig+0x1fa>
 800271e:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8002722:	f8c7 31cc 	str.w	r3, [r7, #460]	; 0x1cc
 8002726:	f8d7 31cc 	ldr.w	r3, [r7, #460]	; 0x1cc
 800272a:	fa93 f3a3 	rbit	r3, r3
 800272e:	f8c7 31c8 	str.w	r3, [r7, #456]	; 0x1c8
 8002732:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8002736:	f8c7 31c4 	str.w	r3, [r7, #452]	; 0x1c4
 800273a:	f8d7 31c4 	ldr.w	r3, [r7, #452]	; 0x1c4
 800273e:	fa93 f3a3 	rbit	r3, r3
 8002742:	f8c7 31c0 	str.w	r3, [r7, #448]	; 0x1c0
 8002746:	4b3b      	ldr	r3, [pc, #236]	; (8002834 <HAL_RCC_OscConfig+0x2e4>)
 8002748:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800274a:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 800274e:	f8c7 21bc 	str.w	r2, [r7, #444]	; 0x1bc
 8002752:	f8d7 21bc 	ldr.w	r2, [r7, #444]	; 0x1bc
 8002756:	fa92 f2a2 	rbit	r2, r2
 800275a:	f8c7 21b8 	str.w	r2, [r7, #440]	; 0x1b8
 800275e:	f8d7 21b8 	ldr.w	r2, [r7, #440]	; 0x1b8
 8002762:	fab2 f282 	clz	r2, r2
 8002766:	b2d2      	uxtb	r2, r2
 8002768:	f042 0220 	orr.w	r2, r2, #32
 800276c:	b2d2      	uxtb	r2, r2
 800276e:	f002 021f 	and.w	r2, r2, #31
 8002772:	2101      	movs	r1, #1
 8002774:	fa01 f202 	lsl.w	r2, r1, r2
 8002778:	4013      	ands	r3, r2
 800277a:	2b00      	cmp	r3, #0
 800277c:	d0ab      	beq.n	80026d6 <HAL_RCC_OscConfig+0x186>
 800277e:	e05c      	b.n	800283a <HAL_RCC_OscConfig+0x2ea>
 8002780:	f7ff fa8e 	bl	8001ca0 <HAL_GetTick>
 8002784:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
 8002788:	e00a      	b.n	80027a0 <HAL_RCC_OscConfig+0x250>
 800278a:	f7ff fa89 	bl	8001ca0 <HAL_GetTick>
 800278e:	4602      	mov	r2, r0
 8002790:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8002794:	1ad3      	subs	r3, r2, r3
 8002796:	2b64      	cmp	r3, #100	; 0x64
 8002798:	d902      	bls.n	80027a0 <HAL_RCC_OscConfig+0x250>
 800279a:	2303      	movs	r3, #3
 800279c:	f000 bde6 	b.w	800336c <HAL_RCC_OscConfig+0xe1c>
 80027a0:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80027a4:	f8c7 31b4 	str.w	r3, [r7, #436]	; 0x1b4
 80027a8:	f8d7 31b4 	ldr.w	r3, [r7, #436]	; 0x1b4
 80027ac:	fa93 f3a3 	rbit	r3, r3
 80027b0:	f8c7 31b0 	str.w	r3, [r7, #432]	; 0x1b0
 80027b4:	f8d7 31b0 	ldr.w	r3, [r7, #432]	; 0x1b0
 80027b8:	fab3 f383 	clz	r3, r3
 80027bc:	b2db      	uxtb	r3, r3
 80027be:	095b      	lsrs	r3, r3, #5
 80027c0:	b2db      	uxtb	r3, r3
 80027c2:	f043 0301 	orr.w	r3, r3, #1
 80027c6:	b2db      	uxtb	r3, r3
 80027c8:	2b01      	cmp	r3, #1
 80027ca:	d102      	bne.n	80027d2 <HAL_RCC_OscConfig+0x282>
 80027cc:	4b19      	ldr	r3, [pc, #100]	; (8002834 <HAL_RCC_OscConfig+0x2e4>)
 80027ce:	681b      	ldr	r3, [r3, #0]
 80027d0:	e015      	b.n	80027fe <HAL_RCC_OscConfig+0x2ae>
 80027d2:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80027d6:	f8c7 31ac 	str.w	r3, [r7, #428]	; 0x1ac
 80027da:	f8d7 31ac 	ldr.w	r3, [r7, #428]	; 0x1ac
 80027de:	fa93 f3a3 	rbit	r3, r3
 80027e2:	f8c7 31a8 	str.w	r3, [r7, #424]	; 0x1a8
 80027e6:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80027ea:	f8c7 31a4 	str.w	r3, [r7, #420]	; 0x1a4
 80027ee:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 80027f2:	fa93 f3a3 	rbit	r3, r3
 80027f6:	f8c7 31a0 	str.w	r3, [r7, #416]	; 0x1a0
 80027fa:	4b0e      	ldr	r3, [pc, #56]	; (8002834 <HAL_RCC_OscConfig+0x2e4>)
 80027fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027fe:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8002802:	f8c7 219c 	str.w	r2, [r7, #412]	; 0x19c
 8002806:	f8d7 219c 	ldr.w	r2, [r7, #412]	; 0x19c
 800280a:	fa92 f2a2 	rbit	r2, r2
 800280e:	f8c7 2198 	str.w	r2, [r7, #408]	; 0x198
 8002812:	f8d7 2198 	ldr.w	r2, [r7, #408]	; 0x198
 8002816:	fab2 f282 	clz	r2, r2
 800281a:	b2d2      	uxtb	r2, r2
 800281c:	f042 0220 	orr.w	r2, r2, #32
 8002820:	b2d2      	uxtb	r2, r2
 8002822:	f002 021f 	and.w	r2, r2, #31
 8002826:	2101      	movs	r1, #1
 8002828:	fa01 f202 	lsl.w	r2, r1, r2
 800282c:	4013      	ands	r3, r2
 800282e:	2b00      	cmp	r3, #0
 8002830:	d1ab      	bne.n	800278a <HAL_RCC_OscConfig+0x23a>
 8002832:	e002      	b.n	800283a <HAL_RCC_OscConfig+0x2ea>
 8002834:	40021000 	.word	0x40021000
 8002838:	bf00      	nop
 800283a:	1d3b      	adds	r3, r7, #4
 800283c:	681b      	ldr	r3, [r3, #0]
 800283e:	681b      	ldr	r3, [r3, #0]
 8002840:	f003 0302 	and.w	r3, r3, #2
 8002844:	2b00      	cmp	r3, #0
 8002846:	f000 8170 	beq.w	8002b2a <HAL_RCC_OscConfig+0x5da>
 800284a:	4bd0      	ldr	r3, [pc, #832]	; (8002b8c <HAL_RCC_OscConfig+0x63c>)
 800284c:	685b      	ldr	r3, [r3, #4]
 800284e:	f003 030c 	and.w	r3, r3, #12
 8002852:	2b00      	cmp	r3, #0
 8002854:	d00c      	beq.n	8002870 <HAL_RCC_OscConfig+0x320>
 8002856:	4bcd      	ldr	r3, [pc, #820]	; (8002b8c <HAL_RCC_OscConfig+0x63c>)
 8002858:	685b      	ldr	r3, [r3, #4]
 800285a:	f003 030c 	and.w	r3, r3, #12
 800285e:	2b08      	cmp	r3, #8
 8002860:	d16d      	bne.n	800293e <HAL_RCC_OscConfig+0x3ee>
 8002862:	4bca      	ldr	r3, [pc, #808]	; (8002b8c <HAL_RCC_OscConfig+0x63c>)
 8002864:	685b      	ldr	r3, [r3, #4]
 8002866:	f403 33c0 	and.w	r3, r3, #98304	; 0x18000
 800286a:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800286e:	d166      	bne.n	800293e <HAL_RCC_OscConfig+0x3ee>
 8002870:	2302      	movs	r3, #2
 8002872:	f8c7 3194 	str.w	r3, [r7, #404]	; 0x194
 8002876:	f8d7 3194 	ldr.w	r3, [r7, #404]	; 0x194
 800287a:	fa93 f3a3 	rbit	r3, r3
 800287e:	f8c7 3190 	str.w	r3, [r7, #400]	; 0x190
 8002882:	f8d7 3190 	ldr.w	r3, [r7, #400]	; 0x190
 8002886:	fab3 f383 	clz	r3, r3
 800288a:	b2db      	uxtb	r3, r3
 800288c:	095b      	lsrs	r3, r3, #5
 800288e:	b2db      	uxtb	r3, r3
 8002890:	f043 0301 	orr.w	r3, r3, #1
 8002894:	b2db      	uxtb	r3, r3
 8002896:	2b01      	cmp	r3, #1
 8002898:	d102      	bne.n	80028a0 <HAL_RCC_OscConfig+0x350>
 800289a:	4bbc      	ldr	r3, [pc, #752]	; (8002b8c <HAL_RCC_OscConfig+0x63c>)
 800289c:	681b      	ldr	r3, [r3, #0]
 800289e:	e013      	b.n	80028c8 <HAL_RCC_OscConfig+0x378>
 80028a0:	2302      	movs	r3, #2
 80028a2:	f8c7 318c 	str.w	r3, [r7, #396]	; 0x18c
 80028a6:	f8d7 318c 	ldr.w	r3, [r7, #396]	; 0x18c
 80028aa:	fa93 f3a3 	rbit	r3, r3
 80028ae:	f8c7 3188 	str.w	r3, [r7, #392]	; 0x188
 80028b2:	2302      	movs	r3, #2
 80028b4:	f8c7 3184 	str.w	r3, [r7, #388]	; 0x184
 80028b8:	f8d7 3184 	ldr.w	r3, [r7, #388]	; 0x184
 80028bc:	fa93 f3a3 	rbit	r3, r3
 80028c0:	f8c7 3180 	str.w	r3, [r7, #384]	; 0x180
 80028c4:	4bb1      	ldr	r3, [pc, #708]	; (8002b8c <HAL_RCC_OscConfig+0x63c>)
 80028c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80028c8:	2202      	movs	r2, #2
 80028ca:	f8c7 217c 	str.w	r2, [r7, #380]	; 0x17c
 80028ce:	f8d7 217c 	ldr.w	r2, [r7, #380]	; 0x17c
 80028d2:	fa92 f2a2 	rbit	r2, r2
 80028d6:	f8c7 2178 	str.w	r2, [r7, #376]	; 0x178
 80028da:	f8d7 2178 	ldr.w	r2, [r7, #376]	; 0x178
 80028de:	fab2 f282 	clz	r2, r2
 80028e2:	b2d2      	uxtb	r2, r2
 80028e4:	f042 0220 	orr.w	r2, r2, #32
 80028e8:	b2d2      	uxtb	r2, r2
 80028ea:	f002 021f 	and.w	r2, r2, #31
 80028ee:	2101      	movs	r1, #1
 80028f0:	fa01 f202 	lsl.w	r2, r1, r2
 80028f4:	4013      	ands	r3, r2
 80028f6:	2b00      	cmp	r3, #0
 80028f8:	d007      	beq.n	800290a <HAL_RCC_OscConfig+0x3ba>
 80028fa:	1d3b      	adds	r3, r7, #4
 80028fc:	681b      	ldr	r3, [r3, #0]
 80028fe:	68db      	ldr	r3, [r3, #12]
 8002900:	2b01      	cmp	r3, #1
 8002902:	d002      	beq.n	800290a <HAL_RCC_OscConfig+0x3ba>
 8002904:	2301      	movs	r3, #1
 8002906:	f000 bd31 	b.w	800336c <HAL_RCC_OscConfig+0xe1c>
 800290a:	4ba0      	ldr	r3, [pc, #640]	; (8002b8c <HAL_RCC_OscConfig+0x63c>)
 800290c:	681b      	ldr	r3, [r3, #0]
 800290e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002912:	1d3b      	adds	r3, r7, #4
 8002914:	681b      	ldr	r3, [r3, #0]
 8002916:	691b      	ldr	r3, [r3, #16]
 8002918:	21f8      	movs	r1, #248	; 0xf8
 800291a:	f8c7 1174 	str.w	r1, [r7, #372]	; 0x174
 800291e:	f8d7 1174 	ldr.w	r1, [r7, #372]	; 0x174
 8002922:	fa91 f1a1 	rbit	r1, r1
 8002926:	f8c7 1170 	str.w	r1, [r7, #368]	; 0x170
 800292a:	f8d7 1170 	ldr.w	r1, [r7, #368]	; 0x170
 800292e:	fab1 f181 	clz	r1, r1
 8002932:	b2c9      	uxtb	r1, r1
 8002934:	408b      	lsls	r3, r1
 8002936:	4995      	ldr	r1, [pc, #596]	; (8002b8c <HAL_RCC_OscConfig+0x63c>)
 8002938:	4313      	orrs	r3, r2
 800293a:	600b      	str	r3, [r1, #0]
 800293c:	e0f5      	b.n	8002b2a <HAL_RCC_OscConfig+0x5da>
 800293e:	1d3b      	adds	r3, r7, #4
 8002940:	681b      	ldr	r3, [r3, #0]
 8002942:	68db      	ldr	r3, [r3, #12]
 8002944:	2b00      	cmp	r3, #0
 8002946:	f000 8085 	beq.w	8002a54 <HAL_RCC_OscConfig+0x504>
 800294a:	2301      	movs	r3, #1
 800294c:	f8c7 316c 	str.w	r3, [r7, #364]	; 0x16c
 8002950:	f8d7 316c 	ldr.w	r3, [r7, #364]	; 0x16c
 8002954:	fa93 f3a3 	rbit	r3, r3
 8002958:	f8c7 3168 	str.w	r3, [r7, #360]	; 0x168
 800295c:	f8d7 3168 	ldr.w	r3, [r7, #360]	; 0x168
 8002960:	fab3 f383 	clz	r3, r3
 8002964:	b2db      	uxtb	r3, r3
 8002966:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 800296a:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 800296e:	009b      	lsls	r3, r3, #2
 8002970:	461a      	mov	r2, r3
 8002972:	2301      	movs	r3, #1
 8002974:	6013      	str	r3, [r2, #0]
 8002976:	f7ff f993 	bl	8001ca0 <HAL_GetTick>
 800297a:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
 800297e:	e00a      	b.n	8002996 <HAL_RCC_OscConfig+0x446>
 8002980:	f7ff f98e 	bl	8001ca0 <HAL_GetTick>
 8002984:	4602      	mov	r2, r0
 8002986:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 800298a:	1ad3      	subs	r3, r2, r3
 800298c:	2b02      	cmp	r3, #2
 800298e:	d902      	bls.n	8002996 <HAL_RCC_OscConfig+0x446>
 8002990:	2303      	movs	r3, #3
 8002992:	f000 bceb 	b.w	800336c <HAL_RCC_OscConfig+0xe1c>
 8002996:	2302      	movs	r3, #2
 8002998:	f8c7 3164 	str.w	r3, [r7, #356]	; 0x164
 800299c:	f8d7 3164 	ldr.w	r3, [r7, #356]	; 0x164
 80029a0:	fa93 f3a3 	rbit	r3, r3
 80029a4:	f8c7 3160 	str.w	r3, [r7, #352]	; 0x160
 80029a8:	f8d7 3160 	ldr.w	r3, [r7, #352]	; 0x160
 80029ac:	fab3 f383 	clz	r3, r3
 80029b0:	b2db      	uxtb	r3, r3
 80029b2:	095b      	lsrs	r3, r3, #5
 80029b4:	b2db      	uxtb	r3, r3
 80029b6:	f043 0301 	orr.w	r3, r3, #1
 80029ba:	b2db      	uxtb	r3, r3
 80029bc:	2b01      	cmp	r3, #1
 80029be:	d102      	bne.n	80029c6 <HAL_RCC_OscConfig+0x476>
 80029c0:	4b72      	ldr	r3, [pc, #456]	; (8002b8c <HAL_RCC_OscConfig+0x63c>)
 80029c2:	681b      	ldr	r3, [r3, #0]
 80029c4:	e013      	b.n	80029ee <HAL_RCC_OscConfig+0x49e>
 80029c6:	2302      	movs	r3, #2
 80029c8:	f8c7 315c 	str.w	r3, [r7, #348]	; 0x15c
 80029cc:	f8d7 315c 	ldr.w	r3, [r7, #348]	; 0x15c
 80029d0:	fa93 f3a3 	rbit	r3, r3
 80029d4:	f8c7 3158 	str.w	r3, [r7, #344]	; 0x158
 80029d8:	2302      	movs	r3, #2
 80029da:	f8c7 3154 	str.w	r3, [r7, #340]	; 0x154
 80029de:	f8d7 3154 	ldr.w	r3, [r7, #340]	; 0x154
 80029e2:	fa93 f3a3 	rbit	r3, r3
 80029e6:	f8c7 3150 	str.w	r3, [r7, #336]	; 0x150
 80029ea:	4b68      	ldr	r3, [pc, #416]	; (8002b8c <HAL_RCC_OscConfig+0x63c>)
 80029ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80029ee:	2202      	movs	r2, #2
 80029f0:	f8c7 214c 	str.w	r2, [r7, #332]	; 0x14c
 80029f4:	f8d7 214c 	ldr.w	r2, [r7, #332]	; 0x14c
 80029f8:	fa92 f2a2 	rbit	r2, r2
 80029fc:	f8c7 2148 	str.w	r2, [r7, #328]	; 0x148
 8002a00:	f8d7 2148 	ldr.w	r2, [r7, #328]	; 0x148
 8002a04:	fab2 f282 	clz	r2, r2
 8002a08:	b2d2      	uxtb	r2, r2
 8002a0a:	f042 0220 	orr.w	r2, r2, #32
 8002a0e:	b2d2      	uxtb	r2, r2
 8002a10:	f002 021f 	and.w	r2, r2, #31
 8002a14:	2101      	movs	r1, #1
 8002a16:	fa01 f202 	lsl.w	r2, r1, r2
 8002a1a:	4013      	ands	r3, r2
 8002a1c:	2b00      	cmp	r3, #0
 8002a1e:	d0af      	beq.n	8002980 <HAL_RCC_OscConfig+0x430>
 8002a20:	4b5a      	ldr	r3, [pc, #360]	; (8002b8c <HAL_RCC_OscConfig+0x63c>)
 8002a22:	681b      	ldr	r3, [r3, #0]
 8002a24:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002a28:	1d3b      	adds	r3, r7, #4
 8002a2a:	681b      	ldr	r3, [r3, #0]
 8002a2c:	691b      	ldr	r3, [r3, #16]
 8002a2e:	21f8      	movs	r1, #248	; 0xf8
 8002a30:	f8c7 1144 	str.w	r1, [r7, #324]	; 0x144
 8002a34:	f8d7 1144 	ldr.w	r1, [r7, #324]	; 0x144
 8002a38:	fa91 f1a1 	rbit	r1, r1
 8002a3c:	f8c7 1140 	str.w	r1, [r7, #320]	; 0x140
 8002a40:	f8d7 1140 	ldr.w	r1, [r7, #320]	; 0x140
 8002a44:	fab1 f181 	clz	r1, r1
 8002a48:	b2c9      	uxtb	r1, r1
 8002a4a:	408b      	lsls	r3, r1
 8002a4c:	494f      	ldr	r1, [pc, #316]	; (8002b8c <HAL_RCC_OscConfig+0x63c>)
 8002a4e:	4313      	orrs	r3, r2
 8002a50:	600b      	str	r3, [r1, #0]
 8002a52:	e06a      	b.n	8002b2a <HAL_RCC_OscConfig+0x5da>
 8002a54:	2301      	movs	r3, #1
 8002a56:	f8c7 313c 	str.w	r3, [r7, #316]	; 0x13c
 8002a5a:	f8d7 313c 	ldr.w	r3, [r7, #316]	; 0x13c
 8002a5e:	fa93 f3a3 	rbit	r3, r3
 8002a62:	f8c7 3138 	str.w	r3, [r7, #312]	; 0x138
 8002a66:	f8d7 3138 	ldr.w	r3, [r7, #312]	; 0x138
 8002a6a:	fab3 f383 	clz	r3, r3
 8002a6e:	b2db      	uxtb	r3, r3
 8002a70:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8002a74:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8002a78:	009b      	lsls	r3, r3, #2
 8002a7a:	461a      	mov	r2, r3
 8002a7c:	2300      	movs	r3, #0
 8002a7e:	6013      	str	r3, [r2, #0]
 8002a80:	f7ff f90e 	bl	8001ca0 <HAL_GetTick>
 8002a84:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
 8002a88:	e00a      	b.n	8002aa0 <HAL_RCC_OscConfig+0x550>
 8002a8a:	f7ff f909 	bl	8001ca0 <HAL_GetTick>
 8002a8e:	4602      	mov	r2, r0
 8002a90:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8002a94:	1ad3      	subs	r3, r2, r3
 8002a96:	2b02      	cmp	r3, #2
 8002a98:	d902      	bls.n	8002aa0 <HAL_RCC_OscConfig+0x550>
 8002a9a:	2303      	movs	r3, #3
 8002a9c:	f000 bc66 	b.w	800336c <HAL_RCC_OscConfig+0xe1c>
 8002aa0:	2302      	movs	r3, #2
 8002aa2:	f8c7 3134 	str.w	r3, [r7, #308]	; 0x134
 8002aa6:	f8d7 3134 	ldr.w	r3, [r7, #308]	; 0x134
 8002aaa:	fa93 f3a3 	rbit	r3, r3
 8002aae:	f8c7 3130 	str.w	r3, [r7, #304]	; 0x130
 8002ab2:	f8d7 3130 	ldr.w	r3, [r7, #304]	; 0x130
 8002ab6:	fab3 f383 	clz	r3, r3
 8002aba:	b2db      	uxtb	r3, r3
 8002abc:	095b      	lsrs	r3, r3, #5
 8002abe:	b2db      	uxtb	r3, r3
 8002ac0:	f043 0301 	orr.w	r3, r3, #1
 8002ac4:	b2db      	uxtb	r3, r3
 8002ac6:	2b01      	cmp	r3, #1
 8002ac8:	d102      	bne.n	8002ad0 <HAL_RCC_OscConfig+0x580>
 8002aca:	4b30      	ldr	r3, [pc, #192]	; (8002b8c <HAL_RCC_OscConfig+0x63c>)
 8002acc:	681b      	ldr	r3, [r3, #0]
 8002ace:	e013      	b.n	8002af8 <HAL_RCC_OscConfig+0x5a8>
 8002ad0:	2302      	movs	r3, #2
 8002ad2:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
 8002ad6:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8002ada:	fa93 f3a3 	rbit	r3, r3
 8002ade:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
 8002ae2:	2302      	movs	r3, #2
 8002ae4:	f8c7 3124 	str.w	r3, [r7, #292]	; 0x124
 8002ae8:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 8002aec:	fa93 f3a3 	rbit	r3, r3
 8002af0:	f8c7 3120 	str.w	r3, [r7, #288]	; 0x120
 8002af4:	4b25      	ldr	r3, [pc, #148]	; (8002b8c <HAL_RCC_OscConfig+0x63c>)
 8002af6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002af8:	2202      	movs	r2, #2
 8002afa:	f8c7 211c 	str.w	r2, [r7, #284]	; 0x11c
 8002afe:	f8d7 211c 	ldr.w	r2, [r7, #284]	; 0x11c
 8002b02:	fa92 f2a2 	rbit	r2, r2
 8002b06:	f8c7 2118 	str.w	r2, [r7, #280]	; 0x118
 8002b0a:	f8d7 2118 	ldr.w	r2, [r7, #280]	; 0x118
 8002b0e:	fab2 f282 	clz	r2, r2
 8002b12:	b2d2      	uxtb	r2, r2
 8002b14:	f042 0220 	orr.w	r2, r2, #32
 8002b18:	b2d2      	uxtb	r2, r2
 8002b1a:	f002 021f 	and.w	r2, r2, #31
 8002b1e:	2101      	movs	r1, #1
 8002b20:	fa01 f202 	lsl.w	r2, r1, r2
 8002b24:	4013      	ands	r3, r2
 8002b26:	2b00      	cmp	r3, #0
 8002b28:	d1af      	bne.n	8002a8a <HAL_RCC_OscConfig+0x53a>
 8002b2a:	1d3b      	adds	r3, r7, #4
 8002b2c:	681b      	ldr	r3, [r3, #0]
 8002b2e:	681b      	ldr	r3, [r3, #0]
 8002b30:	f003 0308 	and.w	r3, r3, #8
 8002b34:	2b00      	cmp	r3, #0
 8002b36:	f000 80da 	beq.w	8002cee <HAL_RCC_OscConfig+0x79e>
 8002b3a:	1d3b      	adds	r3, r7, #4
 8002b3c:	681b      	ldr	r3, [r3, #0]
 8002b3e:	695b      	ldr	r3, [r3, #20]
 8002b40:	2b00      	cmp	r3, #0
 8002b42:	d069      	beq.n	8002c18 <HAL_RCC_OscConfig+0x6c8>
 8002b44:	2301      	movs	r3, #1
 8002b46:	f8c7 3114 	str.w	r3, [r7, #276]	; 0x114
 8002b4a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8002b4e:	fa93 f3a3 	rbit	r3, r3
 8002b52:	f8c7 3110 	str.w	r3, [r7, #272]	; 0x110
 8002b56:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 8002b5a:	fab3 f383 	clz	r3, r3
 8002b5e:	b2db      	uxtb	r3, r3
 8002b60:	461a      	mov	r2, r3
 8002b62:	4b0b      	ldr	r3, [pc, #44]	; (8002b90 <HAL_RCC_OscConfig+0x640>)
 8002b64:	4413      	add	r3, r2
 8002b66:	009b      	lsls	r3, r3, #2
 8002b68:	461a      	mov	r2, r3
 8002b6a:	2301      	movs	r3, #1
 8002b6c:	6013      	str	r3, [r2, #0]
 8002b6e:	f7ff f897 	bl	8001ca0 <HAL_GetTick>
 8002b72:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
 8002b76:	e00d      	b.n	8002b94 <HAL_RCC_OscConfig+0x644>
 8002b78:	f7ff f892 	bl	8001ca0 <HAL_GetTick>
 8002b7c:	4602      	mov	r2, r0
 8002b7e:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8002b82:	1ad3      	subs	r3, r2, r3
 8002b84:	2b02      	cmp	r3, #2
 8002b86:	d905      	bls.n	8002b94 <HAL_RCC_OscConfig+0x644>
 8002b88:	2303      	movs	r3, #3
 8002b8a:	e3ef      	b.n	800336c <HAL_RCC_OscConfig+0xe1c>
 8002b8c:	40021000 	.word	0x40021000
 8002b90:	10908120 	.word	0x10908120
 8002b94:	2302      	movs	r3, #2
 8002b96:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 8002b9a:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8002b9e:	fa93 f2a3 	rbit	r2, r3
 8002ba2:	f507 7384 	add.w	r3, r7, #264	; 0x108
 8002ba6:	601a      	str	r2, [r3, #0]
 8002ba8:	f507 7382 	add.w	r3, r7, #260	; 0x104
 8002bac:	2202      	movs	r2, #2
 8002bae:	601a      	str	r2, [r3, #0]
 8002bb0:	f507 7382 	add.w	r3, r7, #260	; 0x104
 8002bb4:	681b      	ldr	r3, [r3, #0]
 8002bb6:	fa93 f2a3 	rbit	r2, r3
 8002bba:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8002bbe:	601a      	str	r2, [r3, #0]
 8002bc0:	f107 03fc 	add.w	r3, r7, #252	; 0xfc
 8002bc4:	2202      	movs	r2, #2
 8002bc6:	601a      	str	r2, [r3, #0]
 8002bc8:	f107 03fc 	add.w	r3, r7, #252	; 0xfc
 8002bcc:	681b      	ldr	r3, [r3, #0]
 8002bce:	fa93 f2a3 	rbit	r2, r3
 8002bd2:	f107 03f8 	add.w	r3, r7, #248	; 0xf8
 8002bd6:	601a      	str	r2, [r3, #0]
 8002bd8:	4ba4      	ldr	r3, [pc, #656]	; (8002e6c <HAL_RCC_OscConfig+0x91c>)
 8002bda:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002bdc:	f107 03f4 	add.w	r3, r7, #244	; 0xf4
 8002be0:	2102      	movs	r1, #2
 8002be2:	6019      	str	r1, [r3, #0]
 8002be4:	f107 03f4 	add.w	r3, r7, #244	; 0xf4
 8002be8:	681b      	ldr	r3, [r3, #0]
 8002bea:	fa93 f1a3 	rbit	r1, r3
 8002bee:	f107 03f0 	add.w	r3, r7, #240	; 0xf0
 8002bf2:	6019      	str	r1, [r3, #0]
 8002bf4:	f107 03f0 	add.w	r3, r7, #240	; 0xf0
 8002bf8:	681b      	ldr	r3, [r3, #0]
 8002bfa:	fab3 f383 	clz	r3, r3
 8002bfe:	b2db      	uxtb	r3, r3
 8002c00:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 8002c04:	b2db      	uxtb	r3, r3
 8002c06:	f003 031f 	and.w	r3, r3, #31
 8002c0a:	2101      	movs	r1, #1
 8002c0c:	fa01 f303 	lsl.w	r3, r1, r3
 8002c10:	4013      	ands	r3, r2
 8002c12:	2b00      	cmp	r3, #0
 8002c14:	d0b0      	beq.n	8002b78 <HAL_RCC_OscConfig+0x628>
 8002c16:	e06a      	b.n	8002cee <HAL_RCC_OscConfig+0x79e>
 8002c18:	f107 03ec 	add.w	r3, r7, #236	; 0xec
 8002c1c:	2201      	movs	r2, #1
 8002c1e:	601a      	str	r2, [r3, #0]
 8002c20:	f107 03ec 	add.w	r3, r7, #236	; 0xec
 8002c24:	681b      	ldr	r3, [r3, #0]
 8002c26:	fa93 f2a3 	rbit	r2, r3
 8002c2a:	f107 03e8 	add.w	r3, r7, #232	; 0xe8
 8002c2e:	601a      	str	r2, [r3, #0]
 8002c30:	f107 03e8 	add.w	r3, r7, #232	; 0xe8
 8002c34:	681b      	ldr	r3, [r3, #0]
 8002c36:	fab3 f383 	clz	r3, r3
 8002c3a:	b2db      	uxtb	r3, r3
 8002c3c:	461a      	mov	r2, r3
 8002c3e:	4b8c      	ldr	r3, [pc, #560]	; (8002e70 <HAL_RCC_OscConfig+0x920>)
 8002c40:	4413      	add	r3, r2
 8002c42:	009b      	lsls	r3, r3, #2
 8002c44:	461a      	mov	r2, r3
 8002c46:	2300      	movs	r3, #0
 8002c48:	6013      	str	r3, [r2, #0]
 8002c4a:	f7ff f829 	bl	8001ca0 <HAL_GetTick>
 8002c4e:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
 8002c52:	e009      	b.n	8002c68 <HAL_RCC_OscConfig+0x718>
 8002c54:	f7ff f824 	bl	8001ca0 <HAL_GetTick>
 8002c58:	4602      	mov	r2, r0
 8002c5a:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8002c5e:	1ad3      	subs	r3, r2, r3
 8002c60:	2b02      	cmp	r3, #2
 8002c62:	d901      	bls.n	8002c68 <HAL_RCC_OscConfig+0x718>
 8002c64:	2303      	movs	r3, #3
 8002c66:	e381      	b.n	800336c <HAL_RCC_OscConfig+0xe1c>
 8002c68:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8002c6c:	2202      	movs	r2, #2
 8002c6e:	601a      	str	r2, [r3, #0]
 8002c70:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8002c74:	681b      	ldr	r3, [r3, #0]
 8002c76:	fa93 f2a3 	rbit	r2, r3
 8002c7a:	f107 03e0 	add.w	r3, r7, #224	; 0xe0
 8002c7e:	601a      	str	r2, [r3, #0]
 8002c80:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8002c84:	2202      	movs	r2, #2
 8002c86:	601a      	str	r2, [r3, #0]
 8002c88:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8002c8c:	681b      	ldr	r3, [r3, #0]
 8002c8e:	fa93 f2a3 	rbit	r2, r3
 8002c92:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
 8002c96:	601a      	str	r2, [r3, #0]
 8002c98:	f107 03d4 	add.w	r3, r7, #212	; 0xd4
 8002c9c:	2202      	movs	r2, #2
 8002c9e:	601a      	str	r2, [r3, #0]
 8002ca0:	f107 03d4 	add.w	r3, r7, #212	; 0xd4
 8002ca4:	681b      	ldr	r3, [r3, #0]
 8002ca6:	fa93 f2a3 	rbit	r2, r3
 8002caa:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
 8002cae:	601a      	str	r2, [r3, #0]
 8002cb0:	4b6e      	ldr	r3, [pc, #440]	; (8002e6c <HAL_RCC_OscConfig+0x91c>)
 8002cb2:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002cb4:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 8002cb8:	2102      	movs	r1, #2
 8002cba:	6019      	str	r1, [r3, #0]
 8002cbc:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 8002cc0:	681b      	ldr	r3, [r3, #0]
 8002cc2:	fa93 f1a3 	rbit	r1, r3
 8002cc6:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 8002cca:	6019      	str	r1, [r3, #0]
 8002ccc:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 8002cd0:	681b      	ldr	r3, [r3, #0]
 8002cd2:	fab3 f383 	clz	r3, r3
 8002cd6:	b2db      	uxtb	r3, r3
 8002cd8:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 8002cdc:	b2db      	uxtb	r3, r3
 8002cde:	f003 031f 	and.w	r3, r3, #31
 8002ce2:	2101      	movs	r1, #1
 8002ce4:	fa01 f303 	lsl.w	r3, r1, r3
 8002ce8:	4013      	ands	r3, r2
 8002cea:	2b00      	cmp	r3, #0
 8002cec:	d1b2      	bne.n	8002c54 <HAL_RCC_OscConfig+0x704>
 8002cee:	1d3b      	adds	r3, r7, #4
 8002cf0:	681b      	ldr	r3, [r3, #0]
 8002cf2:	681b      	ldr	r3, [r3, #0]
 8002cf4:	f003 0304 	and.w	r3, r3, #4
 8002cf8:	2b00      	cmp	r3, #0
 8002cfa:	f000 8157 	beq.w	8002fac <HAL_RCC_OscConfig+0xa5c>
 8002cfe:	2300      	movs	r3, #0
 8002d00:	f887 3207 	strb.w	r3, [r7, #519]	; 0x207
 8002d04:	4b59      	ldr	r3, [pc, #356]	; (8002e6c <HAL_RCC_OscConfig+0x91c>)
 8002d06:	69db      	ldr	r3, [r3, #28]
 8002d08:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002d0c:	2b00      	cmp	r3, #0
 8002d0e:	d112      	bne.n	8002d36 <HAL_RCC_OscConfig+0x7e6>
 8002d10:	4b56      	ldr	r3, [pc, #344]	; (8002e6c <HAL_RCC_OscConfig+0x91c>)
 8002d12:	69db      	ldr	r3, [r3, #28]
 8002d14:	4a55      	ldr	r2, [pc, #340]	; (8002e6c <HAL_RCC_OscConfig+0x91c>)
 8002d16:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002d1a:	61d3      	str	r3, [r2, #28]
 8002d1c:	4b53      	ldr	r3, [pc, #332]	; (8002e6c <HAL_RCC_OscConfig+0x91c>)
 8002d1e:	69db      	ldr	r3, [r3, #28]
 8002d20:	f003 5280 	and.w	r2, r3, #268435456	; 0x10000000
 8002d24:	f107 030c 	add.w	r3, r7, #12
 8002d28:	601a      	str	r2, [r3, #0]
 8002d2a:	f107 030c 	add.w	r3, r7, #12
 8002d2e:	681b      	ldr	r3, [r3, #0]
 8002d30:	2301      	movs	r3, #1
 8002d32:	f887 3207 	strb.w	r3, [r7, #519]	; 0x207
 8002d36:	4b4f      	ldr	r3, [pc, #316]	; (8002e74 <HAL_RCC_OscConfig+0x924>)
 8002d38:	681b      	ldr	r3, [r3, #0]
 8002d3a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002d3e:	2b00      	cmp	r3, #0
 8002d40:	d11a      	bne.n	8002d78 <HAL_RCC_OscConfig+0x828>
 8002d42:	4b4c      	ldr	r3, [pc, #304]	; (8002e74 <HAL_RCC_OscConfig+0x924>)
 8002d44:	681b      	ldr	r3, [r3, #0]
 8002d46:	4a4b      	ldr	r2, [pc, #300]	; (8002e74 <HAL_RCC_OscConfig+0x924>)
 8002d48:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002d4c:	6013      	str	r3, [r2, #0]
 8002d4e:	f7fe ffa7 	bl	8001ca0 <HAL_GetTick>
 8002d52:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
 8002d56:	e009      	b.n	8002d6c <HAL_RCC_OscConfig+0x81c>
 8002d58:	f7fe ffa2 	bl	8001ca0 <HAL_GetTick>
 8002d5c:	4602      	mov	r2, r0
 8002d5e:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8002d62:	1ad3      	subs	r3, r2, r3
 8002d64:	2b64      	cmp	r3, #100	; 0x64
 8002d66:	d901      	bls.n	8002d6c <HAL_RCC_OscConfig+0x81c>
 8002d68:	2303      	movs	r3, #3
 8002d6a:	e2ff      	b.n	800336c <HAL_RCC_OscConfig+0xe1c>
 8002d6c:	4b41      	ldr	r3, [pc, #260]	; (8002e74 <HAL_RCC_OscConfig+0x924>)
 8002d6e:	681b      	ldr	r3, [r3, #0]
 8002d70:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002d74:	2b00      	cmp	r3, #0
 8002d76:	d0ef      	beq.n	8002d58 <HAL_RCC_OscConfig+0x808>
 8002d78:	1d3b      	adds	r3, r7, #4
 8002d7a:	681b      	ldr	r3, [r3, #0]
 8002d7c:	689b      	ldr	r3, [r3, #8]
 8002d7e:	2b01      	cmp	r3, #1
 8002d80:	d106      	bne.n	8002d90 <HAL_RCC_OscConfig+0x840>
 8002d82:	4b3a      	ldr	r3, [pc, #232]	; (8002e6c <HAL_RCC_OscConfig+0x91c>)
 8002d84:	6a1b      	ldr	r3, [r3, #32]
 8002d86:	4a39      	ldr	r2, [pc, #228]	; (8002e6c <HAL_RCC_OscConfig+0x91c>)
 8002d88:	f043 0301 	orr.w	r3, r3, #1
 8002d8c:	6213      	str	r3, [r2, #32]
 8002d8e:	e02f      	b.n	8002df0 <HAL_RCC_OscConfig+0x8a0>
 8002d90:	1d3b      	adds	r3, r7, #4
 8002d92:	681b      	ldr	r3, [r3, #0]
 8002d94:	689b      	ldr	r3, [r3, #8]
 8002d96:	2b00      	cmp	r3, #0
 8002d98:	d10c      	bne.n	8002db4 <HAL_RCC_OscConfig+0x864>
 8002d9a:	4b34      	ldr	r3, [pc, #208]	; (8002e6c <HAL_RCC_OscConfig+0x91c>)
 8002d9c:	6a1b      	ldr	r3, [r3, #32]
 8002d9e:	4a33      	ldr	r2, [pc, #204]	; (8002e6c <HAL_RCC_OscConfig+0x91c>)
 8002da0:	f023 0301 	bic.w	r3, r3, #1
 8002da4:	6213      	str	r3, [r2, #32]
 8002da6:	4b31      	ldr	r3, [pc, #196]	; (8002e6c <HAL_RCC_OscConfig+0x91c>)
 8002da8:	6a1b      	ldr	r3, [r3, #32]
 8002daa:	4a30      	ldr	r2, [pc, #192]	; (8002e6c <HAL_RCC_OscConfig+0x91c>)
 8002dac:	f023 0304 	bic.w	r3, r3, #4
 8002db0:	6213      	str	r3, [r2, #32]
 8002db2:	e01d      	b.n	8002df0 <HAL_RCC_OscConfig+0x8a0>
 8002db4:	1d3b      	adds	r3, r7, #4
 8002db6:	681b      	ldr	r3, [r3, #0]
 8002db8:	689b      	ldr	r3, [r3, #8]
 8002dba:	2b05      	cmp	r3, #5
 8002dbc:	d10c      	bne.n	8002dd8 <HAL_RCC_OscConfig+0x888>
 8002dbe:	4b2b      	ldr	r3, [pc, #172]	; (8002e6c <HAL_RCC_OscConfig+0x91c>)
 8002dc0:	6a1b      	ldr	r3, [r3, #32]
 8002dc2:	4a2a      	ldr	r2, [pc, #168]	; (8002e6c <HAL_RCC_OscConfig+0x91c>)
 8002dc4:	f043 0304 	orr.w	r3, r3, #4
 8002dc8:	6213      	str	r3, [r2, #32]
 8002dca:	4b28      	ldr	r3, [pc, #160]	; (8002e6c <HAL_RCC_OscConfig+0x91c>)
 8002dcc:	6a1b      	ldr	r3, [r3, #32]
 8002dce:	4a27      	ldr	r2, [pc, #156]	; (8002e6c <HAL_RCC_OscConfig+0x91c>)
 8002dd0:	f043 0301 	orr.w	r3, r3, #1
 8002dd4:	6213      	str	r3, [r2, #32]
 8002dd6:	e00b      	b.n	8002df0 <HAL_RCC_OscConfig+0x8a0>
 8002dd8:	4b24      	ldr	r3, [pc, #144]	; (8002e6c <HAL_RCC_OscConfig+0x91c>)
 8002dda:	6a1b      	ldr	r3, [r3, #32]
 8002ddc:	4a23      	ldr	r2, [pc, #140]	; (8002e6c <HAL_RCC_OscConfig+0x91c>)
 8002dde:	f023 0301 	bic.w	r3, r3, #1
 8002de2:	6213      	str	r3, [r2, #32]
 8002de4:	4b21      	ldr	r3, [pc, #132]	; (8002e6c <HAL_RCC_OscConfig+0x91c>)
 8002de6:	6a1b      	ldr	r3, [r3, #32]
 8002de8:	4a20      	ldr	r2, [pc, #128]	; (8002e6c <HAL_RCC_OscConfig+0x91c>)
 8002dea:	f023 0304 	bic.w	r3, r3, #4
 8002dee:	6213      	str	r3, [r2, #32]
 8002df0:	1d3b      	adds	r3, r7, #4
 8002df2:	681b      	ldr	r3, [r3, #0]
 8002df4:	689b      	ldr	r3, [r3, #8]
 8002df6:	2b00      	cmp	r3, #0
 8002df8:	d06a      	beq.n	8002ed0 <HAL_RCC_OscConfig+0x980>
 8002dfa:	f7fe ff51 	bl	8001ca0 <HAL_GetTick>
 8002dfe:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
 8002e02:	e00b      	b.n	8002e1c <HAL_RCC_OscConfig+0x8cc>
 8002e04:	f7fe ff4c 	bl	8001ca0 <HAL_GetTick>
 8002e08:	4602      	mov	r2, r0
 8002e0a:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8002e0e:	1ad3      	subs	r3, r2, r3
 8002e10:	f241 3288 	movw	r2, #5000	; 0x1388
 8002e14:	4293      	cmp	r3, r2
 8002e16:	d901      	bls.n	8002e1c <HAL_RCC_OscConfig+0x8cc>
 8002e18:	2303      	movs	r3, #3
 8002e1a:	e2a7      	b.n	800336c <HAL_RCC_OscConfig+0xe1c>
 8002e1c:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 8002e20:	2202      	movs	r2, #2
 8002e22:	601a      	str	r2, [r3, #0]
 8002e24:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 8002e28:	681b      	ldr	r3, [r3, #0]
 8002e2a:	fa93 f2a3 	rbit	r2, r3
 8002e2e:	f107 03c0 	add.w	r3, r7, #192	; 0xc0
 8002e32:	601a      	str	r2, [r3, #0]
 8002e34:	f107 03bc 	add.w	r3, r7, #188	; 0xbc
 8002e38:	2202      	movs	r2, #2
 8002e3a:	601a      	str	r2, [r3, #0]
 8002e3c:	f107 03bc 	add.w	r3, r7, #188	; 0xbc
 8002e40:	681b      	ldr	r3, [r3, #0]
 8002e42:	fa93 f2a3 	rbit	r2, r3
 8002e46:	f107 03b8 	add.w	r3, r7, #184	; 0xb8
 8002e4a:	601a      	str	r2, [r3, #0]
 8002e4c:	f107 03b8 	add.w	r3, r7, #184	; 0xb8
 8002e50:	681b      	ldr	r3, [r3, #0]
 8002e52:	fab3 f383 	clz	r3, r3
 8002e56:	b2db      	uxtb	r3, r3
 8002e58:	095b      	lsrs	r3, r3, #5
 8002e5a:	b2db      	uxtb	r3, r3
 8002e5c:	f043 0302 	orr.w	r3, r3, #2
 8002e60:	b2db      	uxtb	r3, r3
 8002e62:	2b02      	cmp	r3, #2
 8002e64:	d108      	bne.n	8002e78 <HAL_RCC_OscConfig+0x928>
 8002e66:	4b01      	ldr	r3, [pc, #4]	; (8002e6c <HAL_RCC_OscConfig+0x91c>)
 8002e68:	6a1b      	ldr	r3, [r3, #32]
 8002e6a:	e013      	b.n	8002e94 <HAL_RCC_OscConfig+0x944>
 8002e6c:	40021000 	.word	0x40021000
 8002e70:	10908120 	.word	0x10908120
 8002e74:	40007000 	.word	0x40007000
 8002e78:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 8002e7c:	2202      	movs	r2, #2
 8002e7e:	601a      	str	r2, [r3, #0]
 8002e80:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 8002e84:	681b      	ldr	r3, [r3, #0]
 8002e86:	fa93 f2a3 	rbit	r2, r3
 8002e8a:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
 8002e8e:	601a      	str	r2, [r3, #0]
 8002e90:	4bc0      	ldr	r3, [pc, #768]	; (8003194 <HAL_RCC_OscConfig+0xc44>)
 8002e92:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e94:	f107 02ac 	add.w	r2, r7, #172	; 0xac
 8002e98:	2102      	movs	r1, #2
 8002e9a:	6011      	str	r1, [r2, #0]
 8002e9c:	f107 02ac 	add.w	r2, r7, #172	; 0xac
 8002ea0:	6812      	ldr	r2, [r2, #0]
 8002ea2:	fa92 f1a2 	rbit	r1, r2
 8002ea6:	f107 02a8 	add.w	r2, r7, #168	; 0xa8
 8002eaa:	6011      	str	r1, [r2, #0]
 8002eac:	f107 02a8 	add.w	r2, r7, #168	; 0xa8
 8002eb0:	6812      	ldr	r2, [r2, #0]
 8002eb2:	fab2 f282 	clz	r2, r2
 8002eb6:	b2d2      	uxtb	r2, r2
 8002eb8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002ebc:	b2d2      	uxtb	r2, r2
 8002ebe:	f002 021f 	and.w	r2, r2, #31
 8002ec2:	2101      	movs	r1, #1
 8002ec4:	fa01 f202 	lsl.w	r2, r1, r2
 8002ec8:	4013      	ands	r3, r2
 8002eca:	2b00      	cmp	r3, #0
 8002ecc:	d09a      	beq.n	8002e04 <HAL_RCC_OscConfig+0x8b4>
 8002ece:	e063      	b.n	8002f98 <HAL_RCC_OscConfig+0xa48>
 8002ed0:	f7fe fee6 	bl	8001ca0 <HAL_GetTick>
 8002ed4:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
 8002ed8:	e00b      	b.n	8002ef2 <HAL_RCC_OscConfig+0x9a2>
 8002eda:	f7fe fee1 	bl	8001ca0 <HAL_GetTick>
 8002ede:	4602      	mov	r2, r0
 8002ee0:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8002ee4:	1ad3      	subs	r3, r2, r3
 8002ee6:	f241 3288 	movw	r2, #5000	; 0x1388
 8002eea:	4293      	cmp	r3, r2
 8002eec:	d901      	bls.n	8002ef2 <HAL_RCC_OscConfig+0x9a2>
 8002eee:	2303      	movs	r3, #3
 8002ef0:	e23c      	b.n	800336c <HAL_RCC_OscConfig+0xe1c>
 8002ef2:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 8002ef6:	2202      	movs	r2, #2
 8002ef8:	601a      	str	r2, [r3, #0]
 8002efa:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 8002efe:	681b      	ldr	r3, [r3, #0]
 8002f00:	fa93 f2a3 	rbit	r2, r3
 8002f04:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8002f08:	601a      	str	r2, [r3, #0]
 8002f0a:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8002f0e:	2202      	movs	r2, #2
 8002f10:	601a      	str	r2, [r3, #0]
 8002f12:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8002f16:	681b      	ldr	r3, [r3, #0]
 8002f18:	fa93 f2a3 	rbit	r2, r3
 8002f1c:	f107 0398 	add.w	r3, r7, #152	; 0x98
 8002f20:	601a      	str	r2, [r3, #0]
 8002f22:	f107 0398 	add.w	r3, r7, #152	; 0x98
 8002f26:	681b      	ldr	r3, [r3, #0]
 8002f28:	fab3 f383 	clz	r3, r3
 8002f2c:	b2db      	uxtb	r3, r3
 8002f2e:	095b      	lsrs	r3, r3, #5
 8002f30:	b2db      	uxtb	r3, r3
 8002f32:	f043 0302 	orr.w	r3, r3, #2
 8002f36:	b2db      	uxtb	r3, r3
 8002f38:	2b02      	cmp	r3, #2
 8002f3a:	d102      	bne.n	8002f42 <HAL_RCC_OscConfig+0x9f2>
 8002f3c:	4b95      	ldr	r3, [pc, #596]	; (8003194 <HAL_RCC_OscConfig+0xc44>)
 8002f3e:	6a1b      	ldr	r3, [r3, #32]
 8002f40:	e00d      	b.n	8002f5e <HAL_RCC_OscConfig+0xa0e>
 8002f42:	f107 0394 	add.w	r3, r7, #148	; 0x94
 8002f46:	2202      	movs	r2, #2
 8002f48:	601a      	str	r2, [r3, #0]
 8002f4a:	f107 0394 	add.w	r3, r7, #148	; 0x94
 8002f4e:	681b      	ldr	r3, [r3, #0]
 8002f50:	fa93 f2a3 	rbit	r2, r3
 8002f54:	f107 0390 	add.w	r3, r7, #144	; 0x90
 8002f58:	601a      	str	r2, [r3, #0]
 8002f5a:	4b8e      	ldr	r3, [pc, #568]	; (8003194 <HAL_RCC_OscConfig+0xc44>)
 8002f5c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002f5e:	f107 028c 	add.w	r2, r7, #140	; 0x8c
 8002f62:	2102      	movs	r1, #2
 8002f64:	6011      	str	r1, [r2, #0]
 8002f66:	f107 028c 	add.w	r2, r7, #140	; 0x8c
 8002f6a:	6812      	ldr	r2, [r2, #0]
 8002f6c:	fa92 f1a2 	rbit	r1, r2
 8002f70:	f107 0288 	add.w	r2, r7, #136	; 0x88
 8002f74:	6011      	str	r1, [r2, #0]
 8002f76:	f107 0288 	add.w	r2, r7, #136	; 0x88
 8002f7a:	6812      	ldr	r2, [r2, #0]
 8002f7c:	fab2 f282 	clz	r2, r2
 8002f80:	b2d2      	uxtb	r2, r2
 8002f82:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002f86:	b2d2      	uxtb	r2, r2
 8002f88:	f002 021f 	and.w	r2, r2, #31
 8002f8c:	2101      	movs	r1, #1
 8002f8e:	fa01 f202 	lsl.w	r2, r1, r2
 8002f92:	4013      	ands	r3, r2
 8002f94:	2b00      	cmp	r3, #0
 8002f96:	d1a0      	bne.n	8002eda <HAL_RCC_OscConfig+0x98a>
 8002f98:	f897 3207 	ldrb.w	r3, [r7, #519]	; 0x207
 8002f9c:	2b01      	cmp	r3, #1
 8002f9e:	d105      	bne.n	8002fac <HAL_RCC_OscConfig+0xa5c>
 8002fa0:	4b7c      	ldr	r3, [pc, #496]	; (8003194 <HAL_RCC_OscConfig+0xc44>)
 8002fa2:	69db      	ldr	r3, [r3, #28]
 8002fa4:	4a7b      	ldr	r2, [pc, #492]	; (8003194 <HAL_RCC_OscConfig+0xc44>)
 8002fa6:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002faa:	61d3      	str	r3, [r2, #28]
 8002fac:	1d3b      	adds	r3, r7, #4
 8002fae:	681b      	ldr	r3, [r3, #0]
 8002fb0:	699b      	ldr	r3, [r3, #24]
 8002fb2:	2b00      	cmp	r3, #0
 8002fb4:	f000 81d9 	beq.w	800336a <HAL_RCC_OscConfig+0xe1a>
 8002fb8:	4b76      	ldr	r3, [pc, #472]	; (8003194 <HAL_RCC_OscConfig+0xc44>)
 8002fba:	685b      	ldr	r3, [r3, #4]
 8002fbc:	f003 030c 	and.w	r3, r3, #12
 8002fc0:	2b08      	cmp	r3, #8
 8002fc2:	f000 81a6 	beq.w	8003312 <HAL_RCC_OscConfig+0xdc2>
 8002fc6:	1d3b      	adds	r3, r7, #4
 8002fc8:	681b      	ldr	r3, [r3, #0]
 8002fca:	699b      	ldr	r3, [r3, #24]
 8002fcc:	2b02      	cmp	r3, #2
 8002fce:	f040 811e 	bne.w	800320e <HAL_RCC_OscConfig+0xcbe>
 8002fd2:	f107 0384 	add.w	r3, r7, #132	; 0x84
 8002fd6:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8002fda:	601a      	str	r2, [r3, #0]
 8002fdc:	f107 0384 	add.w	r3, r7, #132	; 0x84
 8002fe0:	681b      	ldr	r3, [r3, #0]
 8002fe2:	fa93 f2a3 	rbit	r2, r3
 8002fe6:	f107 0380 	add.w	r3, r7, #128	; 0x80
 8002fea:	601a      	str	r2, [r3, #0]
 8002fec:	f107 0380 	add.w	r3, r7, #128	; 0x80
 8002ff0:	681b      	ldr	r3, [r3, #0]
 8002ff2:	fab3 f383 	clz	r3, r3
 8002ff6:	b2db      	uxtb	r3, r3
 8002ff8:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8002ffc:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8003000:	009b      	lsls	r3, r3, #2
 8003002:	461a      	mov	r2, r3
 8003004:	2300      	movs	r3, #0
 8003006:	6013      	str	r3, [r2, #0]
 8003008:	f7fe fe4a 	bl	8001ca0 <HAL_GetTick>
 800300c:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
 8003010:	e009      	b.n	8003026 <HAL_RCC_OscConfig+0xad6>
 8003012:	f7fe fe45 	bl	8001ca0 <HAL_GetTick>
 8003016:	4602      	mov	r2, r0
 8003018:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 800301c:	1ad3      	subs	r3, r2, r3
 800301e:	2b02      	cmp	r3, #2
 8003020:	d901      	bls.n	8003026 <HAL_RCC_OscConfig+0xad6>
 8003022:	2303      	movs	r3, #3
 8003024:	e1a2      	b.n	800336c <HAL_RCC_OscConfig+0xe1c>
 8003026:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 800302a:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 800302e:	601a      	str	r2, [r3, #0]
 8003030:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 8003034:	681b      	ldr	r3, [r3, #0]
 8003036:	fa93 f2a3 	rbit	r2, r3
 800303a:	f107 0378 	add.w	r3, r7, #120	; 0x78
 800303e:	601a      	str	r2, [r3, #0]
 8003040:	f107 0378 	add.w	r3, r7, #120	; 0x78
 8003044:	681b      	ldr	r3, [r3, #0]
 8003046:	fab3 f383 	clz	r3, r3
 800304a:	b2db      	uxtb	r3, r3
 800304c:	095b      	lsrs	r3, r3, #5
 800304e:	b2db      	uxtb	r3, r3
 8003050:	f043 0301 	orr.w	r3, r3, #1
 8003054:	b2db      	uxtb	r3, r3
 8003056:	2b01      	cmp	r3, #1
 8003058:	d102      	bne.n	8003060 <HAL_RCC_OscConfig+0xb10>
 800305a:	4b4e      	ldr	r3, [pc, #312]	; (8003194 <HAL_RCC_OscConfig+0xc44>)
 800305c:	681b      	ldr	r3, [r3, #0]
 800305e:	e01b      	b.n	8003098 <HAL_RCC_OscConfig+0xb48>
 8003060:	f107 0374 	add.w	r3, r7, #116	; 0x74
 8003064:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8003068:	601a      	str	r2, [r3, #0]
 800306a:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800306e:	681b      	ldr	r3, [r3, #0]
 8003070:	fa93 f2a3 	rbit	r2, r3
 8003074:	f107 0370 	add.w	r3, r7, #112	; 0x70
 8003078:	601a      	str	r2, [r3, #0]
 800307a:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 800307e:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8003082:	601a      	str	r2, [r3, #0]
 8003084:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 8003088:	681b      	ldr	r3, [r3, #0]
 800308a:	fa93 f2a3 	rbit	r2, r3
 800308e:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8003092:	601a      	str	r2, [r3, #0]
 8003094:	4b3f      	ldr	r3, [pc, #252]	; (8003194 <HAL_RCC_OscConfig+0xc44>)
 8003096:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003098:	f107 0264 	add.w	r2, r7, #100	; 0x64
 800309c:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 80030a0:	6011      	str	r1, [r2, #0]
 80030a2:	f107 0264 	add.w	r2, r7, #100	; 0x64
 80030a6:	6812      	ldr	r2, [r2, #0]
 80030a8:	fa92 f1a2 	rbit	r1, r2
 80030ac:	f107 0260 	add.w	r2, r7, #96	; 0x60
 80030b0:	6011      	str	r1, [r2, #0]
 80030b2:	f107 0260 	add.w	r2, r7, #96	; 0x60
 80030b6:	6812      	ldr	r2, [r2, #0]
 80030b8:	fab2 f282 	clz	r2, r2
 80030bc:	b2d2      	uxtb	r2, r2
 80030be:	f042 0220 	orr.w	r2, r2, #32
 80030c2:	b2d2      	uxtb	r2, r2
 80030c4:	f002 021f 	and.w	r2, r2, #31
 80030c8:	2101      	movs	r1, #1
 80030ca:	fa01 f202 	lsl.w	r2, r1, r2
 80030ce:	4013      	ands	r3, r2
 80030d0:	2b00      	cmp	r3, #0
 80030d2:	d19e      	bne.n	8003012 <HAL_RCC_OscConfig+0xac2>
 80030d4:	4b2f      	ldr	r3, [pc, #188]	; (8003194 <HAL_RCC_OscConfig+0xc44>)
 80030d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80030d8:	f023 020f 	bic.w	r2, r3, #15
 80030dc:	1d3b      	adds	r3, r7, #4
 80030de:	681b      	ldr	r3, [r3, #0]
 80030e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80030e2:	492c      	ldr	r1, [pc, #176]	; (8003194 <HAL_RCC_OscConfig+0xc44>)
 80030e4:	4313      	orrs	r3, r2
 80030e6:	62cb      	str	r3, [r1, #44]	; 0x2c
 80030e8:	4b2a      	ldr	r3, [pc, #168]	; (8003194 <HAL_RCC_OscConfig+0xc44>)
 80030ea:	685b      	ldr	r3, [r3, #4]
 80030ec:	f423 1276 	bic.w	r2, r3, #4030464	; 0x3d8000
 80030f0:	1d3b      	adds	r3, r7, #4
 80030f2:	681b      	ldr	r3, [r3, #0]
 80030f4:	6a19      	ldr	r1, [r3, #32]
 80030f6:	1d3b      	adds	r3, r7, #4
 80030f8:	681b      	ldr	r3, [r3, #0]
 80030fa:	69db      	ldr	r3, [r3, #28]
 80030fc:	430b      	orrs	r3, r1
 80030fe:	4925      	ldr	r1, [pc, #148]	; (8003194 <HAL_RCC_OscConfig+0xc44>)
 8003100:	4313      	orrs	r3, r2
 8003102:	604b      	str	r3, [r1, #4]
 8003104:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 8003108:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800310c:	601a      	str	r2, [r3, #0]
 800310e:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 8003112:	681b      	ldr	r3, [r3, #0]
 8003114:	fa93 f2a3 	rbit	r2, r3
 8003118:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800311c:	601a      	str	r2, [r3, #0]
 800311e:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8003122:	681b      	ldr	r3, [r3, #0]
 8003124:	fab3 f383 	clz	r3, r3
 8003128:	b2db      	uxtb	r3, r3
 800312a:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 800312e:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8003132:	009b      	lsls	r3, r3, #2
 8003134:	461a      	mov	r2, r3
 8003136:	2301      	movs	r3, #1
 8003138:	6013      	str	r3, [r2, #0]
 800313a:	f7fe fdb1 	bl	8001ca0 <HAL_GetTick>
 800313e:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
 8003142:	e009      	b.n	8003158 <HAL_RCC_OscConfig+0xc08>
 8003144:	f7fe fdac 	bl	8001ca0 <HAL_GetTick>
 8003148:	4602      	mov	r2, r0
 800314a:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 800314e:	1ad3      	subs	r3, r2, r3
 8003150:	2b02      	cmp	r3, #2
 8003152:	d901      	bls.n	8003158 <HAL_RCC_OscConfig+0xc08>
 8003154:	2303      	movs	r3, #3
 8003156:	e109      	b.n	800336c <HAL_RCC_OscConfig+0xe1c>
 8003158:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800315c:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8003160:	601a      	str	r2, [r3, #0]
 8003162:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8003166:	681b      	ldr	r3, [r3, #0]
 8003168:	fa93 f2a3 	rbit	r2, r3
 800316c:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8003170:	601a      	str	r2, [r3, #0]
 8003172:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8003176:	681b      	ldr	r3, [r3, #0]
 8003178:	fab3 f383 	clz	r3, r3
 800317c:	b2db      	uxtb	r3, r3
 800317e:	095b      	lsrs	r3, r3, #5
 8003180:	b2db      	uxtb	r3, r3
 8003182:	f043 0301 	orr.w	r3, r3, #1
 8003186:	b2db      	uxtb	r3, r3
 8003188:	2b01      	cmp	r3, #1
 800318a:	d105      	bne.n	8003198 <HAL_RCC_OscConfig+0xc48>
 800318c:	4b01      	ldr	r3, [pc, #4]	; (8003194 <HAL_RCC_OscConfig+0xc44>)
 800318e:	681b      	ldr	r3, [r3, #0]
 8003190:	e01e      	b.n	80031d0 <HAL_RCC_OscConfig+0xc80>
 8003192:	bf00      	nop
 8003194:	40021000 	.word	0x40021000
 8003198:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800319c:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 80031a0:	601a      	str	r2, [r3, #0]
 80031a2:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 80031a6:	681b      	ldr	r3, [r3, #0]
 80031a8:	fa93 f2a3 	rbit	r2, r3
 80031ac:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80031b0:	601a      	str	r2, [r3, #0]
 80031b2:	f107 0344 	add.w	r3, r7, #68	; 0x44
 80031b6:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 80031ba:	601a      	str	r2, [r3, #0]
 80031bc:	f107 0344 	add.w	r3, r7, #68	; 0x44
 80031c0:	681b      	ldr	r3, [r3, #0]
 80031c2:	fa93 f2a3 	rbit	r2, r3
 80031c6:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80031ca:	601a      	str	r2, [r3, #0]
 80031cc:	4b6a      	ldr	r3, [pc, #424]	; (8003378 <HAL_RCC_OscConfig+0xe28>)
 80031ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80031d0:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 80031d4:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 80031d8:	6011      	str	r1, [r2, #0]
 80031da:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 80031de:	6812      	ldr	r2, [r2, #0]
 80031e0:	fa92 f1a2 	rbit	r1, r2
 80031e4:	f107 0238 	add.w	r2, r7, #56	; 0x38
 80031e8:	6011      	str	r1, [r2, #0]
 80031ea:	f107 0238 	add.w	r2, r7, #56	; 0x38
 80031ee:	6812      	ldr	r2, [r2, #0]
 80031f0:	fab2 f282 	clz	r2, r2
 80031f4:	b2d2      	uxtb	r2, r2
 80031f6:	f042 0220 	orr.w	r2, r2, #32
 80031fa:	b2d2      	uxtb	r2, r2
 80031fc:	f002 021f 	and.w	r2, r2, #31
 8003200:	2101      	movs	r1, #1
 8003202:	fa01 f202 	lsl.w	r2, r1, r2
 8003206:	4013      	ands	r3, r2
 8003208:	2b00      	cmp	r3, #0
 800320a:	d09b      	beq.n	8003144 <HAL_RCC_OscConfig+0xbf4>
 800320c:	e0ad      	b.n	800336a <HAL_RCC_OscConfig+0xe1a>
 800320e:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8003212:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8003216:	601a      	str	r2, [r3, #0]
 8003218:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800321c:	681b      	ldr	r3, [r3, #0]
 800321e:	fa93 f2a3 	rbit	r2, r3
 8003222:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8003226:	601a      	str	r2, [r3, #0]
 8003228:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800322c:	681b      	ldr	r3, [r3, #0]
 800322e:	fab3 f383 	clz	r3, r3
 8003232:	b2db      	uxtb	r3, r3
 8003234:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8003238:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 800323c:	009b      	lsls	r3, r3, #2
 800323e:	461a      	mov	r2, r3
 8003240:	2300      	movs	r3, #0
 8003242:	6013      	str	r3, [r2, #0]
 8003244:	f7fe fd2c 	bl	8001ca0 <HAL_GetTick>
 8003248:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
 800324c:	e009      	b.n	8003262 <HAL_RCC_OscConfig+0xd12>
 800324e:	f7fe fd27 	bl	8001ca0 <HAL_GetTick>
 8003252:	4602      	mov	r2, r0
 8003254:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8003258:	1ad3      	subs	r3, r2, r3
 800325a:	2b02      	cmp	r3, #2
 800325c:	d901      	bls.n	8003262 <HAL_RCC_OscConfig+0xd12>
 800325e:	2303      	movs	r3, #3
 8003260:	e084      	b.n	800336c <HAL_RCC_OscConfig+0xe1c>
 8003262:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8003266:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 800326a:	601a      	str	r2, [r3, #0]
 800326c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8003270:	681b      	ldr	r3, [r3, #0]
 8003272:	fa93 f2a3 	rbit	r2, r3
 8003276:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800327a:	601a      	str	r2, [r3, #0]
 800327c:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8003280:	681b      	ldr	r3, [r3, #0]
 8003282:	fab3 f383 	clz	r3, r3
 8003286:	b2db      	uxtb	r3, r3
 8003288:	095b      	lsrs	r3, r3, #5
 800328a:	b2db      	uxtb	r3, r3
 800328c:	f043 0301 	orr.w	r3, r3, #1
 8003290:	b2db      	uxtb	r3, r3
 8003292:	2b01      	cmp	r3, #1
 8003294:	d102      	bne.n	800329c <HAL_RCC_OscConfig+0xd4c>
 8003296:	4b38      	ldr	r3, [pc, #224]	; (8003378 <HAL_RCC_OscConfig+0xe28>)
 8003298:	681b      	ldr	r3, [r3, #0]
 800329a:	e01b      	b.n	80032d4 <HAL_RCC_OscConfig+0xd84>
 800329c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80032a0:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 80032a4:	601a      	str	r2, [r3, #0]
 80032a6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80032aa:	681b      	ldr	r3, [r3, #0]
 80032ac:	fa93 f2a3 	rbit	r2, r3
 80032b0:	f107 0320 	add.w	r3, r7, #32
 80032b4:	601a      	str	r2, [r3, #0]
 80032b6:	f107 031c 	add.w	r3, r7, #28
 80032ba:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 80032be:	601a      	str	r2, [r3, #0]
 80032c0:	f107 031c 	add.w	r3, r7, #28
 80032c4:	681b      	ldr	r3, [r3, #0]
 80032c6:	fa93 f2a3 	rbit	r2, r3
 80032ca:	f107 0318 	add.w	r3, r7, #24
 80032ce:	601a      	str	r2, [r3, #0]
 80032d0:	4b29      	ldr	r3, [pc, #164]	; (8003378 <HAL_RCC_OscConfig+0xe28>)
 80032d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80032d4:	f107 0214 	add.w	r2, r7, #20
 80032d8:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 80032dc:	6011      	str	r1, [r2, #0]
 80032de:	f107 0214 	add.w	r2, r7, #20
 80032e2:	6812      	ldr	r2, [r2, #0]
 80032e4:	fa92 f1a2 	rbit	r1, r2
 80032e8:	f107 0210 	add.w	r2, r7, #16
 80032ec:	6011      	str	r1, [r2, #0]
 80032ee:	f107 0210 	add.w	r2, r7, #16
 80032f2:	6812      	ldr	r2, [r2, #0]
 80032f4:	fab2 f282 	clz	r2, r2
 80032f8:	b2d2      	uxtb	r2, r2
 80032fa:	f042 0220 	orr.w	r2, r2, #32
 80032fe:	b2d2      	uxtb	r2, r2
 8003300:	f002 021f 	and.w	r2, r2, #31
 8003304:	2101      	movs	r1, #1
 8003306:	fa01 f202 	lsl.w	r2, r1, r2
 800330a:	4013      	ands	r3, r2
 800330c:	2b00      	cmp	r3, #0
 800330e:	d19e      	bne.n	800324e <HAL_RCC_OscConfig+0xcfe>
 8003310:	e02b      	b.n	800336a <HAL_RCC_OscConfig+0xe1a>
 8003312:	1d3b      	adds	r3, r7, #4
 8003314:	681b      	ldr	r3, [r3, #0]
 8003316:	699b      	ldr	r3, [r3, #24]
 8003318:	2b01      	cmp	r3, #1
 800331a:	d101      	bne.n	8003320 <HAL_RCC_OscConfig+0xdd0>
 800331c:	2301      	movs	r3, #1
 800331e:	e025      	b.n	800336c <HAL_RCC_OscConfig+0xe1c>
 8003320:	4b15      	ldr	r3, [pc, #84]	; (8003378 <HAL_RCC_OscConfig+0xe28>)
 8003322:	685b      	ldr	r3, [r3, #4]
 8003324:	f8c7 31fc 	str.w	r3, [r7, #508]	; 0x1fc
 8003328:	4b13      	ldr	r3, [pc, #76]	; (8003378 <HAL_RCC_OscConfig+0xe28>)
 800332a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800332c:	f8c7 31f8 	str.w	r3, [r7, #504]	; 0x1f8
 8003330:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8003334:	f403 32c0 	and.w	r2, r3, #98304	; 0x18000
 8003338:	1d3b      	adds	r3, r7, #4
 800333a:	681b      	ldr	r3, [r3, #0]
 800333c:	69db      	ldr	r3, [r3, #28]
 800333e:	429a      	cmp	r2, r3
 8003340:	d111      	bne.n	8003366 <HAL_RCC_OscConfig+0xe16>
 8003342:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8003346:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 800334a:	1d3b      	adds	r3, r7, #4
 800334c:	681b      	ldr	r3, [r3, #0]
 800334e:	6a1b      	ldr	r3, [r3, #32]
 8003350:	429a      	cmp	r2, r3
 8003352:	d108      	bne.n	8003366 <HAL_RCC_OscConfig+0xe16>
 8003354:	f8d7 31f8 	ldr.w	r3, [r7, #504]	; 0x1f8
 8003358:	f003 020f 	and.w	r2, r3, #15
 800335c:	1d3b      	adds	r3, r7, #4
 800335e:	681b      	ldr	r3, [r3, #0]
 8003360:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003362:	429a      	cmp	r2, r3
 8003364:	d001      	beq.n	800336a <HAL_RCC_OscConfig+0xe1a>
 8003366:	2301      	movs	r3, #1
 8003368:	e000      	b.n	800336c <HAL_RCC_OscConfig+0xe1c>
 800336a:	2300      	movs	r3, #0
 800336c:	4618      	mov	r0, r3
 800336e:	f507 7702 	add.w	r7, r7, #520	; 0x208
 8003372:	46bd      	mov	sp, r7
 8003374:	bd80      	pop	{r7, pc}
 8003376:	bf00      	nop
 8003378:	40021000 	.word	0x40021000

0800337c <HAL_RCC_ClockConfig>:
 800337c:	b580      	push	{r7, lr}
 800337e:	b09e      	sub	sp, #120	; 0x78
 8003380:	af00      	add	r7, sp, #0
 8003382:	6078      	str	r0, [r7, #4]
 8003384:	6039      	str	r1, [r7, #0]
 8003386:	2300      	movs	r3, #0
 8003388:	677b      	str	r3, [r7, #116]	; 0x74
 800338a:	687b      	ldr	r3, [r7, #4]
 800338c:	2b00      	cmp	r3, #0
 800338e:	d101      	bne.n	8003394 <HAL_RCC_ClockConfig+0x18>
 8003390:	2301      	movs	r3, #1
 8003392:	e162      	b.n	800365a <HAL_RCC_ClockConfig+0x2de>
 8003394:	4b90      	ldr	r3, [pc, #576]	; (80035d8 <HAL_RCC_ClockConfig+0x25c>)
 8003396:	681b      	ldr	r3, [r3, #0]
 8003398:	f003 0307 	and.w	r3, r3, #7
 800339c:	683a      	ldr	r2, [r7, #0]
 800339e:	429a      	cmp	r2, r3
 80033a0:	d910      	bls.n	80033c4 <HAL_RCC_ClockConfig+0x48>
 80033a2:	4b8d      	ldr	r3, [pc, #564]	; (80035d8 <HAL_RCC_ClockConfig+0x25c>)
 80033a4:	681b      	ldr	r3, [r3, #0]
 80033a6:	f023 0207 	bic.w	r2, r3, #7
 80033aa:	498b      	ldr	r1, [pc, #556]	; (80035d8 <HAL_RCC_ClockConfig+0x25c>)
 80033ac:	683b      	ldr	r3, [r7, #0]
 80033ae:	4313      	orrs	r3, r2
 80033b0:	600b      	str	r3, [r1, #0]
 80033b2:	4b89      	ldr	r3, [pc, #548]	; (80035d8 <HAL_RCC_ClockConfig+0x25c>)
 80033b4:	681b      	ldr	r3, [r3, #0]
 80033b6:	f003 0307 	and.w	r3, r3, #7
 80033ba:	683a      	ldr	r2, [r7, #0]
 80033bc:	429a      	cmp	r2, r3
 80033be:	d001      	beq.n	80033c4 <HAL_RCC_ClockConfig+0x48>
 80033c0:	2301      	movs	r3, #1
 80033c2:	e14a      	b.n	800365a <HAL_RCC_ClockConfig+0x2de>
 80033c4:	687b      	ldr	r3, [r7, #4]
 80033c6:	681b      	ldr	r3, [r3, #0]
 80033c8:	f003 0302 	and.w	r3, r3, #2
 80033cc:	2b00      	cmp	r3, #0
 80033ce:	d008      	beq.n	80033e2 <HAL_RCC_ClockConfig+0x66>
 80033d0:	4b82      	ldr	r3, [pc, #520]	; (80035dc <HAL_RCC_ClockConfig+0x260>)
 80033d2:	685b      	ldr	r3, [r3, #4]
 80033d4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80033d8:	687b      	ldr	r3, [r7, #4]
 80033da:	689b      	ldr	r3, [r3, #8]
 80033dc:	497f      	ldr	r1, [pc, #508]	; (80035dc <HAL_RCC_ClockConfig+0x260>)
 80033de:	4313      	orrs	r3, r2
 80033e0:	604b      	str	r3, [r1, #4]
 80033e2:	687b      	ldr	r3, [r7, #4]
 80033e4:	681b      	ldr	r3, [r3, #0]
 80033e6:	f003 0301 	and.w	r3, r3, #1
 80033ea:	2b00      	cmp	r3, #0
 80033ec:	f000 80dc 	beq.w	80035a8 <HAL_RCC_ClockConfig+0x22c>
 80033f0:	687b      	ldr	r3, [r7, #4]
 80033f2:	685b      	ldr	r3, [r3, #4]
 80033f4:	2b01      	cmp	r3, #1
 80033f6:	d13c      	bne.n	8003472 <HAL_RCC_ClockConfig+0xf6>
 80033f8:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80033fc:	673b      	str	r3, [r7, #112]	; 0x70
 80033fe:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8003400:	fa93 f3a3 	rbit	r3, r3
 8003404:	66fb      	str	r3, [r7, #108]	; 0x6c
 8003406:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8003408:	fab3 f383 	clz	r3, r3
 800340c:	b2db      	uxtb	r3, r3
 800340e:	095b      	lsrs	r3, r3, #5
 8003410:	b2db      	uxtb	r3, r3
 8003412:	f043 0301 	orr.w	r3, r3, #1
 8003416:	b2db      	uxtb	r3, r3
 8003418:	2b01      	cmp	r3, #1
 800341a:	d102      	bne.n	8003422 <HAL_RCC_ClockConfig+0xa6>
 800341c:	4b6f      	ldr	r3, [pc, #444]	; (80035dc <HAL_RCC_ClockConfig+0x260>)
 800341e:	681b      	ldr	r3, [r3, #0]
 8003420:	e00f      	b.n	8003442 <HAL_RCC_ClockConfig+0xc6>
 8003422:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8003426:	66bb      	str	r3, [r7, #104]	; 0x68
 8003428:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800342a:	fa93 f3a3 	rbit	r3, r3
 800342e:	667b      	str	r3, [r7, #100]	; 0x64
 8003430:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8003434:	663b      	str	r3, [r7, #96]	; 0x60
 8003436:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8003438:	fa93 f3a3 	rbit	r3, r3
 800343c:	65fb      	str	r3, [r7, #92]	; 0x5c
 800343e:	4b67      	ldr	r3, [pc, #412]	; (80035dc <HAL_RCC_ClockConfig+0x260>)
 8003440:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003442:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8003446:	65ba      	str	r2, [r7, #88]	; 0x58
 8003448:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800344a:	fa92 f2a2 	rbit	r2, r2
 800344e:	657a      	str	r2, [r7, #84]	; 0x54
 8003450:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8003452:	fab2 f282 	clz	r2, r2
 8003456:	b2d2      	uxtb	r2, r2
 8003458:	f042 0220 	orr.w	r2, r2, #32
 800345c:	b2d2      	uxtb	r2, r2
 800345e:	f002 021f 	and.w	r2, r2, #31
 8003462:	2101      	movs	r1, #1
 8003464:	fa01 f202 	lsl.w	r2, r1, r2
 8003468:	4013      	ands	r3, r2
 800346a:	2b00      	cmp	r3, #0
 800346c:	d17b      	bne.n	8003566 <HAL_RCC_ClockConfig+0x1ea>
 800346e:	2301      	movs	r3, #1
 8003470:	e0f3      	b.n	800365a <HAL_RCC_ClockConfig+0x2de>
 8003472:	687b      	ldr	r3, [r7, #4]
 8003474:	685b      	ldr	r3, [r3, #4]
 8003476:	2b02      	cmp	r3, #2
 8003478:	d13c      	bne.n	80034f4 <HAL_RCC_ClockConfig+0x178>
 800347a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800347e:	653b      	str	r3, [r7, #80]	; 0x50
 8003480:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003482:	fa93 f3a3 	rbit	r3, r3
 8003486:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003488:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800348a:	fab3 f383 	clz	r3, r3
 800348e:	b2db      	uxtb	r3, r3
 8003490:	095b      	lsrs	r3, r3, #5
 8003492:	b2db      	uxtb	r3, r3
 8003494:	f043 0301 	orr.w	r3, r3, #1
 8003498:	b2db      	uxtb	r3, r3
 800349a:	2b01      	cmp	r3, #1
 800349c:	d102      	bne.n	80034a4 <HAL_RCC_ClockConfig+0x128>
 800349e:	4b4f      	ldr	r3, [pc, #316]	; (80035dc <HAL_RCC_ClockConfig+0x260>)
 80034a0:	681b      	ldr	r3, [r3, #0]
 80034a2:	e00f      	b.n	80034c4 <HAL_RCC_ClockConfig+0x148>
 80034a4:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80034a8:	64bb      	str	r3, [r7, #72]	; 0x48
 80034aa:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80034ac:	fa93 f3a3 	rbit	r3, r3
 80034b0:	647b      	str	r3, [r7, #68]	; 0x44
 80034b2:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80034b6:	643b      	str	r3, [r7, #64]	; 0x40
 80034b8:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80034ba:	fa93 f3a3 	rbit	r3, r3
 80034be:	63fb      	str	r3, [r7, #60]	; 0x3c
 80034c0:	4b46      	ldr	r3, [pc, #280]	; (80035dc <HAL_RCC_ClockConfig+0x260>)
 80034c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80034c4:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 80034c8:	63ba      	str	r2, [r7, #56]	; 0x38
 80034ca:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80034cc:	fa92 f2a2 	rbit	r2, r2
 80034d0:	637a      	str	r2, [r7, #52]	; 0x34
 80034d2:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80034d4:	fab2 f282 	clz	r2, r2
 80034d8:	b2d2      	uxtb	r2, r2
 80034da:	f042 0220 	orr.w	r2, r2, #32
 80034de:	b2d2      	uxtb	r2, r2
 80034e0:	f002 021f 	and.w	r2, r2, #31
 80034e4:	2101      	movs	r1, #1
 80034e6:	fa01 f202 	lsl.w	r2, r1, r2
 80034ea:	4013      	ands	r3, r2
 80034ec:	2b00      	cmp	r3, #0
 80034ee:	d13a      	bne.n	8003566 <HAL_RCC_ClockConfig+0x1ea>
 80034f0:	2301      	movs	r3, #1
 80034f2:	e0b2      	b.n	800365a <HAL_RCC_ClockConfig+0x2de>
 80034f4:	2302      	movs	r3, #2
 80034f6:	633b      	str	r3, [r7, #48]	; 0x30
 80034f8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80034fa:	fa93 f3a3 	rbit	r3, r3
 80034fe:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003500:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003502:	fab3 f383 	clz	r3, r3
 8003506:	b2db      	uxtb	r3, r3
 8003508:	095b      	lsrs	r3, r3, #5
 800350a:	b2db      	uxtb	r3, r3
 800350c:	f043 0301 	orr.w	r3, r3, #1
 8003510:	b2db      	uxtb	r3, r3
 8003512:	2b01      	cmp	r3, #1
 8003514:	d102      	bne.n	800351c <HAL_RCC_ClockConfig+0x1a0>
 8003516:	4b31      	ldr	r3, [pc, #196]	; (80035dc <HAL_RCC_ClockConfig+0x260>)
 8003518:	681b      	ldr	r3, [r3, #0]
 800351a:	e00d      	b.n	8003538 <HAL_RCC_ClockConfig+0x1bc>
 800351c:	2302      	movs	r3, #2
 800351e:	62bb      	str	r3, [r7, #40]	; 0x28
 8003520:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003522:	fa93 f3a3 	rbit	r3, r3
 8003526:	627b      	str	r3, [r7, #36]	; 0x24
 8003528:	2302      	movs	r3, #2
 800352a:	623b      	str	r3, [r7, #32]
 800352c:	6a3b      	ldr	r3, [r7, #32]
 800352e:	fa93 f3a3 	rbit	r3, r3
 8003532:	61fb      	str	r3, [r7, #28]
 8003534:	4b29      	ldr	r3, [pc, #164]	; (80035dc <HAL_RCC_ClockConfig+0x260>)
 8003536:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003538:	2202      	movs	r2, #2
 800353a:	61ba      	str	r2, [r7, #24]
 800353c:	69ba      	ldr	r2, [r7, #24]
 800353e:	fa92 f2a2 	rbit	r2, r2
 8003542:	617a      	str	r2, [r7, #20]
 8003544:	697a      	ldr	r2, [r7, #20]
 8003546:	fab2 f282 	clz	r2, r2
 800354a:	b2d2      	uxtb	r2, r2
 800354c:	f042 0220 	orr.w	r2, r2, #32
 8003550:	b2d2      	uxtb	r2, r2
 8003552:	f002 021f 	and.w	r2, r2, #31
 8003556:	2101      	movs	r1, #1
 8003558:	fa01 f202 	lsl.w	r2, r1, r2
 800355c:	4013      	ands	r3, r2
 800355e:	2b00      	cmp	r3, #0
 8003560:	d101      	bne.n	8003566 <HAL_RCC_ClockConfig+0x1ea>
 8003562:	2301      	movs	r3, #1
 8003564:	e079      	b.n	800365a <HAL_RCC_ClockConfig+0x2de>
 8003566:	4b1d      	ldr	r3, [pc, #116]	; (80035dc <HAL_RCC_ClockConfig+0x260>)
 8003568:	685b      	ldr	r3, [r3, #4]
 800356a:	f023 0203 	bic.w	r2, r3, #3
 800356e:	687b      	ldr	r3, [r7, #4]
 8003570:	685b      	ldr	r3, [r3, #4]
 8003572:	491a      	ldr	r1, [pc, #104]	; (80035dc <HAL_RCC_ClockConfig+0x260>)
 8003574:	4313      	orrs	r3, r2
 8003576:	604b      	str	r3, [r1, #4]
 8003578:	f7fe fb92 	bl	8001ca0 <HAL_GetTick>
 800357c:	6778      	str	r0, [r7, #116]	; 0x74
 800357e:	e00a      	b.n	8003596 <HAL_RCC_ClockConfig+0x21a>
 8003580:	f7fe fb8e 	bl	8001ca0 <HAL_GetTick>
 8003584:	4602      	mov	r2, r0
 8003586:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8003588:	1ad3      	subs	r3, r2, r3
 800358a:	f241 3288 	movw	r2, #5000	; 0x1388
 800358e:	4293      	cmp	r3, r2
 8003590:	d901      	bls.n	8003596 <HAL_RCC_ClockConfig+0x21a>
 8003592:	2303      	movs	r3, #3
 8003594:	e061      	b.n	800365a <HAL_RCC_ClockConfig+0x2de>
 8003596:	4b11      	ldr	r3, [pc, #68]	; (80035dc <HAL_RCC_ClockConfig+0x260>)
 8003598:	685b      	ldr	r3, [r3, #4]
 800359a:	f003 020c 	and.w	r2, r3, #12
 800359e:	687b      	ldr	r3, [r7, #4]
 80035a0:	685b      	ldr	r3, [r3, #4]
 80035a2:	009b      	lsls	r3, r3, #2
 80035a4:	429a      	cmp	r2, r3
 80035a6:	d1eb      	bne.n	8003580 <HAL_RCC_ClockConfig+0x204>
 80035a8:	4b0b      	ldr	r3, [pc, #44]	; (80035d8 <HAL_RCC_ClockConfig+0x25c>)
 80035aa:	681b      	ldr	r3, [r3, #0]
 80035ac:	f003 0307 	and.w	r3, r3, #7
 80035b0:	683a      	ldr	r2, [r7, #0]
 80035b2:	429a      	cmp	r2, r3
 80035b4:	d214      	bcs.n	80035e0 <HAL_RCC_ClockConfig+0x264>
 80035b6:	4b08      	ldr	r3, [pc, #32]	; (80035d8 <HAL_RCC_ClockConfig+0x25c>)
 80035b8:	681b      	ldr	r3, [r3, #0]
 80035ba:	f023 0207 	bic.w	r2, r3, #7
 80035be:	4906      	ldr	r1, [pc, #24]	; (80035d8 <HAL_RCC_ClockConfig+0x25c>)
 80035c0:	683b      	ldr	r3, [r7, #0]
 80035c2:	4313      	orrs	r3, r2
 80035c4:	600b      	str	r3, [r1, #0]
 80035c6:	4b04      	ldr	r3, [pc, #16]	; (80035d8 <HAL_RCC_ClockConfig+0x25c>)
 80035c8:	681b      	ldr	r3, [r3, #0]
 80035ca:	f003 0307 	and.w	r3, r3, #7
 80035ce:	683a      	ldr	r2, [r7, #0]
 80035d0:	429a      	cmp	r2, r3
 80035d2:	d005      	beq.n	80035e0 <HAL_RCC_ClockConfig+0x264>
 80035d4:	2301      	movs	r3, #1
 80035d6:	e040      	b.n	800365a <HAL_RCC_ClockConfig+0x2de>
 80035d8:	40022000 	.word	0x40022000
 80035dc:	40021000 	.word	0x40021000
 80035e0:	687b      	ldr	r3, [r7, #4]
 80035e2:	681b      	ldr	r3, [r3, #0]
 80035e4:	f003 0304 	and.w	r3, r3, #4
 80035e8:	2b00      	cmp	r3, #0
 80035ea:	d008      	beq.n	80035fe <HAL_RCC_ClockConfig+0x282>
 80035ec:	4b1d      	ldr	r3, [pc, #116]	; (8003664 <HAL_RCC_ClockConfig+0x2e8>)
 80035ee:	685b      	ldr	r3, [r3, #4]
 80035f0:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80035f4:	687b      	ldr	r3, [r7, #4]
 80035f6:	68db      	ldr	r3, [r3, #12]
 80035f8:	491a      	ldr	r1, [pc, #104]	; (8003664 <HAL_RCC_ClockConfig+0x2e8>)
 80035fa:	4313      	orrs	r3, r2
 80035fc:	604b      	str	r3, [r1, #4]
 80035fe:	687b      	ldr	r3, [r7, #4]
 8003600:	681b      	ldr	r3, [r3, #0]
 8003602:	f003 0308 	and.w	r3, r3, #8
 8003606:	2b00      	cmp	r3, #0
 8003608:	d009      	beq.n	800361e <HAL_RCC_ClockConfig+0x2a2>
 800360a:	4b16      	ldr	r3, [pc, #88]	; (8003664 <HAL_RCC_ClockConfig+0x2e8>)
 800360c:	685b      	ldr	r3, [r3, #4]
 800360e:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8003612:	687b      	ldr	r3, [r7, #4]
 8003614:	691b      	ldr	r3, [r3, #16]
 8003616:	00db      	lsls	r3, r3, #3
 8003618:	4912      	ldr	r1, [pc, #72]	; (8003664 <HAL_RCC_ClockConfig+0x2e8>)
 800361a:	4313      	orrs	r3, r2
 800361c:	604b      	str	r3, [r1, #4]
 800361e:	f000 f829 	bl	8003674 <HAL_RCC_GetSysClockFreq>
 8003622:	4601      	mov	r1, r0
 8003624:	4b0f      	ldr	r3, [pc, #60]	; (8003664 <HAL_RCC_ClockConfig+0x2e8>)
 8003626:	685b      	ldr	r3, [r3, #4]
 8003628:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800362c:	22f0      	movs	r2, #240	; 0xf0
 800362e:	613a      	str	r2, [r7, #16]
 8003630:	693a      	ldr	r2, [r7, #16]
 8003632:	fa92 f2a2 	rbit	r2, r2
 8003636:	60fa      	str	r2, [r7, #12]
 8003638:	68fa      	ldr	r2, [r7, #12]
 800363a:	fab2 f282 	clz	r2, r2
 800363e:	b2d2      	uxtb	r2, r2
 8003640:	40d3      	lsrs	r3, r2
 8003642:	4a09      	ldr	r2, [pc, #36]	; (8003668 <HAL_RCC_ClockConfig+0x2ec>)
 8003644:	5cd3      	ldrb	r3, [r2, r3]
 8003646:	fa21 f303 	lsr.w	r3, r1, r3
 800364a:	4a08      	ldr	r2, [pc, #32]	; (800366c <HAL_RCC_ClockConfig+0x2f0>)
 800364c:	6013      	str	r3, [r2, #0]
 800364e:	4b08      	ldr	r3, [pc, #32]	; (8003670 <HAL_RCC_ClockConfig+0x2f4>)
 8003650:	681b      	ldr	r3, [r3, #0]
 8003652:	4618      	mov	r0, r3
 8003654:	f7fe fae0 	bl	8001c18 <HAL_InitTick>
 8003658:	2300      	movs	r3, #0
 800365a:	4618      	mov	r0, r3
 800365c:	3778      	adds	r7, #120	; 0x78
 800365e:	46bd      	mov	sp, r7
 8003660:	bd80      	pop	{r7, pc}
 8003662:	bf00      	nop
 8003664:	40021000 	.word	0x40021000
 8003668:	080066e4 	.word	0x080066e4
 800366c:	20000000 	.word	0x20000000
 8003670:	20000004 	.word	0x20000004

08003674 <HAL_RCC_GetSysClockFreq>:
 8003674:	b480      	push	{r7}
 8003676:	b08b      	sub	sp, #44	; 0x2c
 8003678:	af00      	add	r7, sp, #0
 800367a:	2300      	movs	r3, #0
 800367c:	61fb      	str	r3, [r7, #28]
 800367e:	2300      	movs	r3, #0
 8003680:	61bb      	str	r3, [r7, #24]
 8003682:	2300      	movs	r3, #0
 8003684:	627b      	str	r3, [r7, #36]	; 0x24
 8003686:	2300      	movs	r3, #0
 8003688:	617b      	str	r3, [r7, #20]
 800368a:	2300      	movs	r3, #0
 800368c:	623b      	str	r3, [r7, #32]
 800368e:	4b2a      	ldr	r3, [pc, #168]	; (8003738 <HAL_RCC_GetSysClockFreq+0xc4>)
 8003690:	685b      	ldr	r3, [r3, #4]
 8003692:	61fb      	str	r3, [r7, #28]
 8003694:	69fb      	ldr	r3, [r7, #28]
 8003696:	f003 030c 	and.w	r3, r3, #12
 800369a:	2b04      	cmp	r3, #4
 800369c:	d002      	beq.n	80036a4 <HAL_RCC_GetSysClockFreq+0x30>
 800369e:	2b08      	cmp	r3, #8
 80036a0:	d003      	beq.n	80036aa <HAL_RCC_GetSysClockFreq+0x36>
 80036a2:	e03f      	b.n	8003724 <HAL_RCC_GetSysClockFreq+0xb0>
 80036a4:	4b25      	ldr	r3, [pc, #148]	; (800373c <HAL_RCC_GetSysClockFreq+0xc8>)
 80036a6:	623b      	str	r3, [r7, #32]
 80036a8:	e03f      	b.n	800372a <HAL_RCC_GetSysClockFreq+0xb6>
 80036aa:	69fb      	ldr	r3, [r7, #28]
 80036ac:	f403 1370 	and.w	r3, r3, #3932160	; 0x3c0000
 80036b0:	f44f 1270 	mov.w	r2, #3932160	; 0x3c0000
 80036b4:	60ba      	str	r2, [r7, #8]
 80036b6:	68ba      	ldr	r2, [r7, #8]
 80036b8:	fa92 f2a2 	rbit	r2, r2
 80036bc:	607a      	str	r2, [r7, #4]
 80036be:	687a      	ldr	r2, [r7, #4]
 80036c0:	fab2 f282 	clz	r2, r2
 80036c4:	b2d2      	uxtb	r2, r2
 80036c6:	40d3      	lsrs	r3, r2
 80036c8:	4a1d      	ldr	r2, [pc, #116]	; (8003740 <HAL_RCC_GetSysClockFreq+0xcc>)
 80036ca:	5cd3      	ldrb	r3, [r2, r3]
 80036cc:	617b      	str	r3, [r7, #20]
 80036ce:	4b1a      	ldr	r3, [pc, #104]	; (8003738 <HAL_RCC_GetSysClockFreq+0xc4>)
 80036d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80036d2:	f003 030f 	and.w	r3, r3, #15
 80036d6:	220f      	movs	r2, #15
 80036d8:	613a      	str	r2, [r7, #16]
 80036da:	693a      	ldr	r2, [r7, #16]
 80036dc:	fa92 f2a2 	rbit	r2, r2
 80036e0:	60fa      	str	r2, [r7, #12]
 80036e2:	68fa      	ldr	r2, [r7, #12]
 80036e4:	fab2 f282 	clz	r2, r2
 80036e8:	b2d2      	uxtb	r2, r2
 80036ea:	40d3      	lsrs	r3, r2
 80036ec:	4a15      	ldr	r2, [pc, #84]	; (8003744 <HAL_RCC_GetSysClockFreq+0xd0>)
 80036ee:	5cd3      	ldrb	r3, [r2, r3]
 80036f0:	61bb      	str	r3, [r7, #24]
 80036f2:	69fb      	ldr	r3, [r7, #28]
 80036f4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80036f8:	2b00      	cmp	r3, #0
 80036fa:	d008      	beq.n	800370e <HAL_RCC_GetSysClockFreq+0x9a>
 80036fc:	4a0f      	ldr	r2, [pc, #60]	; (800373c <HAL_RCC_GetSysClockFreq+0xc8>)
 80036fe:	69bb      	ldr	r3, [r7, #24]
 8003700:	fbb2 f2f3 	udiv	r2, r2, r3
 8003704:	697b      	ldr	r3, [r7, #20]
 8003706:	fb02 f303 	mul.w	r3, r2, r3
 800370a:	627b      	str	r3, [r7, #36]	; 0x24
 800370c:	e007      	b.n	800371e <HAL_RCC_GetSysClockFreq+0xaa>
 800370e:	4a0b      	ldr	r2, [pc, #44]	; (800373c <HAL_RCC_GetSysClockFreq+0xc8>)
 8003710:	69bb      	ldr	r3, [r7, #24]
 8003712:	fbb2 f2f3 	udiv	r2, r2, r3
 8003716:	697b      	ldr	r3, [r7, #20]
 8003718:	fb02 f303 	mul.w	r3, r2, r3
 800371c:	627b      	str	r3, [r7, #36]	; 0x24
 800371e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003720:	623b      	str	r3, [r7, #32]
 8003722:	e002      	b.n	800372a <HAL_RCC_GetSysClockFreq+0xb6>
 8003724:	4b05      	ldr	r3, [pc, #20]	; (800373c <HAL_RCC_GetSysClockFreq+0xc8>)
 8003726:	623b      	str	r3, [r7, #32]
 8003728:	bf00      	nop
 800372a:	6a3b      	ldr	r3, [r7, #32]
 800372c:	4618      	mov	r0, r3
 800372e:	372c      	adds	r7, #44	; 0x2c
 8003730:	46bd      	mov	sp, r7
 8003732:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003736:	4770      	bx	lr
 8003738:	40021000 	.word	0x40021000
 800373c:	007a1200 	.word	0x007a1200
 8003740:	080066fc 	.word	0x080066fc
 8003744:	0800670c 	.word	0x0800670c

08003748 <HAL_RCC_GetHCLKFreq>:
 8003748:	b480      	push	{r7}
 800374a:	af00      	add	r7, sp, #0
 800374c:	4b03      	ldr	r3, [pc, #12]	; (800375c <HAL_RCC_GetHCLKFreq+0x14>)
 800374e:	681b      	ldr	r3, [r3, #0]
 8003750:	4618      	mov	r0, r3
 8003752:	46bd      	mov	sp, r7
 8003754:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003758:	4770      	bx	lr
 800375a:	bf00      	nop
 800375c:	20000000 	.word	0x20000000

08003760 <HAL_RCC_GetPCLK1Freq>:
 8003760:	b580      	push	{r7, lr}
 8003762:	b082      	sub	sp, #8
 8003764:	af00      	add	r7, sp, #0
 8003766:	f7ff ffef 	bl	8003748 <HAL_RCC_GetHCLKFreq>
 800376a:	4601      	mov	r1, r0
 800376c:	4b0b      	ldr	r3, [pc, #44]	; (800379c <HAL_RCC_GetPCLK1Freq+0x3c>)
 800376e:	685b      	ldr	r3, [r3, #4]
 8003770:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8003774:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8003778:	607a      	str	r2, [r7, #4]
 800377a:	687a      	ldr	r2, [r7, #4]
 800377c:	fa92 f2a2 	rbit	r2, r2
 8003780:	603a      	str	r2, [r7, #0]
 8003782:	683a      	ldr	r2, [r7, #0]
 8003784:	fab2 f282 	clz	r2, r2
 8003788:	b2d2      	uxtb	r2, r2
 800378a:	40d3      	lsrs	r3, r2
 800378c:	4a04      	ldr	r2, [pc, #16]	; (80037a0 <HAL_RCC_GetPCLK1Freq+0x40>)
 800378e:	5cd3      	ldrb	r3, [r2, r3]
 8003790:	fa21 f303 	lsr.w	r3, r1, r3
 8003794:	4618      	mov	r0, r3
 8003796:	3708      	adds	r7, #8
 8003798:	46bd      	mov	sp, r7
 800379a:	bd80      	pop	{r7, pc}
 800379c:	40021000 	.word	0x40021000
 80037a0:	080066f4 	.word	0x080066f4

080037a4 <HAL_RCC_GetPCLK2Freq>:
 80037a4:	b580      	push	{r7, lr}
 80037a6:	b082      	sub	sp, #8
 80037a8:	af00      	add	r7, sp, #0
 80037aa:	f7ff ffcd 	bl	8003748 <HAL_RCC_GetHCLKFreq>
 80037ae:	4601      	mov	r1, r0
 80037b0:	4b0b      	ldr	r3, [pc, #44]	; (80037e0 <HAL_RCC_GetPCLK2Freq+0x3c>)
 80037b2:	685b      	ldr	r3, [r3, #4]
 80037b4:	f403 5360 	and.w	r3, r3, #14336	; 0x3800
 80037b8:	f44f 5260 	mov.w	r2, #14336	; 0x3800
 80037bc:	607a      	str	r2, [r7, #4]
 80037be:	687a      	ldr	r2, [r7, #4]
 80037c0:	fa92 f2a2 	rbit	r2, r2
 80037c4:	603a      	str	r2, [r7, #0]
 80037c6:	683a      	ldr	r2, [r7, #0]
 80037c8:	fab2 f282 	clz	r2, r2
 80037cc:	b2d2      	uxtb	r2, r2
 80037ce:	40d3      	lsrs	r3, r2
 80037d0:	4a04      	ldr	r2, [pc, #16]	; (80037e4 <HAL_RCC_GetPCLK2Freq+0x40>)
 80037d2:	5cd3      	ldrb	r3, [r2, r3]
 80037d4:	fa21 f303 	lsr.w	r3, r1, r3
 80037d8:	4618      	mov	r0, r3
 80037da:	3708      	adds	r7, #8
 80037dc:	46bd      	mov	sp, r7
 80037de:	bd80      	pop	{r7, pc}
 80037e0:	40021000 	.word	0x40021000
 80037e4:	080066f4 	.word	0x080066f4

080037e8 <HAL_RCCEx_PeriphCLKConfig>:
 80037e8:	b580      	push	{r7, lr}
 80037ea:	b092      	sub	sp, #72	; 0x48
 80037ec:	af00      	add	r7, sp, #0
 80037ee:	6078      	str	r0, [r7, #4]
 80037f0:	2300      	movs	r3, #0
 80037f2:	643b      	str	r3, [r7, #64]	; 0x40
 80037f4:	2300      	movs	r3, #0
 80037f6:	63fb      	str	r3, [r7, #60]	; 0x3c
 80037f8:	2300      	movs	r3, #0
 80037fa:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 80037fe:	687b      	ldr	r3, [r7, #4]
 8003800:	681b      	ldr	r3, [r3, #0]
 8003802:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003806:	2b00      	cmp	r3, #0
 8003808:	f000 80d4 	beq.w	80039b4 <HAL_RCCEx_PeriphCLKConfig+0x1cc>
 800380c:	4b4e      	ldr	r3, [pc, #312]	; (8003948 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800380e:	69db      	ldr	r3, [r3, #28]
 8003810:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003814:	2b00      	cmp	r3, #0
 8003816:	d10e      	bne.n	8003836 <HAL_RCCEx_PeriphCLKConfig+0x4e>
 8003818:	4b4b      	ldr	r3, [pc, #300]	; (8003948 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800381a:	69db      	ldr	r3, [r3, #28]
 800381c:	4a4a      	ldr	r2, [pc, #296]	; (8003948 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800381e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003822:	61d3      	str	r3, [r2, #28]
 8003824:	4b48      	ldr	r3, [pc, #288]	; (8003948 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003826:	69db      	ldr	r3, [r3, #28]
 8003828:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800382c:	60bb      	str	r3, [r7, #8]
 800382e:	68bb      	ldr	r3, [r7, #8]
 8003830:	2301      	movs	r3, #1
 8003832:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 8003836:	4b45      	ldr	r3, [pc, #276]	; (800394c <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8003838:	681b      	ldr	r3, [r3, #0]
 800383a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800383e:	2b00      	cmp	r3, #0
 8003840:	d118      	bne.n	8003874 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 8003842:	4b42      	ldr	r3, [pc, #264]	; (800394c <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8003844:	681b      	ldr	r3, [r3, #0]
 8003846:	4a41      	ldr	r2, [pc, #260]	; (800394c <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8003848:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800384c:	6013      	str	r3, [r2, #0]
 800384e:	f7fe fa27 	bl	8001ca0 <HAL_GetTick>
 8003852:	6438      	str	r0, [r7, #64]	; 0x40
 8003854:	e008      	b.n	8003868 <HAL_RCCEx_PeriphCLKConfig+0x80>
 8003856:	f7fe fa23 	bl	8001ca0 <HAL_GetTick>
 800385a:	4602      	mov	r2, r0
 800385c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800385e:	1ad3      	subs	r3, r2, r3
 8003860:	2b64      	cmp	r3, #100	; 0x64
 8003862:	d901      	bls.n	8003868 <HAL_RCCEx_PeriphCLKConfig+0x80>
 8003864:	2303      	movs	r3, #3
 8003866:	e1d6      	b.n	8003c16 <HAL_RCCEx_PeriphCLKConfig+0x42e>
 8003868:	4b38      	ldr	r3, [pc, #224]	; (800394c <HAL_RCCEx_PeriphCLKConfig+0x164>)
 800386a:	681b      	ldr	r3, [r3, #0]
 800386c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003870:	2b00      	cmp	r3, #0
 8003872:	d0f0      	beq.n	8003856 <HAL_RCCEx_PeriphCLKConfig+0x6e>
 8003874:	4b34      	ldr	r3, [pc, #208]	; (8003948 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003876:	6a1b      	ldr	r3, [r3, #32]
 8003878:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800387c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800387e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003880:	2b00      	cmp	r3, #0
 8003882:	f000 8084 	beq.w	800398e <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 8003886:	687b      	ldr	r3, [r7, #4]
 8003888:	685b      	ldr	r3, [r3, #4]
 800388a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800388e:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8003890:	429a      	cmp	r2, r3
 8003892:	d07c      	beq.n	800398e <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 8003894:	4b2c      	ldr	r3, [pc, #176]	; (8003948 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003896:	6a1b      	ldr	r3, [r3, #32]
 8003898:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800389c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800389e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80038a2:	633b      	str	r3, [r7, #48]	; 0x30
 80038a4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80038a6:	fa93 f3a3 	rbit	r3, r3
 80038aa:	62fb      	str	r3, [r7, #44]	; 0x2c
 80038ac:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80038ae:	fab3 f383 	clz	r3, r3
 80038b2:	b2db      	uxtb	r3, r3
 80038b4:	461a      	mov	r2, r3
 80038b6:	4b26      	ldr	r3, [pc, #152]	; (8003950 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 80038b8:	4413      	add	r3, r2
 80038ba:	009b      	lsls	r3, r3, #2
 80038bc:	461a      	mov	r2, r3
 80038be:	2301      	movs	r3, #1
 80038c0:	6013      	str	r3, [r2, #0]
 80038c2:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80038c6:	63bb      	str	r3, [r7, #56]	; 0x38
 80038c8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80038ca:	fa93 f3a3 	rbit	r3, r3
 80038ce:	637b      	str	r3, [r7, #52]	; 0x34
 80038d0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80038d2:	fab3 f383 	clz	r3, r3
 80038d6:	b2db      	uxtb	r3, r3
 80038d8:	461a      	mov	r2, r3
 80038da:	4b1d      	ldr	r3, [pc, #116]	; (8003950 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 80038dc:	4413      	add	r3, r2
 80038de:	009b      	lsls	r3, r3, #2
 80038e0:	461a      	mov	r2, r3
 80038e2:	2300      	movs	r3, #0
 80038e4:	6013      	str	r3, [r2, #0]
 80038e6:	4a18      	ldr	r2, [pc, #96]	; (8003948 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80038e8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80038ea:	6213      	str	r3, [r2, #32]
 80038ec:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80038ee:	f003 0301 	and.w	r3, r3, #1
 80038f2:	2b00      	cmp	r3, #0
 80038f4:	d04b      	beq.n	800398e <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 80038f6:	f7fe f9d3 	bl	8001ca0 <HAL_GetTick>
 80038fa:	6438      	str	r0, [r7, #64]	; 0x40
 80038fc:	e00a      	b.n	8003914 <HAL_RCCEx_PeriphCLKConfig+0x12c>
 80038fe:	f7fe f9cf 	bl	8001ca0 <HAL_GetTick>
 8003902:	4602      	mov	r2, r0
 8003904:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8003906:	1ad3      	subs	r3, r2, r3
 8003908:	f241 3288 	movw	r2, #5000	; 0x1388
 800390c:	4293      	cmp	r3, r2
 800390e:	d901      	bls.n	8003914 <HAL_RCCEx_PeriphCLKConfig+0x12c>
 8003910:	2303      	movs	r3, #3
 8003912:	e180      	b.n	8003c16 <HAL_RCCEx_PeriphCLKConfig+0x42e>
 8003914:	2302      	movs	r3, #2
 8003916:	62bb      	str	r3, [r7, #40]	; 0x28
 8003918:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800391a:	fa93 f3a3 	rbit	r3, r3
 800391e:	627b      	str	r3, [r7, #36]	; 0x24
 8003920:	2302      	movs	r3, #2
 8003922:	623b      	str	r3, [r7, #32]
 8003924:	6a3b      	ldr	r3, [r7, #32]
 8003926:	fa93 f3a3 	rbit	r3, r3
 800392a:	61fb      	str	r3, [r7, #28]
 800392c:	69fb      	ldr	r3, [r7, #28]
 800392e:	fab3 f383 	clz	r3, r3
 8003932:	b2db      	uxtb	r3, r3
 8003934:	095b      	lsrs	r3, r3, #5
 8003936:	b2db      	uxtb	r3, r3
 8003938:	f043 0302 	orr.w	r3, r3, #2
 800393c:	b2db      	uxtb	r3, r3
 800393e:	2b02      	cmp	r3, #2
 8003940:	d108      	bne.n	8003954 <HAL_RCCEx_PeriphCLKConfig+0x16c>
 8003942:	4b01      	ldr	r3, [pc, #4]	; (8003948 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003944:	6a1b      	ldr	r3, [r3, #32]
 8003946:	e00d      	b.n	8003964 <HAL_RCCEx_PeriphCLKConfig+0x17c>
 8003948:	40021000 	.word	0x40021000
 800394c:	40007000 	.word	0x40007000
 8003950:	10908100 	.word	0x10908100
 8003954:	2302      	movs	r3, #2
 8003956:	61bb      	str	r3, [r7, #24]
 8003958:	69bb      	ldr	r3, [r7, #24]
 800395a:	fa93 f3a3 	rbit	r3, r3
 800395e:	617b      	str	r3, [r7, #20]
 8003960:	4ba0      	ldr	r3, [pc, #640]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003962:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003964:	2202      	movs	r2, #2
 8003966:	613a      	str	r2, [r7, #16]
 8003968:	693a      	ldr	r2, [r7, #16]
 800396a:	fa92 f2a2 	rbit	r2, r2
 800396e:	60fa      	str	r2, [r7, #12]
 8003970:	68fa      	ldr	r2, [r7, #12]
 8003972:	fab2 f282 	clz	r2, r2
 8003976:	b2d2      	uxtb	r2, r2
 8003978:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800397c:	b2d2      	uxtb	r2, r2
 800397e:	f002 021f 	and.w	r2, r2, #31
 8003982:	2101      	movs	r1, #1
 8003984:	fa01 f202 	lsl.w	r2, r1, r2
 8003988:	4013      	ands	r3, r2
 800398a:	2b00      	cmp	r3, #0
 800398c:	d0b7      	beq.n	80038fe <HAL_RCCEx_PeriphCLKConfig+0x116>
 800398e:	4b95      	ldr	r3, [pc, #596]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003990:	6a1b      	ldr	r3, [r3, #32]
 8003992:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8003996:	687b      	ldr	r3, [r7, #4]
 8003998:	685b      	ldr	r3, [r3, #4]
 800399a:	4992      	ldr	r1, [pc, #584]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 800399c:	4313      	orrs	r3, r2
 800399e:	620b      	str	r3, [r1, #32]
 80039a0:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 80039a4:	2b01      	cmp	r3, #1
 80039a6:	d105      	bne.n	80039b4 <HAL_RCCEx_PeriphCLKConfig+0x1cc>
 80039a8:	4b8e      	ldr	r3, [pc, #568]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 80039aa:	69db      	ldr	r3, [r3, #28]
 80039ac:	4a8d      	ldr	r2, [pc, #564]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 80039ae:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80039b2:	61d3      	str	r3, [r2, #28]
 80039b4:	687b      	ldr	r3, [r7, #4]
 80039b6:	681b      	ldr	r3, [r3, #0]
 80039b8:	f003 0301 	and.w	r3, r3, #1
 80039bc:	2b00      	cmp	r3, #0
 80039be:	d008      	beq.n	80039d2 <HAL_RCCEx_PeriphCLKConfig+0x1ea>
 80039c0:	4b88      	ldr	r3, [pc, #544]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 80039c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80039c4:	f023 0203 	bic.w	r2, r3, #3
 80039c8:	687b      	ldr	r3, [r7, #4]
 80039ca:	689b      	ldr	r3, [r3, #8]
 80039cc:	4985      	ldr	r1, [pc, #532]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 80039ce:	4313      	orrs	r3, r2
 80039d0:	630b      	str	r3, [r1, #48]	; 0x30
 80039d2:	687b      	ldr	r3, [r7, #4]
 80039d4:	681b      	ldr	r3, [r3, #0]
 80039d6:	f003 0302 	and.w	r3, r3, #2
 80039da:	2b00      	cmp	r3, #0
 80039dc:	d008      	beq.n	80039f0 <HAL_RCCEx_PeriphCLKConfig+0x208>
 80039de:	4b81      	ldr	r3, [pc, #516]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 80039e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80039e2:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 80039e6:	687b      	ldr	r3, [r7, #4]
 80039e8:	68db      	ldr	r3, [r3, #12]
 80039ea:	497e      	ldr	r1, [pc, #504]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 80039ec:	4313      	orrs	r3, r2
 80039ee:	630b      	str	r3, [r1, #48]	; 0x30
 80039f0:	687b      	ldr	r3, [r7, #4]
 80039f2:	681b      	ldr	r3, [r3, #0]
 80039f4:	f003 0304 	and.w	r3, r3, #4
 80039f8:	2b00      	cmp	r3, #0
 80039fa:	d008      	beq.n	8003a0e <HAL_RCCEx_PeriphCLKConfig+0x226>
 80039fc:	4b79      	ldr	r3, [pc, #484]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 80039fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003a00:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 8003a04:	687b      	ldr	r3, [r7, #4]
 8003a06:	691b      	ldr	r3, [r3, #16]
 8003a08:	4976      	ldr	r1, [pc, #472]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003a0a:	4313      	orrs	r3, r2
 8003a0c:	630b      	str	r3, [r1, #48]	; 0x30
 8003a0e:	687b      	ldr	r3, [r7, #4]
 8003a10:	681b      	ldr	r3, [r3, #0]
 8003a12:	f003 0320 	and.w	r3, r3, #32
 8003a16:	2b00      	cmp	r3, #0
 8003a18:	d008      	beq.n	8003a2c <HAL_RCCEx_PeriphCLKConfig+0x244>
 8003a1a:	4b72      	ldr	r3, [pc, #456]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003a1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003a1e:	f023 0210 	bic.w	r2, r3, #16
 8003a22:	687b      	ldr	r3, [r7, #4]
 8003a24:	69db      	ldr	r3, [r3, #28]
 8003a26:	496f      	ldr	r1, [pc, #444]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003a28:	4313      	orrs	r3, r2
 8003a2a:	630b      	str	r3, [r1, #48]	; 0x30
 8003a2c:	687b      	ldr	r3, [r7, #4]
 8003a2e:	681b      	ldr	r3, [r3, #0]
 8003a30:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003a34:	2b00      	cmp	r3, #0
 8003a36:	d008      	beq.n	8003a4a <HAL_RCCEx_PeriphCLKConfig+0x262>
 8003a38:	4b6a      	ldr	r3, [pc, #424]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003a3a:	685b      	ldr	r3, [r3, #4]
 8003a3c:	f423 0280 	bic.w	r2, r3, #4194304	; 0x400000
 8003a40:	687b      	ldr	r3, [r7, #4]
 8003a42:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003a44:	4967      	ldr	r1, [pc, #412]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003a46:	4313      	orrs	r3, r2
 8003a48:	604b      	str	r3, [r1, #4]
 8003a4a:	687b      	ldr	r3, [r7, #4]
 8003a4c:	681b      	ldr	r3, [r3, #0]
 8003a4e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003a52:	2b00      	cmp	r3, #0
 8003a54:	d008      	beq.n	8003a68 <HAL_RCCEx_PeriphCLKConfig+0x280>
 8003a56:	4b63      	ldr	r3, [pc, #396]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003a58:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003a5a:	f023 0220 	bic.w	r2, r3, #32
 8003a5e:	687b      	ldr	r3, [r7, #4]
 8003a60:	6a1b      	ldr	r3, [r3, #32]
 8003a62:	4960      	ldr	r1, [pc, #384]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003a64:	4313      	orrs	r3, r2
 8003a66:	630b      	str	r3, [r1, #48]	; 0x30
 8003a68:	687b      	ldr	r3, [r7, #4]
 8003a6a:	681b      	ldr	r3, [r3, #0]
 8003a6c:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003a70:	2b00      	cmp	r3, #0
 8003a72:	d008      	beq.n	8003a86 <HAL_RCCEx_PeriphCLKConfig+0x29e>
 8003a74:	4b5b      	ldr	r3, [pc, #364]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003a76:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003a78:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 8003a7c:	687b      	ldr	r3, [r7, #4]
 8003a7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a80:	4958      	ldr	r1, [pc, #352]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003a82:	4313      	orrs	r3, r2
 8003a84:	630b      	str	r3, [r1, #48]	; 0x30
 8003a86:	687b      	ldr	r3, [r7, #4]
 8003a88:	681b      	ldr	r3, [r3, #0]
 8003a8a:	f003 0308 	and.w	r3, r3, #8
 8003a8e:	2b00      	cmp	r3, #0
 8003a90:	d008      	beq.n	8003aa4 <HAL_RCCEx_PeriphCLKConfig+0x2bc>
 8003a92:	4b54      	ldr	r3, [pc, #336]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003a94:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003a96:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8003a9a:	687b      	ldr	r3, [r7, #4]
 8003a9c:	695b      	ldr	r3, [r3, #20]
 8003a9e:	4951      	ldr	r1, [pc, #324]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003aa0:	4313      	orrs	r3, r2
 8003aa2:	630b      	str	r3, [r1, #48]	; 0x30
 8003aa4:	687b      	ldr	r3, [r7, #4]
 8003aa6:	681b      	ldr	r3, [r3, #0]
 8003aa8:	f003 0310 	and.w	r3, r3, #16
 8003aac:	2b00      	cmp	r3, #0
 8003aae:	d008      	beq.n	8003ac2 <HAL_RCCEx_PeriphCLKConfig+0x2da>
 8003ab0:	4b4c      	ldr	r3, [pc, #304]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003ab2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003ab4:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8003ab8:	687b      	ldr	r3, [r7, #4]
 8003aba:	699b      	ldr	r3, [r3, #24]
 8003abc:	4949      	ldr	r1, [pc, #292]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003abe:	4313      	orrs	r3, r2
 8003ac0:	630b      	str	r3, [r1, #48]	; 0x30
 8003ac2:	687b      	ldr	r3, [r7, #4]
 8003ac4:	681b      	ldr	r3, [r3, #0]
 8003ac6:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8003aca:	2b00      	cmp	r3, #0
 8003acc:	d008      	beq.n	8003ae0 <HAL_RCCEx_PeriphCLKConfig+0x2f8>
 8003ace:	4b45      	ldr	r3, [pc, #276]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003ad0:	685b      	ldr	r3, [r3, #4]
 8003ad2:	f423 0200 	bic.w	r2, r3, #8388608	; 0x800000
 8003ad6:	687b      	ldr	r3, [r7, #4]
 8003ad8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003ada:	4942      	ldr	r1, [pc, #264]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003adc:	4313      	orrs	r3, r2
 8003ade:	604b      	str	r3, [r1, #4]
 8003ae0:	687b      	ldr	r3, [r7, #4]
 8003ae2:	681b      	ldr	r3, [r3, #0]
 8003ae4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003ae8:	2b00      	cmp	r3, #0
 8003aea:	d008      	beq.n	8003afe <HAL_RCCEx_PeriphCLKConfig+0x316>
 8003aec:	4b3d      	ldr	r3, [pc, #244]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003aee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003af0:	f423 72f8 	bic.w	r2, r3, #496	; 0x1f0
 8003af4:	687b      	ldr	r3, [r7, #4]
 8003af6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003af8:	493a      	ldr	r1, [pc, #232]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003afa:	4313      	orrs	r3, r2
 8003afc:	62cb      	str	r3, [r1, #44]	; 0x2c
 8003afe:	687b      	ldr	r3, [r7, #4]
 8003b00:	681b      	ldr	r3, [r3, #0]
 8003b02:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003b06:	2b00      	cmp	r3, #0
 8003b08:	d008      	beq.n	8003b1c <HAL_RCCEx_PeriphCLKConfig+0x334>
 8003b0a:	4b36      	ldr	r3, [pc, #216]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003b0c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003b0e:	f423 5278 	bic.w	r2, r3, #15872	; 0x3e00
 8003b12:	687b      	ldr	r3, [r7, #4]
 8003b14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003b16:	4933      	ldr	r1, [pc, #204]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003b18:	4313      	orrs	r3, r2
 8003b1a:	62cb      	str	r3, [r1, #44]	; 0x2c
 8003b1c:	687b      	ldr	r3, [r7, #4]
 8003b1e:	681b      	ldr	r3, [r3, #0]
 8003b20:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8003b24:	2b00      	cmp	r3, #0
 8003b26:	d008      	beq.n	8003b3a <HAL_RCCEx_PeriphCLKConfig+0x352>
 8003b28:	4b2e      	ldr	r3, [pc, #184]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003b2a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003b2c:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8003b30:	687b      	ldr	r3, [r7, #4]
 8003b32:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003b34:	492b      	ldr	r1, [pc, #172]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003b36:	4313      	orrs	r3, r2
 8003b38:	630b      	str	r3, [r1, #48]	; 0x30
 8003b3a:	687b      	ldr	r3, [r7, #4]
 8003b3c:	681b      	ldr	r3, [r3, #0]
 8003b3e:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8003b42:	2b00      	cmp	r3, #0
 8003b44:	d008      	beq.n	8003b58 <HAL_RCCEx_PeriphCLKConfig+0x370>
 8003b46:	4b27      	ldr	r3, [pc, #156]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003b48:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003b4a:	f423 7200 	bic.w	r2, r3, #512	; 0x200
 8003b4e:	687b      	ldr	r3, [r7, #4]
 8003b50:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b52:	4924      	ldr	r1, [pc, #144]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003b54:	4313      	orrs	r3, r2
 8003b56:	630b      	str	r3, [r1, #48]	; 0x30
 8003b58:	687b      	ldr	r3, [r7, #4]
 8003b5a:	681b      	ldr	r3, [r3, #0]
 8003b5c:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8003b60:	2b00      	cmp	r3, #0
 8003b62:	d008      	beq.n	8003b76 <HAL_RCCEx_PeriphCLKConfig+0x38e>
 8003b64:	4b1f      	ldr	r3, [pc, #124]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003b66:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003b68:	f023 7280 	bic.w	r2, r3, #16777216	; 0x1000000
 8003b6c:	687b      	ldr	r3, [r7, #4]
 8003b6e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003b70:	491c      	ldr	r1, [pc, #112]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003b72:	4313      	orrs	r3, r2
 8003b74:	630b      	str	r3, [r1, #48]	; 0x30
 8003b76:	687b      	ldr	r3, [r7, #4]
 8003b78:	681b      	ldr	r3, [r3, #0]
 8003b7a:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003b7e:	2b00      	cmp	r3, #0
 8003b80:	d008      	beq.n	8003b94 <HAL_RCCEx_PeriphCLKConfig+0x3ac>
 8003b82:	4b18      	ldr	r3, [pc, #96]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003b84:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003b86:	f023 7200 	bic.w	r2, r3, #33554432	; 0x2000000
 8003b8a:	687b      	ldr	r3, [r7, #4]
 8003b8c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003b8e:	4915      	ldr	r1, [pc, #84]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003b90:	4313      	orrs	r3, r2
 8003b92:	630b      	str	r3, [r1, #48]	; 0x30
 8003b94:	687b      	ldr	r3, [r7, #4]
 8003b96:	681b      	ldr	r3, [r3, #0]
 8003b98:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8003b9c:	2b00      	cmp	r3, #0
 8003b9e:	d008      	beq.n	8003bb2 <HAL_RCCEx_PeriphCLKConfig+0x3ca>
 8003ba0:	4b10      	ldr	r3, [pc, #64]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003ba2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003ba4:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8003ba8:	687b      	ldr	r3, [r7, #4]
 8003baa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003bac:	490d      	ldr	r1, [pc, #52]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003bae:	4313      	orrs	r3, r2
 8003bb0:	630b      	str	r3, [r1, #48]	; 0x30
 8003bb2:	687b      	ldr	r3, [r7, #4]
 8003bb4:	681b      	ldr	r3, [r3, #0]
 8003bb6:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8003bba:	2b00      	cmp	r3, #0
 8003bbc:	d008      	beq.n	8003bd0 <HAL_RCCEx_PeriphCLKConfig+0x3e8>
 8003bbe:	4b09      	ldr	r3, [pc, #36]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003bc0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003bc2:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 8003bc6:	687b      	ldr	r3, [r7, #4]
 8003bc8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003bca:	4906      	ldr	r1, [pc, #24]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003bcc:	4313      	orrs	r3, r2
 8003bce:	630b      	str	r3, [r1, #48]	; 0x30
 8003bd0:	687b      	ldr	r3, [r7, #4]
 8003bd2:	681b      	ldr	r3, [r3, #0]
 8003bd4:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003bd8:	2b00      	cmp	r3, #0
 8003bda:	d00c      	beq.n	8003bf6 <HAL_RCCEx_PeriphCLKConfig+0x40e>
 8003bdc:	4b01      	ldr	r3, [pc, #4]	; (8003be4 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003bde:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003be0:	e002      	b.n	8003be8 <HAL_RCCEx_PeriphCLKConfig+0x400>
 8003be2:	bf00      	nop
 8003be4:	40021000 	.word	0x40021000
 8003be8:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 8003bec:	687b      	ldr	r3, [r7, #4]
 8003bee:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003bf0:	490b      	ldr	r1, [pc, #44]	; (8003c20 <HAL_RCCEx_PeriphCLKConfig+0x438>)
 8003bf2:	4313      	orrs	r3, r2
 8003bf4:	630b      	str	r3, [r1, #48]	; 0x30
 8003bf6:	687b      	ldr	r3, [r7, #4]
 8003bf8:	681b      	ldr	r3, [r3, #0]
 8003bfa:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003bfe:	2b00      	cmp	r3, #0
 8003c00:	d008      	beq.n	8003c14 <HAL_RCCEx_PeriphCLKConfig+0x42c>
 8003c02:	4b07      	ldr	r3, [pc, #28]	; (8003c20 <HAL_RCCEx_PeriphCLKConfig+0x438>)
 8003c04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003c06:	f423 4200 	bic.w	r2, r3, #32768	; 0x8000
 8003c0a:	687b      	ldr	r3, [r7, #4]
 8003c0c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8003c0e:	4904      	ldr	r1, [pc, #16]	; (8003c20 <HAL_RCCEx_PeriphCLKConfig+0x438>)
 8003c10:	4313      	orrs	r3, r2
 8003c12:	630b      	str	r3, [r1, #48]	; 0x30
 8003c14:	2300      	movs	r3, #0
 8003c16:	4618      	mov	r0, r3
 8003c18:	3748      	adds	r7, #72	; 0x48
 8003c1a:	46bd      	mov	sp, r7
 8003c1c:	bd80      	pop	{r7, pc}
 8003c1e:	bf00      	nop
 8003c20:	40021000 	.word	0x40021000

08003c24 <HAL_RTC_Init>:
 8003c24:	b580      	push	{r7, lr}
 8003c26:	b082      	sub	sp, #8
 8003c28:	af00      	add	r7, sp, #0
 8003c2a:	6078      	str	r0, [r7, #4]
 8003c2c:	687b      	ldr	r3, [r7, #4]
 8003c2e:	2b00      	cmp	r3, #0
 8003c30:	d101      	bne.n	8003c36 <HAL_RTC_Init+0x12>
 8003c32:	2301      	movs	r3, #1
 8003c34:	e083      	b.n	8003d3e <HAL_RTC_Init+0x11a>
 8003c36:	687b      	ldr	r3, [r7, #4]
 8003c38:	7f5b      	ldrb	r3, [r3, #29]
 8003c3a:	b2db      	uxtb	r3, r3
 8003c3c:	2b00      	cmp	r3, #0
 8003c3e:	d105      	bne.n	8003c4c <HAL_RTC_Init+0x28>
 8003c40:	687b      	ldr	r3, [r7, #4]
 8003c42:	2200      	movs	r2, #0
 8003c44:	771a      	strb	r2, [r3, #28]
 8003c46:	6878      	ldr	r0, [r7, #4]
 8003c48:	f7fd fde8 	bl	800181c <HAL_RTC_MspInit>
 8003c4c:	687b      	ldr	r3, [r7, #4]
 8003c4e:	2202      	movs	r2, #2
 8003c50:	775a      	strb	r2, [r3, #29]
 8003c52:	687b      	ldr	r3, [r7, #4]
 8003c54:	681b      	ldr	r3, [r3, #0]
 8003c56:	22ca      	movs	r2, #202	; 0xca
 8003c58:	625a      	str	r2, [r3, #36]	; 0x24
 8003c5a:	687b      	ldr	r3, [r7, #4]
 8003c5c:	681b      	ldr	r3, [r3, #0]
 8003c5e:	2253      	movs	r2, #83	; 0x53
 8003c60:	625a      	str	r2, [r3, #36]	; 0x24
 8003c62:	6878      	ldr	r0, [r7, #4]
 8003c64:	f000 f897 	bl	8003d96 <RTC_EnterInitMode>
 8003c68:	4603      	mov	r3, r0
 8003c6a:	2b00      	cmp	r3, #0
 8003c6c:	d008      	beq.n	8003c80 <HAL_RTC_Init+0x5c>
 8003c6e:	687b      	ldr	r3, [r7, #4]
 8003c70:	681b      	ldr	r3, [r3, #0]
 8003c72:	22ff      	movs	r2, #255	; 0xff
 8003c74:	625a      	str	r2, [r3, #36]	; 0x24
 8003c76:	687b      	ldr	r3, [r7, #4]
 8003c78:	2204      	movs	r2, #4
 8003c7a:	775a      	strb	r2, [r3, #29]
 8003c7c:	2301      	movs	r3, #1
 8003c7e:	e05e      	b.n	8003d3e <HAL_RTC_Init+0x11a>
 8003c80:	687b      	ldr	r3, [r7, #4]
 8003c82:	681b      	ldr	r3, [r3, #0]
 8003c84:	689b      	ldr	r3, [r3, #8]
 8003c86:	687a      	ldr	r2, [r7, #4]
 8003c88:	6812      	ldr	r2, [r2, #0]
 8003c8a:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8003c8e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8003c92:	6093      	str	r3, [r2, #8]
 8003c94:	687b      	ldr	r3, [r7, #4]
 8003c96:	681b      	ldr	r3, [r3, #0]
 8003c98:	6899      	ldr	r1, [r3, #8]
 8003c9a:	687b      	ldr	r3, [r7, #4]
 8003c9c:	685a      	ldr	r2, [r3, #4]
 8003c9e:	687b      	ldr	r3, [r7, #4]
 8003ca0:	691b      	ldr	r3, [r3, #16]
 8003ca2:	431a      	orrs	r2, r3
 8003ca4:	687b      	ldr	r3, [r7, #4]
 8003ca6:	695b      	ldr	r3, [r3, #20]
 8003ca8:	431a      	orrs	r2, r3
 8003caa:	687b      	ldr	r3, [r7, #4]
 8003cac:	681b      	ldr	r3, [r3, #0]
 8003cae:	430a      	orrs	r2, r1
 8003cb0:	609a      	str	r2, [r3, #8]
 8003cb2:	687b      	ldr	r3, [r7, #4]
 8003cb4:	681b      	ldr	r3, [r3, #0]
 8003cb6:	687a      	ldr	r2, [r7, #4]
 8003cb8:	68d2      	ldr	r2, [r2, #12]
 8003cba:	611a      	str	r2, [r3, #16]
 8003cbc:	687b      	ldr	r3, [r7, #4]
 8003cbe:	681b      	ldr	r3, [r3, #0]
 8003cc0:	6919      	ldr	r1, [r3, #16]
 8003cc2:	687b      	ldr	r3, [r7, #4]
 8003cc4:	689b      	ldr	r3, [r3, #8]
 8003cc6:	041a      	lsls	r2, r3, #16
 8003cc8:	687b      	ldr	r3, [r7, #4]
 8003cca:	681b      	ldr	r3, [r3, #0]
 8003ccc:	430a      	orrs	r2, r1
 8003cce:	611a      	str	r2, [r3, #16]
 8003cd0:	687b      	ldr	r3, [r7, #4]
 8003cd2:	681b      	ldr	r3, [r3, #0]
 8003cd4:	68da      	ldr	r2, [r3, #12]
 8003cd6:	687b      	ldr	r3, [r7, #4]
 8003cd8:	681b      	ldr	r3, [r3, #0]
 8003cda:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003cde:	60da      	str	r2, [r3, #12]
 8003ce0:	687b      	ldr	r3, [r7, #4]
 8003ce2:	681b      	ldr	r3, [r3, #0]
 8003ce4:	689b      	ldr	r3, [r3, #8]
 8003ce6:	f003 0320 	and.w	r3, r3, #32
 8003cea:	2b00      	cmp	r3, #0
 8003cec:	d10e      	bne.n	8003d0c <HAL_RTC_Init+0xe8>
 8003cee:	6878      	ldr	r0, [r7, #4]
 8003cf0:	f000 f829 	bl	8003d46 <HAL_RTC_WaitForSynchro>
 8003cf4:	4603      	mov	r3, r0
 8003cf6:	2b00      	cmp	r3, #0
 8003cf8:	d008      	beq.n	8003d0c <HAL_RTC_Init+0xe8>
 8003cfa:	687b      	ldr	r3, [r7, #4]
 8003cfc:	681b      	ldr	r3, [r3, #0]
 8003cfe:	22ff      	movs	r2, #255	; 0xff
 8003d00:	625a      	str	r2, [r3, #36]	; 0x24
 8003d02:	687b      	ldr	r3, [r7, #4]
 8003d04:	2204      	movs	r2, #4
 8003d06:	775a      	strb	r2, [r3, #29]
 8003d08:	2301      	movs	r3, #1
 8003d0a:	e018      	b.n	8003d3e <HAL_RTC_Init+0x11a>
 8003d0c:	687b      	ldr	r3, [r7, #4]
 8003d0e:	681b      	ldr	r3, [r3, #0]
 8003d10:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003d12:	687b      	ldr	r3, [r7, #4]
 8003d14:	681b      	ldr	r3, [r3, #0]
 8003d16:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8003d1a:	641a      	str	r2, [r3, #64]	; 0x40
 8003d1c:	687b      	ldr	r3, [r7, #4]
 8003d1e:	681b      	ldr	r3, [r3, #0]
 8003d20:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8003d22:	687b      	ldr	r3, [r7, #4]
 8003d24:	699a      	ldr	r2, [r3, #24]
 8003d26:	687b      	ldr	r3, [r7, #4]
 8003d28:	681b      	ldr	r3, [r3, #0]
 8003d2a:	430a      	orrs	r2, r1
 8003d2c:	641a      	str	r2, [r3, #64]	; 0x40
 8003d2e:	687b      	ldr	r3, [r7, #4]
 8003d30:	681b      	ldr	r3, [r3, #0]
 8003d32:	22ff      	movs	r2, #255	; 0xff
 8003d34:	625a      	str	r2, [r3, #36]	; 0x24
 8003d36:	687b      	ldr	r3, [r7, #4]
 8003d38:	2201      	movs	r2, #1
 8003d3a:	775a      	strb	r2, [r3, #29]
 8003d3c:	2300      	movs	r3, #0
 8003d3e:	4618      	mov	r0, r3
 8003d40:	3708      	adds	r7, #8
 8003d42:	46bd      	mov	sp, r7
 8003d44:	bd80      	pop	{r7, pc}

08003d46 <HAL_RTC_WaitForSynchro>:
 8003d46:	b580      	push	{r7, lr}
 8003d48:	b084      	sub	sp, #16
 8003d4a:	af00      	add	r7, sp, #0
 8003d4c:	6078      	str	r0, [r7, #4]
 8003d4e:	2300      	movs	r3, #0
 8003d50:	60fb      	str	r3, [r7, #12]
 8003d52:	687b      	ldr	r3, [r7, #4]
 8003d54:	681b      	ldr	r3, [r3, #0]
 8003d56:	68da      	ldr	r2, [r3, #12]
 8003d58:	687b      	ldr	r3, [r7, #4]
 8003d5a:	681b      	ldr	r3, [r3, #0]
 8003d5c:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 8003d60:	60da      	str	r2, [r3, #12]
 8003d62:	f7fd ff9d 	bl	8001ca0 <HAL_GetTick>
 8003d66:	60f8      	str	r0, [r7, #12]
 8003d68:	e009      	b.n	8003d7e <HAL_RTC_WaitForSynchro+0x38>
 8003d6a:	f7fd ff99 	bl	8001ca0 <HAL_GetTick>
 8003d6e:	4602      	mov	r2, r0
 8003d70:	68fb      	ldr	r3, [r7, #12]
 8003d72:	1ad3      	subs	r3, r2, r3
 8003d74:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003d78:	d901      	bls.n	8003d7e <HAL_RTC_WaitForSynchro+0x38>
 8003d7a:	2303      	movs	r3, #3
 8003d7c:	e007      	b.n	8003d8e <HAL_RTC_WaitForSynchro+0x48>
 8003d7e:	687b      	ldr	r3, [r7, #4]
 8003d80:	681b      	ldr	r3, [r3, #0]
 8003d82:	68db      	ldr	r3, [r3, #12]
 8003d84:	f003 0320 	and.w	r3, r3, #32
 8003d88:	2b00      	cmp	r3, #0
 8003d8a:	d0ee      	beq.n	8003d6a <HAL_RTC_WaitForSynchro+0x24>
 8003d8c:	2300      	movs	r3, #0
 8003d8e:	4618      	mov	r0, r3
 8003d90:	3710      	adds	r7, #16
 8003d92:	46bd      	mov	sp, r7
 8003d94:	bd80      	pop	{r7, pc}

08003d96 <RTC_EnterInitMode>:
 8003d96:	b580      	push	{r7, lr}
 8003d98:	b084      	sub	sp, #16
 8003d9a:	af00      	add	r7, sp, #0
 8003d9c:	6078      	str	r0, [r7, #4]
 8003d9e:	2300      	movs	r3, #0
 8003da0:	60fb      	str	r3, [r7, #12]
 8003da2:	687b      	ldr	r3, [r7, #4]
 8003da4:	681b      	ldr	r3, [r3, #0]
 8003da6:	68db      	ldr	r3, [r3, #12]
 8003da8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003dac:	2b00      	cmp	r3, #0
 8003dae:	d119      	bne.n	8003de4 <RTC_EnterInitMode+0x4e>
 8003db0:	687b      	ldr	r3, [r7, #4]
 8003db2:	681b      	ldr	r3, [r3, #0]
 8003db4:	f04f 32ff 	mov.w	r2, #4294967295
 8003db8:	60da      	str	r2, [r3, #12]
 8003dba:	f7fd ff71 	bl	8001ca0 <HAL_GetTick>
 8003dbe:	60f8      	str	r0, [r7, #12]
 8003dc0:	e009      	b.n	8003dd6 <RTC_EnterInitMode+0x40>
 8003dc2:	f7fd ff6d 	bl	8001ca0 <HAL_GetTick>
 8003dc6:	4602      	mov	r2, r0
 8003dc8:	68fb      	ldr	r3, [r7, #12]
 8003dca:	1ad3      	subs	r3, r2, r3
 8003dcc:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003dd0:	d901      	bls.n	8003dd6 <RTC_EnterInitMode+0x40>
 8003dd2:	2303      	movs	r3, #3
 8003dd4:	e007      	b.n	8003de6 <RTC_EnterInitMode+0x50>
 8003dd6:	687b      	ldr	r3, [r7, #4]
 8003dd8:	681b      	ldr	r3, [r3, #0]
 8003dda:	68db      	ldr	r3, [r3, #12]
 8003ddc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003de0:	2b00      	cmp	r3, #0
 8003de2:	d0ee      	beq.n	8003dc2 <RTC_EnterInitMode+0x2c>
 8003de4:	2300      	movs	r3, #0
 8003de6:	4618      	mov	r0, r3
 8003de8:	3710      	adds	r7, #16
 8003dea:	46bd      	mov	sp, r7
 8003dec:	bd80      	pop	{r7, pc}
	...

08003df0 <HAL_RTCEx_SetWakeUpTimer_IT>:
 8003df0:	b580      	push	{r7, lr}
 8003df2:	b086      	sub	sp, #24
 8003df4:	af00      	add	r7, sp, #0
 8003df6:	60f8      	str	r0, [r7, #12]
 8003df8:	60b9      	str	r1, [r7, #8]
 8003dfa:	607a      	str	r2, [r7, #4]
 8003dfc:	2300      	movs	r3, #0
 8003dfe:	617b      	str	r3, [r7, #20]
 8003e00:	68fb      	ldr	r3, [r7, #12]
 8003e02:	7f1b      	ldrb	r3, [r3, #28]
 8003e04:	2b01      	cmp	r3, #1
 8003e06:	d101      	bne.n	8003e0c <HAL_RTCEx_SetWakeUpTimer_IT+0x1c>
 8003e08:	2302      	movs	r3, #2
 8003e0a:	e09e      	b.n	8003f4a <HAL_RTCEx_SetWakeUpTimer_IT+0x15a>
 8003e0c:	68fb      	ldr	r3, [r7, #12]
 8003e0e:	2201      	movs	r2, #1
 8003e10:	771a      	strb	r2, [r3, #28]
 8003e12:	68fb      	ldr	r3, [r7, #12]
 8003e14:	2202      	movs	r2, #2
 8003e16:	775a      	strb	r2, [r3, #29]
 8003e18:	68fb      	ldr	r3, [r7, #12]
 8003e1a:	681b      	ldr	r3, [r3, #0]
 8003e1c:	22ca      	movs	r2, #202	; 0xca
 8003e1e:	625a      	str	r2, [r3, #36]	; 0x24
 8003e20:	68fb      	ldr	r3, [r7, #12]
 8003e22:	681b      	ldr	r3, [r3, #0]
 8003e24:	2253      	movs	r2, #83	; 0x53
 8003e26:	625a      	str	r2, [r3, #36]	; 0x24
 8003e28:	68fb      	ldr	r3, [r7, #12]
 8003e2a:	681b      	ldr	r3, [r3, #0]
 8003e2c:	689b      	ldr	r3, [r3, #8]
 8003e2e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003e32:	2b00      	cmp	r3, #0
 8003e34:	d01e      	beq.n	8003e74 <HAL_RTCEx_SetWakeUpTimer_IT+0x84>
 8003e36:	f7fd ff33 	bl	8001ca0 <HAL_GetTick>
 8003e3a:	6178      	str	r0, [r7, #20]
 8003e3c:	e013      	b.n	8003e66 <HAL_RTCEx_SetWakeUpTimer_IT+0x76>
 8003e3e:	f7fd ff2f 	bl	8001ca0 <HAL_GetTick>
 8003e42:	4602      	mov	r2, r0
 8003e44:	697b      	ldr	r3, [r7, #20]
 8003e46:	1ad3      	subs	r3, r2, r3
 8003e48:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003e4c:	d90b      	bls.n	8003e66 <HAL_RTCEx_SetWakeUpTimer_IT+0x76>
 8003e4e:	68fb      	ldr	r3, [r7, #12]
 8003e50:	681b      	ldr	r3, [r3, #0]
 8003e52:	22ff      	movs	r2, #255	; 0xff
 8003e54:	625a      	str	r2, [r3, #36]	; 0x24
 8003e56:	68fb      	ldr	r3, [r7, #12]
 8003e58:	2203      	movs	r2, #3
 8003e5a:	775a      	strb	r2, [r3, #29]
 8003e5c:	68fb      	ldr	r3, [r7, #12]
 8003e5e:	2200      	movs	r2, #0
 8003e60:	771a      	strb	r2, [r3, #28]
 8003e62:	2303      	movs	r3, #3
 8003e64:	e071      	b.n	8003f4a <HAL_RTCEx_SetWakeUpTimer_IT+0x15a>
 8003e66:	68fb      	ldr	r3, [r7, #12]
 8003e68:	681b      	ldr	r3, [r3, #0]
 8003e6a:	68db      	ldr	r3, [r3, #12]
 8003e6c:	f003 0304 	and.w	r3, r3, #4
 8003e70:	2b00      	cmp	r3, #0
 8003e72:	d1e4      	bne.n	8003e3e <HAL_RTCEx_SetWakeUpTimer_IT+0x4e>
 8003e74:	68fb      	ldr	r3, [r7, #12]
 8003e76:	681b      	ldr	r3, [r3, #0]
 8003e78:	689a      	ldr	r2, [r3, #8]
 8003e7a:	68fb      	ldr	r3, [r7, #12]
 8003e7c:	681b      	ldr	r3, [r3, #0]
 8003e7e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003e82:	609a      	str	r2, [r3, #8]
 8003e84:	68fb      	ldr	r3, [r7, #12]
 8003e86:	681b      	ldr	r3, [r3, #0]
 8003e88:	68db      	ldr	r3, [r3, #12]
 8003e8a:	b2da      	uxtb	r2, r3
 8003e8c:	68fb      	ldr	r3, [r7, #12]
 8003e8e:	681b      	ldr	r3, [r3, #0]
 8003e90:	f462 6290 	orn	r2, r2, #1152	; 0x480
 8003e94:	60da      	str	r2, [r3, #12]
 8003e96:	f7fd ff03 	bl	8001ca0 <HAL_GetTick>
 8003e9a:	6178      	str	r0, [r7, #20]
 8003e9c:	e013      	b.n	8003ec6 <HAL_RTCEx_SetWakeUpTimer_IT+0xd6>
 8003e9e:	f7fd feff 	bl	8001ca0 <HAL_GetTick>
 8003ea2:	4602      	mov	r2, r0
 8003ea4:	697b      	ldr	r3, [r7, #20]
 8003ea6:	1ad3      	subs	r3, r2, r3
 8003ea8:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003eac:	d90b      	bls.n	8003ec6 <HAL_RTCEx_SetWakeUpTimer_IT+0xd6>
 8003eae:	68fb      	ldr	r3, [r7, #12]
 8003eb0:	681b      	ldr	r3, [r3, #0]
 8003eb2:	22ff      	movs	r2, #255	; 0xff
 8003eb4:	625a      	str	r2, [r3, #36]	; 0x24
 8003eb6:	68fb      	ldr	r3, [r7, #12]
 8003eb8:	2203      	movs	r2, #3
 8003eba:	775a      	strb	r2, [r3, #29]
 8003ebc:	68fb      	ldr	r3, [r7, #12]
 8003ebe:	2200      	movs	r2, #0
 8003ec0:	771a      	strb	r2, [r3, #28]
 8003ec2:	2303      	movs	r3, #3
 8003ec4:	e041      	b.n	8003f4a <HAL_RTCEx_SetWakeUpTimer_IT+0x15a>
 8003ec6:	68fb      	ldr	r3, [r7, #12]
 8003ec8:	681b      	ldr	r3, [r3, #0]
 8003eca:	68db      	ldr	r3, [r3, #12]
 8003ecc:	f003 0304 	and.w	r3, r3, #4
 8003ed0:	2b00      	cmp	r3, #0
 8003ed2:	d0e4      	beq.n	8003e9e <HAL_RTCEx_SetWakeUpTimer_IT+0xae>
 8003ed4:	68fb      	ldr	r3, [r7, #12]
 8003ed6:	681b      	ldr	r3, [r3, #0]
 8003ed8:	68ba      	ldr	r2, [r7, #8]
 8003eda:	615a      	str	r2, [r3, #20]
 8003edc:	68fb      	ldr	r3, [r7, #12]
 8003ede:	681b      	ldr	r3, [r3, #0]
 8003ee0:	689a      	ldr	r2, [r3, #8]
 8003ee2:	68fb      	ldr	r3, [r7, #12]
 8003ee4:	681b      	ldr	r3, [r3, #0]
 8003ee6:	f022 0207 	bic.w	r2, r2, #7
 8003eea:	609a      	str	r2, [r3, #8]
 8003eec:	68fb      	ldr	r3, [r7, #12]
 8003eee:	681b      	ldr	r3, [r3, #0]
 8003ef0:	6899      	ldr	r1, [r3, #8]
 8003ef2:	68fb      	ldr	r3, [r7, #12]
 8003ef4:	681b      	ldr	r3, [r3, #0]
 8003ef6:	687a      	ldr	r2, [r7, #4]
 8003ef8:	430a      	orrs	r2, r1
 8003efa:	609a      	str	r2, [r3, #8]
 8003efc:	4b15      	ldr	r3, [pc, #84]	; (8003f54 <HAL_RTCEx_SetWakeUpTimer_IT+0x164>)
 8003efe:	681b      	ldr	r3, [r3, #0]
 8003f00:	4a14      	ldr	r2, [pc, #80]	; (8003f54 <HAL_RTCEx_SetWakeUpTimer_IT+0x164>)
 8003f02:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8003f06:	6013      	str	r3, [r2, #0]
 8003f08:	4b12      	ldr	r3, [pc, #72]	; (8003f54 <HAL_RTCEx_SetWakeUpTimer_IT+0x164>)
 8003f0a:	689b      	ldr	r3, [r3, #8]
 8003f0c:	4a11      	ldr	r2, [pc, #68]	; (8003f54 <HAL_RTCEx_SetWakeUpTimer_IT+0x164>)
 8003f0e:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8003f12:	6093      	str	r3, [r2, #8]
 8003f14:	68fb      	ldr	r3, [r7, #12]
 8003f16:	681b      	ldr	r3, [r3, #0]
 8003f18:	689a      	ldr	r2, [r3, #8]
 8003f1a:	68fb      	ldr	r3, [r7, #12]
 8003f1c:	681b      	ldr	r3, [r3, #0]
 8003f1e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003f22:	609a      	str	r2, [r3, #8]
 8003f24:	68fb      	ldr	r3, [r7, #12]
 8003f26:	681b      	ldr	r3, [r3, #0]
 8003f28:	689a      	ldr	r2, [r3, #8]
 8003f2a:	68fb      	ldr	r3, [r7, #12]
 8003f2c:	681b      	ldr	r3, [r3, #0]
 8003f2e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8003f32:	609a      	str	r2, [r3, #8]
 8003f34:	68fb      	ldr	r3, [r7, #12]
 8003f36:	681b      	ldr	r3, [r3, #0]
 8003f38:	22ff      	movs	r2, #255	; 0xff
 8003f3a:	625a      	str	r2, [r3, #36]	; 0x24
 8003f3c:	68fb      	ldr	r3, [r7, #12]
 8003f3e:	2201      	movs	r2, #1
 8003f40:	775a      	strb	r2, [r3, #29]
 8003f42:	68fb      	ldr	r3, [r7, #12]
 8003f44:	2200      	movs	r2, #0
 8003f46:	771a      	strb	r2, [r3, #28]
 8003f48:	2300      	movs	r3, #0
 8003f4a:	4618      	mov	r0, r3
 8003f4c:	3718      	adds	r7, #24
 8003f4e:	46bd      	mov	sp, r7
 8003f50:	bd80      	pop	{r7, pc}
 8003f52:	bf00      	nop
 8003f54:	40010400 	.word	0x40010400

08003f58 <HAL_RTCEx_DeactivateWakeUpTimer>:
 8003f58:	b580      	push	{r7, lr}
 8003f5a:	b084      	sub	sp, #16
 8003f5c:	af00      	add	r7, sp, #0
 8003f5e:	6078      	str	r0, [r7, #4]
 8003f60:	2300      	movs	r3, #0
 8003f62:	60fb      	str	r3, [r7, #12]
 8003f64:	687b      	ldr	r3, [r7, #4]
 8003f66:	7f1b      	ldrb	r3, [r3, #28]
 8003f68:	2b01      	cmp	r3, #1
 8003f6a:	d101      	bne.n	8003f70 <HAL_RTCEx_DeactivateWakeUpTimer+0x18>
 8003f6c:	2302      	movs	r3, #2
 8003f6e:	e047      	b.n	8004000 <HAL_RTCEx_DeactivateWakeUpTimer+0xa8>
 8003f70:	687b      	ldr	r3, [r7, #4]
 8003f72:	2201      	movs	r2, #1
 8003f74:	771a      	strb	r2, [r3, #28]
 8003f76:	687b      	ldr	r3, [r7, #4]
 8003f78:	2202      	movs	r2, #2
 8003f7a:	775a      	strb	r2, [r3, #29]
 8003f7c:	687b      	ldr	r3, [r7, #4]
 8003f7e:	681b      	ldr	r3, [r3, #0]
 8003f80:	22ca      	movs	r2, #202	; 0xca
 8003f82:	625a      	str	r2, [r3, #36]	; 0x24
 8003f84:	687b      	ldr	r3, [r7, #4]
 8003f86:	681b      	ldr	r3, [r3, #0]
 8003f88:	2253      	movs	r2, #83	; 0x53
 8003f8a:	625a      	str	r2, [r3, #36]	; 0x24
 8003f8c:	687b      	ldr	r3, [r7, #4]
 8003f8e:	681b      	ldr	r3, [r3, #0]
 8003f90:	689a      	ldr	r2, [r3, #8]
 8003f92:	687b      	ldr	r3, [r7, #4]
 8003f94:	681b      	ldr	r3, [r3, #0]
 8003f96:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003f9a:	609a      	str	r2, [r3, #8]
 8003f9c:	687b      	ldr	r3, [r7, #4]
 8003f9e:	681b      	ldr	r3, [r3, #0]
 8003fa0:	689a      	ldr	r2, [r3, #8]
 8003fa2:	687b      	ldr	r3, [r7, #4]
 8003fa4:	681b      	ldr	r3, [r3, #0]
 8003fa6:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8003faa:	609a      	str	r2, [r3, #8]
 8003fac:	f7fd fe78 	bl	8001ca0 <HAL_GetTick>
 8003fb0:	60f8      	str	r0, [r7, #12]
 8003fb2:	e013      	b.n	8003fdc <HAL_RTCEx_DeactivateWakeUpTimer+0x84>
 8003fb4:	f7fd fe74 	bl	8001ca0 <HAL_GetTick>
 8003fb8:	4602      	mov	r2, r0
 8003fba:	68fb      	ldr	r3, [r7, #12]
 8003fbc:	1ad3      	subs	r3, r2, r3
 8003fbe:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003fc2:	d90b      	bls.n	8003fdc <HAL_RTCEx_DeactivateWakeUpTimer+0x84>
 8003fc4:	687b      	ldr	r3, [r7, #4]
 8003fc6:	681b      	ldr	r3, [r3, #0]
 8003fc8:	22ff      	movs	r2, #255	; 0xff
 8003fca:	625a      	str	r2, [r3, #36]	; 0x24
 8003fcc:	687b      	ldr	r3, [r7, #4]
 8003fce:	2203      	movs	r2, #3
 8003fd0:	775a      	strb	r2, [r3, #29]
 8003fd2:	687b      	ldr	r3, [r7, #4]
 8003fd4:	2200      	movs	r2, #0
 8003fd6:	771a      	strb	r2, [r3, #28]
 8003fd8:	2303      	movs	r3, #3
 8003fda:	e011      	b.n	8004000 <HAL_RTCEx_DeactivateWakeUpTimer+0xa8>
 8003fdc:	687b      	ldr	r3, [r7, #4]
 8003fde:	681b      	ldr	r3, [r3, #0]
 8003fe0:	68db      	ldr	r3, [r3, #12]
 8003fe2:	f003 0304 	and.w	r3, r3, #4
 8003fe6:	2b00      	cmp	r3, #0
 8003fe8:	d0e4      	beq.n	8003fb4 <HAL_RTCEx_DeactivateWakeUpTimer+0x5c>
 8003fea:	687b      	ldr	r3, [r7, #4]
 8003fec:	681b      	ldr	r3, [r3, #0]
 8003fee:	22ff      	movs	r2, #255	; 0xff
 8003ff0:	625a      	str	r2, [r3, #36]	; 0x24
 8003ff2:	687b      	ldr	r3, [r7, #4]
 8003ff4:	2201      	movs	r2, #1
 8003ff6:	775a      	strb	r2, [r3, #29]
 8003ff8:	687b      	ldr	r3, [r7, #4]
 8003ffa:	2200      	movs	r2, #0
 8003ffc:	771a      	strb	r2, [r3, #28]
 8003ffe:	2300      	movs	r3, #0
 8004000:	4618      	mov	r0, r3
 8004002:	3710      	adds	r7, #16
 8004004:	46bd      	mov	sp, r7
 8004006:	bd80      	pop	{r7, pc}

08004008 <HAL_RTCEx_WakeUpTimerIRQHandler>:
 8004008:	b580      	push	{r7, lr}
 800400a:	b082      	sub	sp, #8
 800400c:	af00      	add	r7, sp, #0
 800400e:	6078      	str	r0, [r7, #4]
 8004010:	687b      	ldr	r3, [r7, #4]
 8004012:	681b      	ldr	r3, [r3, #0]
 8004014:	68db      	ldr	r3, [r3, #12]
 8004016:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800401a:	2b00      	cmp	r3, #0
 800401c:	d00b      	beq.n	8004036 <HAL_RTCEx_WakeUpTimerIRQHandler+0x2e>
 800401e:	6878      	ldr	r0, [r7, #4]
 8004020:	f000 f816 	bl	8004050 <HAL_RTCEx_WakeUpTimerEventCallback>
 8004024:	687b      	ldr	r3, [r7, #4]
 8004026:	681b      	ldr	r3, [r3, #0]
 8004028:	68db      	ldr	r3, [r3, #12]
 800402a:	b2da      	uxtb	r2, r3
 800402c:	687b      	ldr	r3, [r7, #4]
 800402e:	681b      	ldr	r3, [r3, #0]
 8004030:	f462 6290 	orn	r2, r2, #1152	; 0x480
 8004034:	60da      	str	r2, [r3, #12]
 8004036:	4b05      	ldr	r3, [pc, #20]	; (800404c <HAL_RTCEx_WakeUpTimerIRQHandler+0x44>)
 8004038:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 800403c:	615a      	str	r2, [r3, #20]
 800403e:	687b      	ldr	r3, [r7, #4]
 8004040:	2201      	movs	r2, #1
 8004042:	775a      	strb	r2, [r3, #29]
 8004044:	bf00      	nop
 8004046:	3708      	adds	r7, #8
 8004048:	46bd      	mov	sp, r7
 800404a:	bd80      	pop	{r7, pc}
 800404c:	40010400 	.word	0x40010400

08004050 <HAL_RTCEx_WakeUpTimerEventCallback>:
 8004050:	b480      	push	{r7}
 8004052:	b083      	sub	sp, #12
 8004054:	af00      	add	r7, sp, #0
 8004056:	6078      	str	r0, [r7, #4]
 8004058:	bf00      	nop
 800405a:	370c      	adds	r7, #12
 800405c:	46bd      	mov	sp, r7
 800405e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004062:	4770      	bx	lr

08004064 <HAL_RTCEx_BKUPWrite>:
 8004064:	b480      	push	{r7}
 8004066:	b087      	sub	sp, #28
 8004068:	af00      	add	r7, sp, #0
 800406a:	60f8      	str	r0, [r7, #12]
 800406c:	60b9      	str	r1, [r7, #8]
 800406e:	607a      	str	r2, [r7, #4]
 8004070:	2300      	movs	r3, #0
 8004072:	617b      	str	r3, [r7, #20]
 8004074:	68fb      	ldr	r3, [r7, #12]
 8004076:	681b      	ldr	r3, [r3, #0]
 8004078:	3350      	adds	r3, #80	; 0x50
 800407a:	617b      	str	r3, [r7, #20]
 800407c:	68bb      	ldr	r3, [r7, #8]
 800407e:	009b      	lsls	r3, r3, #2
 8004080:	697a      	ldr	r2, [r7, #20]
 8004082:	4413      	add	r3, r2
 8004084:	617b      	str	r3, [r7, #20]
 8004086:	697b      	ldr	r3, [r7, #20]
 8004088:	687a      	ldr	r2, [r7, #4]
 800408a:	601a      	str	r2, [r3, #0]
 800408c:	bf00      	nop
 800408e:	371c      	adds	r7, #28
 8004090:	46bd      	mov	sp, r7
 8004092:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004096:	4770      	bx	lr

08004098 <HAL_RTCEx_BKUPRead>:
 8004098:	b480      	push	{r7}
 800409a:	b085      	sub	sp, #20
 800409c:	af00      	add	r7, sp, #0
 800409e:	6078      	str	r0, [r7, #4]
 80040a0:	6039      	str	r1, [r7, #0]
 80040a2:	2300      	movs	r3, #0
 80040a4:	60fb      	str	r3, [r7, #12]
 80040a6:	687b      	ldr	r3, [r7, #4]
 80040a8:	681b      	ldr	r3, [r3, #0]
 80040aa:	3350      	adds	r3, #80	; 0x50
 80040ac:	60fb      	str	r3, [r7, #12]
 80040ae:	683b      	ldr	r3, [r7, #0]
 80040b0:	009b      	lsls	r3, r3, #2
 80040b2:	68fa      	ldr	r2, [r7, #12]
 80040b4:	4413      	add	r3, r2
 80040b6:	60fb      	str	r3, [r7, #12]
 80040b8:	68fb      	ldr	r3, [r7, #12]
 80040ba:	681b      	ldr	r3, [r3, #0]
 80040bc:	4618      	mov	r0, r3
 80040be:	3714      	adds	r7, #20
 80040c0:	46bd      	mov	sp, r7
 80040c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040c6:	4770      	bx	lr

080040c8 <HAL_UART_Init>:
 80040c8:	b580      	push	{r7, lr}
 80040ca:	b082      	sub	sp, #8
 80040cc:	af00      	add	r7, sp, #0
 80040ce:	6078      	str	r0, [r7, #4]
 80040d0:	687b      	ldr	r3, [r7, #4]
 80040d2:	2b00      	cmp	r3, #0
 80040d4:	d101      	bne.n	80040da <HAL_UART_Init+0x12>
 80040d6:	2301      	movs	r3, #1
 80040d8:	e040      	b.n	800415c <HAL_UART_Init+0x94>
 80040da:	687b      	ldr	r3, [r7, #4]
 80040dc:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80040de:	2b00      	cmp	r3, #0
 80040e0:	d106      	bne.n	80040f0 <HAL_UART_Init+0x28>
 80040e2:	687b      	ldr	r3, [r7, #4]
 80040e4:	2200      	movs	r2, #0
 80040e6:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 80040ea:	6878      	ldr	r0, [r7, #4]
 80040ec:	f7fd fd0a 	bl	8001b04 <HAL_UART_MspInit>
 80040f0:	687b      	ldr	r3, [r7, #4]
 80040f2:	2224      	movs	r2, #36	; 0x24
 80040f4:	679a      	str	r2, [r3, #120]	; 0x78
 80040f6:	687b      	ldr	r3, [r7, #4]
 80040f8:	681b      	ldr	r3, [r3, #0]
 80040fa:	681a      	ldr	r2, [r3, #0]
 80040fc:	687b      	ldr	r3, [r7, #4]
 80040fe:	681b      	ldr	r3, [r3, #0]
 8004100:	f022 0201 	bic.w	r2, r2, #1
 8004104:	601a      	str	r2, [r3, #0]
 8004106:	6878      	ldr	r0, [r7, #4]
 8004108:	f000 fbb2 	bl	8004870 <UART_SetConfig>
 800410c:	4603      	mov	r3, r0
 800410e:	2b01      	cmp	r3, #1
 8004110:	d101      	bne.n	8004116 <HAL_UART_Init+0x4e>
 8004112:	2301      	movs	r3, #1
 8004114:	e022      	b.n	800415c <HAL_UART_Init+0x94>
 8004116:	687b      	ldr	r3, [r7, #4]
 8004118:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800411a:	2b00      	cmp	r3, #0
 800411c:	d002      	beq.n	8004124 <HAL_UART_Init+0x5c>
 800411e:	6878      	ldr	r0, [r7, #4]
 8004120:	f000 fd7c 	bl	8004c1c <UART_AdvFeatureConfig>
 8004124:	687b      	ldr	r3, [r7, #4]
 8004126:	681b      	ldr	r3, [r3, #0]
 8004128:	685a      	ldr	r2, [r3, #4]
 800412a:	687b      	ldr	r3, [r7, #4]
 800412c:	681b      	ldr	r3, [r3, #0]
 800412e:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8004132:	605a      	str	r2, [r3, #4]
 8004134:	687b      	ldr	r3, [r7, #4]
 8004136:	681b      	ldr	r3, [r3, #0]
 8004138:	689a      	ldr	r2, [r3, #8]
 800413a:	687b      	ldr	r3, [r7, #4]
 800413c:	681b      	ldr	r3, [r3, #0]
 800413e:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8004142:	609a      	str	r2, [r3, #8]
 8004144:	687b      	ldr	r3, [r7, #4]
 8004146:	681b      	ldr	r3, [r3, #0]
 8004148:	681a      	ldr	r2, [r3, #0]
 800414a:	687b      	ldr	r3, [r7, #4]
 800414c:	681b      	ldr	r3, [r3, #0]
 800414e:	f042 0201 	orr.w	r2, r2, #1
 8004152:	601a      	str	r2, [r3, #0]
 8004154:	6878      	ldr	r0, [r7, #4]
 8004156:	f000 fe03 	bl	8004d60 <UART_CheckIdleState>
 800415a:	4603      	mov	r3, r0
 800415c:	4618      	mov	r0, r3
 800415e:	3708      	adds	r7, #8
 8004160:	46bd      	mov	sp, r7
 8004162:	bd80      	pop	{r7, pc}

08004164 <HAL_UART_Transmit>:
 8004164:	b580      	push	{r7, lr}
 8004166:	b08a      	sub	sp, #40	; 0x28
 8004168:	af02      	add	r7, sp, #8
 800416a:	60f8      	str	r0, [r7, #12]
 800416c:	60b9      	str	r1, [r7, #8]
 800416e:	603b      	str	r3, [r7, #0]
 8004170:	4613      	mov	r3, r2
 8004172:	80fb      	strh	r3, [r7, #6]
 8004174:	68fb      	ldr	r3, [r7, #12]
 8004176:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8004178:	2b20      	cmp	r3, #32
 800417a:	f040 8082 	bne.w	8004282 <HAL_UART_Transmit+0x11e>
 800417e:	68bb      	ldr	r3, [r7, #8]
 8004180:	2b00      	cmp	r3, #0
 8004182:	d002      	beq.n	800418a <HAL_UART_Transmit+0x26>
 8004184:	88fb      	ldrh	r3, [r7, #6]
 8004186:	2b00      	cmp	r3, #0
 8004188:	d101      	bne.n	800418e <HAL_UART_Transmit+0x2a>
 800418a:	2301      	movs	r3, #1
 800418c:	e07a      	b.n	8004284 <HAL_UART_Transmit+0x120>
 800418e:	68fb      	ldr	r3, [r7, #12]
 8004190:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 8004194:	2b01      	cmp	r3, #1
 8004196:	d101      	bne.n	800419c <HAL_UART_Transmit+0x38>
 8004198:	2302      	movs	r3, #2
 800419a:	e073      	b.n	8004284 <HAL_UART_Transmit+0x120>
 800419c:	68fb      	ldr	r3, [r7, #12]
 800419e:	2201      	movs	r2, #1
 80041a0:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 80041a4:	68fb      	ldr	r3, [r7, #12]
 80041a6:	2200      	movs	r2, #0
 80041a8:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80041ac:	68fb      	ldr	r3, [r7, #12]
 80041ae:	2221      	movs	r2, #33	; 0x21
 80041b0:	679a      	str	r2, [r3, #120]	; 0x78
 80041b2:	f7fd fd75 	bl	8001ca0 <HAL_GetTick>
 80041b6:	6178      	str	r0, [r7, #20]
 80041b8:	68fb      	ldr	r3, [r7, #12]
 80041ba:	88fa      	ldrh	r2, [r7, #6]
 80041bc:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
 80041c0:	68fb      	ldr	r3, [r7, #12]
 80041c2:	88fa      	ldrh	r2, [r7, #6]
 80041c4:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 80041c8:	68fb      	ldr	r3, [r7, #12]
 80041ca:	689b      	ldr	r3, [r3, #8]
 80041cc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80041d0:	d108      	bne.n	80041e4 <HAL_UART_Transmit+0x80>
 80041d2:	68fb      	ldr	r3, [r7, #12]
 80041d4:	691b      	ldr	r3, [r3, #16]
 80041d6:	2b00      	cmp	r3, #0
 80041d8:	d104      	bne.n	80041e4 <HAL_UART_Transmit+0x80>
 80041da:	2300      	movs	r3, #0
 80041dc:	61fb      	str	r3, [r7, #28]
 80041de:	68bb      	ldr	r3, [r7, #8]
 80041e0:	61bb      	str	r3, [r7, #24]
 80041e2:	e003      	b.n	80041ec <HAL_UART_Transmit+0x88>
 80041e4:	68bb      	ldr	r3, [r7, #8]
 80041e6:	61fb      	str	r3, [r7, #28]
 80041e8:	2300      	movs	r3, #0
 80041ea:	61bb      	str	r3, [r7, #24]
 80041ec:	68fb      	ldr	r3, [r7, #12]
 80041ee:	2200      	movs	r2, #0
 80041f0:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 80041f4:	e02d      	b.n	8004252 <HAL_UART_Transmit+0xee>
 80041f6:	683b      	ldr	r3, [r7, #0]
 80041f8:	9300      	str	r3, [sp, #0]
 80041fa:	697b      	ldr	r3, [r7, #20]
 80041fc:	2200      	movs	r2, #0
 80041fe:	2180      	movs	r1, #128	; 0x80
 8004200:	68f8      	ldr	r0, [r7, #12]
 8004202:	f000 fdf6 	bl	8004df2 <UART_WaitOnFlagUntilTimeout>
 8004206:	4603      	mov	r3, r0
 8004208:	2b00      	cmp	r3, #0
 800420a:	d001      	beq.n	8004210 <HAL_UART_Transmit+0xac>
 800420c:	2303      	movs	r3, #3
 800420e:	e039      	b.n	8004284 <HAL_UART_Transmit+0x120>
 8004210:	69fb      	ldr	r3, [r7, #28]
 8004212:	2b00      	cmp	r3, #0
 8004214:	d10b      	bne.n	800422e <HAL_UART_Transmit+0xca>
 8004216:	69bb      	ldr	r3, [r7, #24]
 8004218:	881a      	ldrh	r2, [r3, #0]
 800421a:	68fb      	ldr	r3, [r7, #12]
 800421c:	681b      	ldr	r3, [r3, #0]
 800421e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8004222:	b292      	uxth	r2, r2
 8004224:	851a      	strh	r2, [r3, #40]	; 0x28
 8004226:	69bb      	ldr	r3, [r7, #24]
 8004228:	3302      	adds	r3, #2
 800422a:	61bb      	str	r3, [r7, #24]
 800422c:	e008      	b.n	8004240 <HAL_UART_Transmit+0xdc>
 800422e:	69fb      	ldr	r3, [r7, #28]
 8004230:	781a      	ldrb	r2, [r3, #0]
 8004232:	68fb      	ldr	r3, [r7, #12]
 8004234:	681b      	ldr	r3, [r3, #0]
 8004236:	b292      	uxth	r2, r2
 8004238:	851a      	strh	r2, [r3, #40]	; 0x28
 800423a:	69fb      	ldr	r3, [r7, #28]
 800423c:	3301      	adds	r3, #1
 800423e:	61fb      	str	r3, [r7, #28]
 8004240:	68fb      	ldr	r3, [r7, #12]
 8004242:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8004246:	b29b      	uxth	r3, r3
 8004248:	3b01      	subs	r3, #1
 800424a:	b29a      	uxth	r2, r3
 800424c:	68fb      	ldr	r3, [r7, #12]
 800424e:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 8004252:	68fb      	ldr	r3, [r7, #12]
 8004254:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8004258:	b29b      	uxth	r3, r3
 800425a:	2b00      	cmp	r3, #0
 800425c:	d1cb      	bne.n	80041f6 <HAL_UART_Transmit+0x92>
 800425e:	683b      	ldr	r3, [r7, #0]
 8004260:	9300      	str	r3, [sp, #0]
 8004262:	697b      	ldr	r3, [r7, #20]
 8004264:	2200      	movs	r2, #0
 8004266:	2140      	movs	r1, #64	; 0x40
 8004268:	68f8      	ldr	r0, [r7, #12]
 800426a:	f000 fdc2 	bl	8004df2 <UART_WaitOnFlagUntilTimeout>
 800426e:	4603      	mov	r3, r0
 8004270:	2b00      	cmp	r3, #0
 8004272:	d001      	beq.n	8004278 <HAL_UART_Transmit+0x114>
 8004274:	2303      	movs	r3, #3
 8004276:	e005      	b.n	8004284 <HAL_UART_Transmit+0x120>
 8004278:	68fb      	ldr	r3, [r7, #12]
 800427a:	2220      	movs	r2, #32
 800427c:	679a      	str	r2, [r3, #120]	; 0x78
 800427e:	2300      	movs	r3, #0
 8004280:	e000      	b.n	8004284 <HAL_UART_Transmit+0x120>
 8004282:	2302      	movs	r3, #2
 8004284:	4618      	mov	r0, r3
 8004286:	3720      	adds	r7, #32
 8004288:	46bd      	mov	sp, r7
 800428a:	bd80      	pop	{r7, pc}

0800428c <HAL_UART_Receive>:
 800428c:	b580      	push	{r7, lr}
 800428e:	b08a      	sub	sp, #40	; 0x28
 8004290:	af02      	add	r7, sp, #8
 8004292:	60f8      	str	r0, [r7, #12]
 8004294:	60b9      	str	r1, [r7, #8]
 8004296:	603b      	str	r3, [r7, #0]
 8004298:	4613      	mov	r3, r2
 800429a:	80fb      	strh	r3, [r7, #6]
 800429c:	68fb      	ldr	r3, [r7, #12]
 800429e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80042a0:	2b20      	cmp	r3, #32
 80042a2:	f040 80bf 	bne.w	8004424 <HAL_UART_Receive+0x198>
 80042a6:	68bb      	ldr	r3, [r7, #8]
 80042a8:	2b00      	cmp	r3, #0
 80042aa:	d002      	beq.n	80042b2 <HAL_UART_Receive+0x26>
 80042ac:	88fb      	ldrh	r3, [r7, #6]
 80042ae:	2b00      	cmp	r3, #0
 80042b0:	d101      	bne.n	80042b6 <HAL_UART_Receive+0x2a>
 80042b2:	2301      	movs	r3, #1
 80042b4:	e0b7      	b.n	8004426 <HAL_UART_Receive+0x19a>
 80042b6:	68fb      	ldr	r3, [r7, #12]
 80042b8:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 80042bc:	2b01      	cmp	r3, #1
 80042be:	d101      	bne.n	80042c4 <HAL_UART_Receive+0x38>
 80042c0:	2302      	movs	r3, #2
 80042c2:	e0b0      	b.n	8004426 <HAL_UART_Receive+0x19a>
 80042c4:	68fb      	ldr	r3, [r7, #12]
 80042c6:	2201      	movs	r2, #1
 80042c8:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 80042cc:	68fb      	ldr	r3, [r7, #12]
 80042ce:	2200      	movs	r2, #0
 80042d0:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80042d4:	68fb      	ldr	r3, [r7, #12]
 80042d6:	2222      	movs	r2, #34	; 0x22
 80042d8:	67da      	str	r2, [r3, #124]	; 0x7c
 80042da:	68fb      	ldr	r3, [r7, #12]
 80042dc:	2200      	movs	r2, #0
 80042de:	661a      	str	r2, [r3, #96]	; 0x60
 80042e0:	f7fd fcde 	bl	8001ca0 <HAL_GetTick>
 80042e4:	6178      	str	r0, [r7, #20]
 80042e6:	68fb      	ldr	r3, [r7, #12]
 80042e8:	88fa      	ldrh	r2, [r7, #6]
 80042ea:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
 80042ee:	68fb      	ldr	r3, [r7, #12]
 80042f0:	88fa      	ldrh	r2, [r7, #6]
 80042f2:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 80042f6:	68fb      	ldr	r3, [r7, #12]
 80042f8:	689b      	ldr	r3, [r3, #8]
 80042fa:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80042fe:	d10e      	bne.n	800431e <HAL_UART_Receive+0x92>
 8004300:	68fb      	ldr	r3, [r7, #12]
 8004302:	691b      	ldr	r3, [r3, #16]
 8004304:	2b00      	cmp	r3, #0
 8004306:	d105      	bne.n	8004314 <HAL_UART_Receive+0x88>
 8004308:	68fb      	ldr	r3, [r7, #12]
 800430a:	f240 12ff 	movw	r2, #511	; 0x1ff
 800430e:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8004312:	e02d      	b.n	8004370 <HAL_UART_Receive+0xe4>
 8004314:	68fb      	ldr	r3, [r7, #12]
 8004316:	22ff      	movs	r2, #255	; 0xff
 8004318:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 800431c:	e028      	b.n	8004370 <HAL_UART_Receive+0xe4>
 800431e:	68fb      	ldr	r3, [r7, #12]
 8004320:	689b      	ldr	r3, [r3, #8]
 8004322:	2b00      	cmp	r3, #0
 8004324:	d10d      	bne.n	8004342 <HAL_UART_Receive+0xb6>
 8004326:	68fb      	ldr	r3, [r7, #12]
 8004328:	691b      	ldr	r3, [r3, #16]
 800432a:	2b00      	cmp	r3, #0
 800432c:	d104      	bne.n	8004338 <HAL_UART_Receive+0xac>
 800432e:	68fb      	ldr	r3, [r7, #12]
 8004330:	22ff      	movs	r2, #255	; 0xff
 8004332:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8004336:	e01b      	b.n	8004370 <HAL_UART_Receive+0xe4>
 8004338:	68fb      	ldr	r3, [r7, #12]
 800433a:	227f      	movs	r2, #127	; 0x7f
 800433c:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8004340:	e016      	b.n	8004370 <HAL_UART_Receive+0xe4>
 8004342:	68fb      	ldr	r3, [r7, #12]
 8004344:	689b      	ldr	r3, [r3, #8]
 8004346:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800434a:	d10d      	bne.n	8004368 <HAL_UART_Receive+0xdc>
 800434c:	68fb      	ldr	r3, [r7, #12]
 800434e:	691b      	ldr	r3, [r3, #16]
 8004350:	2b00      	cmp	r3, #0
 8004352:	d104      	bne.n	800435e <HAL_UART_Receive+0xd2>
 8004354:	68fb      	ldr	r3, [r7, #12]
 8004356:	227f      	movs	r2, #127	; 0x7f
 8004358:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 800435c:	e008      	b.n	8004370 <HAL_UART_Receive+0xe4>
 800435e:	68fb      	ldr	r3, [r7, #12]
 8004360:	223f      	movs	r2, #63	; 0x3f
 8004362:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8004366:	e003      	b.n	8004370 <HAL_UART_Receive+0xe4>
 8004368:	68fb      	ldr	r3, [r7, #12]
 800436a:	2200      	movs	r2, #0
 800436c:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8004370:	68fb      	ldr	r3, [r7, #12]
 8004372:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 8004376:	827b      	strh	r3, [r7, #18]
 8004378:	68fb      	ldr	r3, [r7, #12]
 800437a:	689b      	ldr	r3, [r3, #8]
 800437c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004380:	d108      	bne.n	8004394 <HAL_UART_Receive+0x108>
 8004382:	68fb      	ldr	r3, [r7, #12]
 8004384:	691b      	ldr	r3, [r3, #16]
 8004386:	2b00      	cmp	r3, #0
 8004388:	d104      	bne.n	8004394 <HAL_UART_Receive+0x108>
 800438a:	2300      	movs	r3, #0
 800438c:	61fb      	str	r3, [r7, #28]
 800438e:	68bb      	ldr	r3, [r7, #8]
 8004390:	61bb      	str	r3, [r7, #24]
 8004392:	e003      	b.n	800439c <HAL_UART_Receive+0x110>
 8004394:	68bb      	ldr	r3, [r7, #8]
 8004396:	61fb      	str	r3, [r7, #28]
 8004398:	2300      	movs	r3, #0
 800439a:	61bb      	str	r3, [r7, #24]
 800439c:	68fb      	ldr	r3, [r7, #12]
 800439e:	2200      	movs	r2, #0
 80043a0:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 80043a4:	e033      	b.n	800440e <HAL_UART_Receive+0x182>
 80043a6:	683b      	ldr	r3, [r7, #0]
 80043a8:	9300      	str	r3, [sp, #0]
 80043aa:	697b      	ldr	r3, [r7, #20]
 80043ac:	2200      	movs	r2, #0
 80043ae:	2120      	movs	r1, #32
 80043b0:	68f8      	ldr	r0, [r7, #12]
 80043b2:	f000 fd1e 	bl	8004df2 <UART_WaitOnFlagUntilTimeout>
 80043b6:	4603      	mov	r3, r0
 80043b8:	2b00      	cmp	r3, #0
 80043ba:	d001      	beq.n	80043c0 <HAL_UART_Receive+0x134>
 80043bc:	2303      	movs	r3, #3
 80043be:	e032      	b.n	8004426 <HAL_UART_Receive+0x19a>
 80043c0:	69fb      	ldr	r3, [r7, #28]
 80043c2:	2b00      	cmp	r3, #0
 80043c4:	d10c      	bne.n	80043e0 <HAL_UART_Receive+0x154>
 80043c6:	68fb      	ldr	r3, [r7, #12]
 80043c8:	681b      	ldr	r3, [r3, #0]
 80043ca:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 80043cc:	b29a      	uxth	r2, r3
 80043ce:	8a7b      	ldrh	r3, [r7, #18]
 80043d0:	4013      	ands	r3, r2
 80043d2:	b29a      	uxth	r2, r3
 80043d4:	69bb      	ldr	r3, [r7, #24]
 80043d6:	801a      	strh	r2, [r3, #0]
 80043d8:	69bb      	ldr	r3, [r7, #24]
 80043da:	3302      	adds	r3, #2
 80043dc:	61bb      	str	r3, [r7, #24]
 80043de:	e00d      	b.n	80043fc <HAL_UART_Receive+0x170>
 80043e0:	68fb      	ldr	r3, [r7, #12]
 80043e2:	681b      	ldr	r3, [r3, #0]
 80043e4:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 80043e6:	b29b      	uxth	r3, r3
 80043e8:	b2da      	uxtb	r2, r3
 80043ea:	8a7b      	ldrh	r3, [r7, #18]
 80043ec:	b2db      	uxtb	r3, r3
 80043ee:	4013      	ands	r3, r2
 80043f0:	b2da      	uxtb	r2, r3
 80043f2:	69fb      	ldr	r3, [r7, #28]
 80043f4:	701a      	strb	r2, [r3, #0]
 80043f6:	69fb      	ldr	r3, [r7, #28]
 80043f8:	3301      	adds	r3, #1
 80043fa:	61fb      	str	r3, [r7, #28]
 80043fc:	68fb      	ldr	r3, [r7, #12]
 80043fe:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8004402:	b29b      	uxth	r3, r3
 8004404:	3b01      	subs	r3, #1
 8004406:	b29a      	uxth	r2, r3
 8004408:	68fb      	ldr	r3, [r7, #12]
 800440a:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 800440e:	68fb      	ldr	r3, [r7, #12]
 8004410:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8004414:	b29b      	uxth	r3, r3
 8004416:	2b00      	cmp	r3, #0
 8004418:	d1c5      	bne.n	80043a6 <HAL_UART_Receive+0x11a>
 800441a:	68fb      	ldr	r3, [r7, #12]
 800441c:	2220      	movs	r2, #32
 800441e:	67da      	str	r2, [r3, #124]	; 0x7c
 8004420:	2300      	movs	r3, #0
 8004422:	e000      	b.n	8004426 <HAL_UART_Receive+0x19a>
 8004424:	2302      	movs	r3, #2
 8004426:	4618      	mov	r0, r3
 8004428:	3720      	adds	r7, #32
 800442a:	46bd      	mov	sp, r7
 800442c:	bd80      	pop	{r7, pc}
	...

08004430 <HAL_UART_IRQHandler>:
 8004430:	b580      	push	{r7, lr}
 8004432:	b088      	sub	sp, #32
 8004434:	af00      	add	r7, sp, #0
 8004436:	6078      	str	r0, [r7, #4]
 8004438:	687b      	ldr	r3, [r7, #4]
 800443a:	681b      	ldr	r3, [r3, #0]
 800443c:	69db      	ldr	r3, [r3, #28]
 800443e:	61fb      	str	r3, [r7, #28]
 8004440:	687b      	ldr	r3, [r7, #4]
 8004442:	681b      	ldr	r3, [r3, #0]
 8004444:	681b      	ldr	r3, [r3, #0]
 8004446:	61bb      	str	r3, [r7, #24]
 8004448:	687b      	ldr	r3, [r7, #4]
 800444a:	681b      	ldr	r3, [r3, #0]
 800444c:	689b      	ldr	r3, [r3, #8]
 800444e:	617b      	str	r3, [r7, #20]
 8004450:	69fa      	ldr	r2, [r7, #28]
 8004452:	f640 030f 	movw	r3, #2063	; 0x80f
 8004456:	4013      	ands	r3, r2
 8004458:	613b      	str	r3, [r7, #16]
 800445a:	693b      	ldr	r3, [r7, #16]
 800445c:	2b00      	cmp	r3, #0
 800445e:	d113      	bne.n	8004488 <HAL_UART_IRQHandler+0x58>
 8004460:	69fb      	ldr	r3, [r7, #28]
 8004462:	f003 0320 	and.w	r3, r3, #32
 8004466:	2b00      	cmp	r3, #0
 8004468:	d00e      	beq.n	8004488 <HAL_UART_IRQHandler+0x58>
 800446a:	69bb      	ldr	r3, [r7, #24]
 800446c:	f003 0320 	and.w	r3, r3, #32
 8004470:	2b00      	cmp	r3, #0
 8004472:	d009      	beq.n	8004488 <HAL_UART_IRQHandler+0x58>
 8004474:	687b      	ldr	r3, [r7, #4]
 8004476:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004478:	2b00      	cmp	r3, #0
 800447a:	f000 81cc 	beq.w	8004816 <HAL_UART_IRQHandler+0x3e6>
 800447e:	687b      	ldr	r3, [r7, #4]
 8004480:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004482:	6878      	ldr	r0, [r7, #4]
 8004484:	4798      	blx	r3
 8004486:	e1c6      	b.n	8004816 <HAL_UART_IRQHandler+0x3e6>
 8004488:	693b      	ldr	r3, [r7, #16]
 800448a:	2b00      	cmp	r3, #0
 800448c:	f000 80e3 	beq.w	8004656 <HAL_UART_IRQHandler+0x226>
 8004490:	697b      	ldr	r3, [r7, #20]
 8004492:	f003 0301 	and.w	r3, r3, #1
 8004496:	2b00      	cmp	r3, #0
 8004498:	d105      	bne.n	80044a6 <HAL_UART_IRQHandler+0x76>
 800449a:	69ba      	ldr	r2, [r7, #24]
 800449c:	4ba5      	ldr	r3, [pc, #660]	; (8004734 <HAL_UART_IRQHandler+0x304>)
 800449e:	4013      	ands	r3, r2
 80044a0:	2b00      	cmp	r3, #0
 80044a2:	f000 80d8 	beq.w	8004656 <HAL_UART_IRQHandler+0x226>
 80044a6:	69fb      	ldr	r3, [r7, #28]
 80044a8:	f003 0301 	and.w	r3, r3, #1
 80044ac:	2b00      	cmp	r3, #0
 80044ae:	d010      	beq.n	80044d2 <HAL_UART_IRQHandler+0xa2>
 80044b0:	69bb      	ldr	r3, [r7, #24]
 80044b2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80044b6:	2b00      	cmp	r3, #0
 80044b8:	d00b      	beq.n	80044d2 <HAL_UART_IRQHandler+0xa2>
 80044ba:	687b      	ldr	r3, [r7, #4]
 80044bc:	681b      	ldr	r3, [r3, #0]
 80044be:	2201      	movs	r2, #1
 80044c0:	621a      	str	r2, [r3, #32]
 80044c2:	687b      	ldr	r3, [r7, #4]
 80044c4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80044c8:	f043 0201 	orr.w	r2, r3, #1
 80044cc:	687b      	ldr	r3, [r7, #4]
 80044ce:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80044d2:	69fb      	ldr	r3, [r7, #28]
 80044d4:	f003 0302 	and.w	r3, r3, #2
 80044d8:	2b00      	cmp	r3, #0
 80044da:	d010      	beq.n	80044fe <HAL_UART_IRQHandler+0xce>
 80044dc:	697b      	ldr	r3, [r7, #20]
 80044de:	f003 0301 	and.w	r3, r3, #1
 80044e2:	2b00      	cmp	r3, #0
 80044e4:	d00b      	beq.n	80044fe <HAL_UART_IRQHandler+0xce>
 80044e6:	687b      	ldr	r3, [r7, #4]
 80044e8:	681b      	ldr	r3, [r3, #0]
 80044ea:	2202      	movs	r2, #2
 80044ec:	621a      	str	r2, [r3, #32]
 80044ee:	687b      	ldr	r3, [r7, #4]
 80044f0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80044f4:	f043 0204 	orr.w	r2, r3, #4
 80044f8:	687b      	ldr	r3, [r7, #4]
 80044fa:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80044fe:	69fb      	ldr	r3, [r7, #28]
 8004500:	f003 0304 	and.w	r3, r3, #4
 8004504:	2b00      	cmp	r3, #0
 8004506:	d010      	beq.n	800452a <HAL_UART_IRQHandler+0xfa>
 8004508:	697b      	ldr	r3, [r7, #20]
 800450a:	f003 0301 	and.w	r3, r3, #1
 800450e:	2b00      	cmp	r3, #0
 8004510:	d00b      	beq.n	800452a <HAL_UART_IRQHandler+0xfa>
 8004512:	687b      	ldr	r3, [r7, #4]
 8004514:	681b      	ldr	r3, [r3, #0]
 8004516:	2204      	movs	r2, #4
 8004518:	621a      	str	r2, [r3, #32]
 800451a:	687b      	ldr	r3, [r7, #4]
 800451c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8004520:	f043 0202 	orr.w	r2, r3, #2
 8004524:	687b      	ldr	r3, [r7, #4]
 8004526:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 800452a:	69fb      	ldr	r3, [r7, #28]
 800452c:	f003 0308 	and.w	r3, r3, #8
 8004530:	2b00      	cmp	r3, #0
 8004532:	d015      	beq.n	8004560 <HAL_UART_IRQHandler+0x130>
 8004534:	69bb      	ldr	r3, [r7, #24]
 8004536:	f003 0320 	and.w	r3, r3, #32
 800453a:	2b00      	cmp	r3, #0
 800453c:	d104      	bne.n	8004548 <HAL_UART_IRQHandler+0x118>
 800453e:	697b      	ldr	r3, [r7, #20]
 8004540:	f003 0301 	and.w	r3, r3, #1
 8004544:	2b00      	cmp	r3, #0
 8004546:	d00b      	beq.n	8004560 <HAL_UART_IRQHandler+0x130>
 8004548:	687b      	ldr	r3, [r7, #4]
 800454a:	681b      	ldr	r3, [r3, #0]
 800454c:	2208      	movs	r2, #8
 800454e:	621a      	str	r2, [r3, #32]
 8004550:	687b      	ldr	r3, [r7, #4]
 8004552:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8004556:	f043 0208 	orr.w	r2, r3, #8
 800455a:	687b      	ldr	r3, [r7, #4]
 800455c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8004560:	69fb      	ldr	r3, [r7, #28]
 8004562:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8004566:	2b00      	cmp	r3, #0
 8004568:	d011      	beq.n	800458e <HAL_UART_IRQHandler+0x15e>
 800456a:	69bb      	ldr	r3, [r7, #24]
 800456c:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8004570:	2b00      	cmp	r3, #0
 8004572:	d00c      	beq.n	800458e <HAL_UART_IRQHandler+0x15e>
 8004574:	687b      	ldr	r3, [r7, #4]
 8004576:	681b      	ldr	r3, [r3, #0]
 8004578:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800457c:	621a      	str	r2, [r3, #32]
 800457e:	687b      	ldr	r3, [r7, #4]
 8004580:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8004584:	f043 0220 	orr.w	r2, r3, #32
 8004588:	687b      	ldr	r3, [r7, #4]
 800458a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 800458e:	687b      	ldr	r3, [r7, #4]
 8004590:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8004594:	2b00      	cmp	r3, #0
 8004596:	f000 8140 	beq.w	800481a <HAL_UART_IRQHandler+0x3ea>
 800459a:	69fb      	ldr	r3, [r7, #28]
 800459c:	f003 0320 	and.w	r3, r3, #32
 80045a0:	2b00      	cmp	r3, #0
 80045a2:	d00c      	beq.n	80045be <HAL_UART_IRQHandler+0x18e>
 80045a4:	69bb      	ldr	r3, [r7, #24]
 80045a6:	f003 0320 	and.w	r3, r3, #32
 80045aa:	2b00      	cmp	r3, #0
 80045ac:	d007      	beq.n	80045be <HAL_UART_IRQHandler+0x18e>
 80045ae:	687b      	ldr	r3, [r7, #4]
 80045b0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80045b2:	2b00      	cmp	r3, #0
 80045b4:	d003      	beq.n	80045be <HAL_UART_IRQHandler+0x18e>
 80045b6:	687b      	ldr	r3, [r7, #4]
 80045b8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80045ba:	6878      	ldr	r0, [r7, #4]
 80045bc:	4798      	blx	r3
 80045be:	687b      	ldr	r3, [r7, #4]
 80045c0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80045c4:	60fb      	str	r3, [r7, #12]
 80045c6:	687b      	ldr	r3, [r7, #4]
 80045c8:	681b      	ldr	r3, [r3, #0]
 80045ca:	689b      	ldr	r3, [r3, #8]
 80045cc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80045d0:	2b40      	cmp	r3, #64	; 0x40
 80045d2:	d004      	beq.n	80045de <HAL_UART_IRQHandler+0x1ae>
 80045d4:	68fb      	ldr	r3, [r7, #12]
 80045d6:	f003 0328 	and.w	r3, r3, #40	; 0x28
 80045da:	2b00      	cmp	r3, #0
 80045dc:	d031      	beq.n	8004642 <HAL_UART_IRQHandler+0x212>
 80045de:	6878      	ldr	r0, [r7, #4]
 80045e0:	f000 fc83 	bl	8004eea <UART_EndRxTransfer>
 80045e4:	687b      	ldr	r3, [r7, #4]
 80045e6:	681b      	ldr	r3, [r3, #0]
 80045e8:	689b      	ldr	r3, [r3, #8]
 80045ea:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80045ee:	2b40      	cmp	r3, #64	; 0x40
 80045f0:	d123      	bne.n	800463a <HAL_UART_IRQHandler+0x20a>
 80045f2:	687b      	ldr	r3, [r7, #4]
 80045f4:	681b      	ldr	r3, [r3, #0]
 80045f6:	689a      	ldr	r2, [r3, #8]
 80045f8:	687b      	ldr	r3, [r7, #4]
 80045fa:	681b      	ldr	r3, [r3, #0]
 80045fc:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004600:	609a      	str	r2, [r3, #8]
 8004602:	687b      	ldr	r3, [r7, #4]
 8004604:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004606:	2b00      	cmp	r3, #0
 8004608:	d013      	beq.n	8004632 <HAL_UART_IRQHandler+0x202>
 800460a:	687b      	ldr	r3, [r7, #4]
 800460c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800460e:	4a4a      	ldr	r2, [pc, #296]	; (8004738 <HAL_UART_IRQHandler+0x308>)
 8004610:	635a      	str	r2, [r3, #52]	; 0x34
 8004612:	687b      	ldr	r3, [r7, #4]
 8004614:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004616:	4618      	mov	r0, r3
 8004618:	f7fd fd0e 	bl	8002038 <HAL_DMA_Abort_IT>
 800461c:	4603      	mov	r3, r0
 800461e:	2b00      	cmp	r3, #0
 8004620:	d017      	beq.n	8004652 <HAL_UART_IRQHandler+0x222>
 8004622:	687b      	ldr	r3, [r7, #4]
 8004624:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004626:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004628:	687a      	ldr	r2, [r7, #4]
 800462a:	6f12      	ldr	r2, [r2, #112]	; 0x70
 800462c:	4610      	mov	r0, r2
 800462e:	4798      	blx	r3
 8004630:	e00f      	b.n	8004652 <HAL_UART_IRQHandler+0x222>
 8004632:	6878      	ldr	r0, [r7, #4]
 8004634:	f000 f906 	bl	8004844 <HAL_UART_ErrorCallback>
 8004638:	e00b      	b.n	8004652 <HAL_UART_IRQHandler+0x222>
 800463a:	6878      	ldr	r0, [r7, #4]
 800463c:	f000 f902 	bl	8004844 <HAL_UART_ErrorCallback>
 8004640:	e007      	b.n	8004652 <HAL_UART_IRQHandler+0x222>
 8004642:	6878      	ldr	r0, [r7, #4]
 8004644:	f000 f8fe 	bl	8004844 <HAL_UART_ErrorCallback>
 8004648:	687b      	ldr	r3, [r7, #4]
 800464a:	2200      	movs	r2, #0
 800464c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8004650:	e0e3      	b.n	800481a <HAL_UART_IRQHandler+0x3ea>
 8004652:	bf00      	nop
 8004654:	e0e1      	b.n	800481a <HAL_UART_IRQHandler+0x3ea>
 8004656:	687b      	ldr	r3, [r7, #4]
 8004658:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800465a:	2b01      	cmp	r3, #1
 800465c:	f040 80a7 	bne.w	80047ae <HAL_UART_IRQHandler+0x37e>
 8004660:	69fb      	ldr	r3, [r7, #28]
 8004662:	f003 0310 	and.w	r3, r3, #16
 8004666:	2b00      	cmp	r3, #0
 8004668:	f000 80a1 	beq.w	80047ae <HAL_UART_IRQHandler+0x37e>
 800466c:	69bb      	ldr	r3, [r7, #24]
 800466e:	f003 0310 	and.w	r3, r3, #16
 8004672:	2b00      	cmp	r3, #0
 8004674:	f000 809b 	beq.w	80047ae <HAL_UART_IRQHandler+0x37e>
 8004678:	687b      	ldr	r3, [r7, #4]
 800467a:	681b      	ldr	r3, [r3, #0]
 800467c:	2210      	movs	r2, #16
 800467e:	621a      	str	r2, [r3, #32]
 8004680:	687b      	ldr	r3, [r7, #4]
 8004682:	681b      	ldr	r3, [r3, #0]
 8004684:	689b      	ldr	r3, [r3, #8]
 8004686:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800468a:	2b40      	cmp	r3, #64	; 0x40
 800468c:	d156      	bne.n	800473c <HAL_UART_IRQHandler+0x30c>
 800468e:	687b      	ldr	r3, [r7, #4]
 8004690:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004692:	681b      	ldr	r3, [r3, #0]
 8004694:	685b      	ldr	r3, [r3, #4]
 8004696:	813b      	strh	r3, [r7, #8]
 8004698:	893b      	ldrh	r3, [r7, #8]
 800469a:	2b00      	cmp	r3, #0
 800469c:	f000 80bf 	beq.w	800481e <HAL_UART_IRQHandler+0x3ee>
 80046a0:	687b      	ldr	r3, [r7, #4]
 80046a2:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 80046a6:	893a      	ldrh	r2, [r7, #8]
 80046a8:	429a      	cmp	r2, r3
 80046aa:	f080 80b8 	bcs.w	800481e <HAL_UART_IRQHandler+0x3ee>
 80046ae:	687b      	ldr	r3, [r7, #4]
 80046b0:	893a      	ldrh	r2, [r7, #8]
 80046b2:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 80046b6:	687b      	ldr	r3, [r7, #4]
 80046b8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80046ba:	699b      	ldr	r3, [r3, #24]
 80046bc:	2b20      	cmp	r3, #32
 80046be:	d02a      	beq.n	8004716 <HAL_UART_IRQHandler+0x2e6>
 80046c0:	687b      	ldr	r3, [r7, #4]
 80046c2:	681b      	ldr	r3, [r3, #0]
 80046c4:	681a      	ldr	r2, [r3, #0]
 80046c6:	687b      	ldr	r3, [r7, #4]
 80046c8:	681b      	ldr	r3, [r3, #0]
 80046ca:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80046ce:	601a      	str	r2, [r3, #0]
 80046d0:	687b      	ldr	r3, [r7, #4]
 80046d2:	681b      	ldr	r3, [r3, #0]
 80046d4:	689a      	ldr	r2, [r3, #8]
 80046d6:	687b      	ldr	r3, [r7, #4]
 80046d8:	681b      	ldr	r3, [r3, #0]
 80046da:	f022 0201 	bic.w	r2, r2, #1
 80046de:	609a      	str	r2, [r3, #8]
 80046e0:	687b      	ldr	r3, [r7, #4]
 80046e2:	681b      	ldr	r3, [r3, #0]
 80046e4:	689a      	ldr	r2, [r3, #8]
 80046e6:	687b      	ldr	r3, [r7, #4]
 80046e8:	681b      	ldr	r3, [r3, #0]
 80046ea:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80046ee:	609a      	str	r2, [r3, #8]
 80046f0:	687b      	ldr	r3, [r7, #4]
 80046f2:	2220      	movs	r2, #32
 80046f4:	67da      	str	r2, [r3, #124]	; 0x7c
 80046f6:	687b      	ldr	r3, [r7, #4]
 80046f8:	2200      	movs	r2, #0
 80046fa:	661a      	str	r2, [r3, #96]	; 0x60
 80046fc:	687b      	ldr	r3, [r7, #4]
 80046fe:	681b      	ldr	r3, [r3, #0]
 8004700:	681a      	ldr	r2, [r3, #0]
 8004702:	687b      	ldr	r3, [r7, #4]
 8004704:	681b      	ldr	r3, [r3, #0]
 8004706:	f022 0210 	bic.w	r2, r2, #16
 800470a:	601a      	str	r2, [r3, #0]
 800470c:	687b      	ldr	r3, [r7, #4]
 800470e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004710:	4618      	mov	r0, r3
 8004712:	f7fd fc58 	bl	8001fc6 <HAL_DMA_Abort>
 8004716:	687b      	ldr	r3, [r7, #4]
 8004718:	f8b3 2058 	ldrh.w	r2, [r3, #88]	; 0x58
 800471c:	687b      	ldr	r3, [r7, #4]
 800471e:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8004722:	b29b      	uxth	r3, r3
 8004724:	1ad3      	subs	r3, r2, r3
 8004726:	b29b      	uxth	r3, r3
 8004728:	4619      	mov	r1, r3
 800472a:	6878      	ldr	r0, [r7, #4]
 800472c:	f000 f894 	bl	8004858 <HAL_UARTEx_RxEventCallback>
 8004730:	e075      	b.n	800481e <HAL_UART_IRQHandler+0x3ee>
 8004732:	bf00      	nop
 8004734:	04000120 	.word	0x04000120
 8004738:	08004f49 	.word	0x08004f49
 800473c:	687b      	ldr	r3, [r7, #4]
 800473e:	f8b3 2058 	ldrh.w	r2, [r3, #88]	; 0x58
 8004742:	687b      	ldr	r3, [r7, #4]
 8004744:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8004748:	b29b      	uxth	r3, r3
 800474a:	1ad3      	subs	r3, r2, r3
 800474c:	817b      	strh	r3, [r7, #10]
 800474e:	687b      	ldr	r3, [r7, #4]
 8004750:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8004754:	b29b      	uxth	r3, r3
 8004756:	2b00      	cmp	r3, #0
 8004758:	d063      	beq.n	8004822 <HAL_UART_IRQHandler+0x3f2>
 800475a:	897b      	ldrh	r3, [r7, #10]
 800475c:	2b00      	cmp	r3, #0
 800475e:	d060      	beq.n	8004822 <HAL_UART_IRQHandler+0x3f2>
 8004760:	687b      	ldr	r3, [r7, #4]
 8004762:	681b      	ldr	r3, [r3, #0]
 8004764:	681a      	ldr	r2, [r3, #0]
 8004766:	687b      	ldr	r3, [r7, #4]
 8004768:	681b      	ldr	r3, [r3, #0]
 800476a:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 800476e:	601a      	str	r2, [r3, #0]
 8004770:	687b      	ldr	r3, [r7, #4]
 8004772:	681b      	ldr	r3, [r3, #0]
 8004774:	689a      	ldr	r2, [r3, #8]
 8004776:	687b      	ldr	r3, [r7, #4]
 8004778:	681b      	ldr	r3, [r3, #0]
 800477a:	f022 0201 	bic.w	r2, r2, #1
 800477e:	609a      	str	r2, [r3, #8]
 8004780:	687b      	ldr	r3, [r7, #4]
 8004782:	2220      	movs	r2, #32
 8004784:	67da      	str	r2, [r3, #124]	; 0x7c
 8004786:	687b      	ldr	r3, [r7, #4]
 8004788:	2200      	movs	r2, #0
 800478a:	661a      	str	r2, [r3, #96]	; 0x60
 800478c:	687b      	ldr	r3, [r7, #4]
 800478e:	2200      	movs	r2, #0
 8004790:	665a      	str	r2, [r3, #100]	; 0x64
 8004792:	687b      	ldr	r3, [r7, #4]
 8004794:	681b      	ldr	r3, [r3, #0]
 8004796:	681a      	ldr	r2, [r3, #0]
 8004798:	687b      	ldr	r3, [r7, #4]
 800479a:	681b      	ldr	r3, [r3, #0]
 800479c:	f022 0210 	bic.w	r2, r2, #16
 80047a0:	601a      	str	r2, [r3, #0]
 80047a2:	897b      	ldrh	r3, [r7, #10]
 80047a4:	4619      	mov	r1, r3
 80047a6:	6878      	ldr	r0, [r7, #4]
 80047a8:	f000 f856 	bl	8004858 <HAL_UARTEx_RxEventCallback>
 80047ac:	e039      	b.n	8004822 <HAL_UART_IRQHandler+0x3f2>
 80047ae:	69fb      	ldr	r3, [r7, #28]
 80047b0:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80047b4:	2b00      	cmp	r3, #0
 80047b6:	d00d      	beq.n	80047d4 <HAL_UART_IRQHandler+0x3a4>
 80047b8:	697b      	ldr	r3, [r7, #20]
 80047ba:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80047be:	2b00      	cmp	r3, #0
 80047c0:	d008      	beq.n	80047d4 <HAL_UART_IRQHandler+0x3a4>
 80047c2:	687b      	ldr	r3, [r7, #4]
 80047c4:	681b      	ldr	r3, [r3, #0]
 80047c6:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 80047ca:	621a      	str	r2, [r3, #32]
 80047cc:	6878      	ldr	r0, [r7, #4]
 80047ce:	f000 fbea 	bl	8004fa6 <HAL_UARTEx_WakeupCallback>
 80047d2:	e029      	b.n	8004828 <HAL_UART_IRQHandler+0x3f8>
 80047d4:	69fb      	ldr	r3, [r7, #28]
 80047d6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80047da:	2b00      	cmp	r3, #0
 80047dc:	d00d      	beq.n	80047fa <HAL_UART_IRQHandler+0x3ca>
 80047de:	69bb      	ldr	r3, [r7, #24]
 80047e0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80047e4:	2b00      	cmp	r3, #0
 80047e6:	d008      	beq.n	80047fa <HAL_UART_IRQHandler+0x3ca>
 80047e8:	687b      	ldr	r3, [r7, #4]
 80047ea:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80047ec:	2b00      	cmp	r3, #0
 80047ee:	d01a      	beq.n	8004826 <HAL_UART_IRQHandler+0x3f6>
 80047f0:	687b      	ldr	r3, [r7, #4]
 80047f2:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80047f4:	6878      	ldr	r0, [r7, #4]
 80047f6:	4798      	blx	r3
 80047f8:	e015      	b.n	8004826 <HAL_UART_IRQHandler+0x3f6>
 80047fa:	69fb      	ldr	r3, [r7, #28]
 80047fc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004800:	2b00      	cmp	r3, #0
 8004802:	d011      	beq.n	8004828 <HAL_UART_IRQHandler+0x3f8>
 8004804:	69bb      	ldr	r3, [r7, #24]
 8004806:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800480a:	2b00      	cmp	r3, #0
 800480c:	d00c      	beq.n	8004828 <HAL_UART_IRQHandler+0x3f8>
 800480e:	6878      	ldr	r0, [r7, #4]
 8004810:	f000 fbb0 	bl	8004f74 <UART_EndTransmit_IT>
 8004814:	e008      	b.n	8004828 <HAL_UART_IRQHandler+0x3f8>
 8004816:	bf00      	nop
 8004818:	e006      	b.n	8004828 <HAL_UART_IRQHandler+0x3f8>
 800481a:	bf00      	nop
 800481c:	e004      	b.n	8004828 <HAL_UART_IRQHandler+0x3f8>
 800481e:	bf00      	nop
 8004820:	e002      	b.n	8004828 <HAL_UART_IRQHandler+0x3f8>
 8004822:	bf00      	nop
 8004824:	e000      	b.n	8004828 <HAL_UART_IRQHandler+0x3f8>
 8004826:	bf00      	nop
 8004828:	3720      	adds	r7, #32
 800482a:	46bd      	mov	sp, r7
 800482c:	bd80      	pop	{r7, pc}
 800482e:	bf00      	nop

08004830 <HAL_UART_TxCpltCallback>:
 8004830:	b480      	push	{r7}
 8004832:	b083      	sub	sp, #12
 8004834:	af00      	add	r7, sp, #0
 8004836:	6078      	str	r0, [r7, #4]
 8004838:	bf00      	nop
 800483a:	370c      	adds	r7, #12
 800483c:	46bd      	mov	sp, r7
 800483e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004842:	4770      	bx	lr

08004844 <HAL_UART_ErrorCallback>:
 8004844:	b480      	push	{r7}
 8004846:	b083      	sub	sp, #12
 8004848:	af00      	add	r7, sp, #0
 800484a:	6078      	str	r0, [r7, #4]
 800484c:	bf00      	nop
 800484e:	370c      	adds	r7, #12
 8004850:	46bd      	mov	sp, r7
 8004852:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004856:	4770      	bx	lr

08004858 <HAL_UARTEx_RxEventCallback>:
 8004858:	b480      	push	{r7}
 800485a:	b083      	sub	sp, #12
 800485c:	af00      	add	r7, sp, #0
 800485e:	6078      	str	r0, [r7, #4]
 8004860:	460b      	mov	r3, r1
 8004862:	807b      	strh	r3, [r7, #2]
 8004864:	bf00      	nop
 8004866:	370c      	adds	r7, #12
 8004868:	46bd      	mov	sp, r7
 800486a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800486e:	4770      	bx	lr

08004870 <UART_SetConfig>:
 8004870:	b580      	push	{r7, lr}
 8004872:	b088      	sub	sp, #32
 8004874:	af00      	add	r7, sp, #0
 8004876:	6078      	str	r0, [r7, #4]
 8004878:	2300      	movs	r3, #0
 800487a:	77bb      	strb	r3, [r7, #30]
 800487c:	687b      	ldr	r3, [r7, #4]
 800487e:	689a      	ldr	r2, [r3, #8]
 8004880:	687b      	ldr	r3, [r7, #4]
 8004882:	691b      	ldr	r3, [r3, #16]
 8004884:	431a      	orrs	r2, r3
 8004886:	687b      	ldr	r3, [r7, #4]
 8004888:	695b      	ldr	r3, [r3, #20]
 800488a:	431a      	orrs	r2, r3
 800488c:	687b      	ldr	r3, [r7, #4]
 800488e:	69db      	ldr	r3, [r3, #28]
 8004890:	4313      	orrs	r3, r2
 8004892:	617b      	str	r3, [r7, #20]
 8004894:	687b      	ldr	r3, [r7, #4]
 8004896:	681b      	ldr	r3, [r3, #0]
 8004898:	681a      	ldr	r2, [r3, #0]
 800489a:	4bab      	ldr	r3, [pc, #684]	; (8004b48 <UART_SetConfig+0x2d8>)
 800489c:	4013      	ands	r3, r2
 800489e:	687a      	ldr	r2, [r7, #4]
 80048a0:	6812      	ldr	r2, [r2, #0]
 80048a2:	6979      	ldr	r1, [r7, #20]
 80048a4:	430b      	orrs	r3, r1
 80048a6:	6013      	str	r3, [r2, #0]
 80048a8:	687b      	ldr	r3, [r7, #4]
 80048aa:	681b      	ldr	r3, [r3, #0]
 80048ac:	685b      	ldr	r3, [r3, #4]
 80048ae:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 80048b2:	687b      	ldr	r3, [r7, #4]
 80048b4:	68da      	ldr	r2, [r3, #12]
 80048b6:	687b      	ldr	r3, [r7, #4]
 80048b8:	681b      	ldr	r3, [r3, #0]
 80048ba:	430a      	orrs	r2, r1
 80048bc:	605a      	str	r2, [r3, #4]
 80048be:	687b      	ldr	r3, [r7, #4]
 80048c0:	699b      	ldr	r3, [r3, #24]
 80048c2:	617b      	str	r3, [r7, #20]
 80048c4:	687b      	ldr	r3, [r7, #4]
 80048c6:	6a1b      	ldr	r3, [r3, #32]
 80048c8:	697a      	ldr	r2, [r7, #20]
 80048ca:	4313      	orrs	r3, r2
 80048cc:	617b      	str	r3, [r7, #20]
 80048ce:	687b      	ldr	r3, [r7, #4]
 80048d0:	681b      	ldr	r3, [r3, #0]
 80048d2:	689b      	ldr	r3, [r3, #8]
 80048d4:	f423 6130 	bic.w	r1, r3, #2816	; 0xb00
 80048d8:	687b      	ldr	r3, [r7, #4]
 80048da:	681b      	ldr	r3, [r3, #0]
 80048dc:	697a      	ldr	r2, [r7, #20]
 80048de:	430a      	orrs	r2, r1
 80048e0:	609a      	str	r2, [r3, #8]
 80048e2:	687b      	ldr	r3, [r7, #4]
 80048e4:	681b      	ldr	r3, [r3, #0]
 80048e6:	4a99      	ldr	r2, [pc, #612]	; (8004b4c <UART_SetConfig+0x2dc>)
 80048e8:	4293      	cmp	r3, r2
 80048ea:	d120      	bne.n	800492e <UART_SetConfig+0xbe>
 80048ec:	4b98      	ldr	r3, [pc, #608]	; (8004b50 <UART_SetConfig+0x2e0>)
 80048ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80048f0:	f003 0303 	and.w	r3, r3, #3
 80048f4:	2b03      	cmp	r3, #3
 80048f6:	d817      	bhi.n	8004928 <UART_SetConfig+0xb8>
 80048f8:	a201      	add	r2, pc, #4	; (adr r2, 8004900 <UART_SetConfig+0x90>)
 80048fa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80048fe:	bf00      	nop
 8004900:	08004911 	.word	0x08004911
 8004904:	0800491d 	.word	0x0800491d
 8004908:	08004923 	.word	0x08004923
 800490c:	08004917 	.word	0x08004917
 8004910:	2301      	movs	r3, #1
 8004912:	77fb      	strb	r3, [r7, #31]
 8004914:	e0b5      	b.n	8004a82 <UART_SetConfig+0x212>
 8004916:	2302      	movs	r3, #2
 8004918:	77fb      	strb	r3, [r7, #31]
 800491a:	e0b2      	b.n	8004a82 <UART_SetConfig+0x212>
 800491c:	2304      	movs	r3, #4
 800491e:	77fb      	strb	r3, [r7, #31]
 8004920:	e0af      	b.n	8004a82 <UART_SetConfig+0x212>
 8004922:	2308      	movs	r3, #8
 8004924:	77fb      	strb	r3, [r7, #31]
 8004926:	e0ac      	b.n	8004a82 <UART_SetConfig+0x212>
 8004928:	2310      	movs	r3, #16
 800492a:	77fb      	strb	r3, [r7, #31]
 800492c:	e0a9      	b.n	8004a82 <UART_SetConfig+0x212>
 800492e:	687b      	ldr	r3, [r7, #4]
 8004930:	681b      	ldr	r3, [r3, #0]
 8004932:	4a88      	ldr	r2, [pc, #544]	; (8004b54 <UART_SetConfig+0x2e4>)
 8004934:	4293      	cmp	r3, r2
 8004936:	d124      	bne.n	8004982 <UART_SetConfig+0x112>
 8004938:	4b85      	ldr	r3, [pc, #532]	; (8004b50 <UART_SetConfig+0x2e0>)
 800493a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800493c:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8004940:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8004944:	d011      	beq.n	800496a <UART_SetConfig+0xfa>
 8004946:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 800494a:	d817      	bhi.n	800497c <UART_SetConfig+0x10c>
 800494c:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8004950:	d011      	beq.n	8004976 <UART_SetConfig+0x106>
 8004952:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8004956:	d811      	bhi.n	800497c <UART_SetConfig+0x10c>
 8004958:	2b00      	cmp	r3, #0
 800495a:	d003      	beq.n	8004964 <UART_SetConfig+0xf4>
 800495c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004960:	d006      	beq.n	8004970 <UART_SetConfig+0x100>
 8004962:	e00b      	b.n	800497c <UART_SetConfig+0x10c>
 8004964:	2300      	movs	r3, #0
 8004966:	77fb      	strb	r3, [r7, #31]
 8004968:	e08b      	b.n	8004a82 <UART_SetConfig+0x212>
 800496a:	2302      	movs	r3, #2
 800496c:	77fb      	strb	r3, [r7, #31]
 800496e:	e088      	b.n	8004a82 <UART_SetConfig+0x212>
 8004970:	2304      	movs	r3, #4
 8004972:	77fb      	strb	r3, [r7, #31]
 8004974:	e085      	b.n	8004a82 <UART_SetConfig+0x212>
 8004976:	2308      	movs	r3, #8
 8004978:	77fb      	strb	r3, [r7, #31]
 800497a:	e082      	b.n	8004a82 <UART_SetConfig+0x212>
 800497c:	2310      	movs	r3, #16
 800497e:	77fb      	strb	r3, [r7, #31]
 8004980:	e07f      	b.n	8004a82 <UART_SetConfig+0x212>
 8004982:	687b      	ldr	r3, [r7, #4]
 8004984:	681b      	ldr	r3, [r3, #0]
 8004986:	4a74      	ldr	r2, [pc, #464]	; (8004b58 <UART_SetConfig+0x2e8>)
 8004988:	4293      	cmp	r3, r2
 800498a:	d124      	bne.n	80049d6 <UART_SetConfig+0x166>
 800498c:	4b70      	ldr	r3, [pc, #448]	; (8004b50 <UART_SetConfig+0x2e0>)
 800498e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004990:	f403 2340 	and.w	r3, r3, #786432	; 0xc0000
 8004994:	f5b3 2f40 	cmp.w	r3, #786432	; 0xc0000
 8004998:	d011      	beq.n	80049be <UART_SetConfig+0x14e>
 800499a:	f5b3 2f40 	cmp.w	r3, #786432	; 0xc0000
 800499e:	d817      	bhi.n	80049d0 <UART_SetConfig+0x160>
 80049a0:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
 80049a4:	d011      	beq.n	80049ca <UART_SetConfig+0x15a>
 80049a6:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
 80049aa:	d811      	bhi.n	80049d0 <UART_SetConfig+0x160>
 80049ac:	2b00      	cmp	r3, #0
 80049ae:	d003      	beq.n	80049b8 <UART_SetConfig+0x148>
 80049b0:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 80049b4:	d006      	beq.n	80049c4 <UART_SetConfig+0x154>
 80049b6:	e00b      	b.n	80049d0 <UART_SetConfig+0x160>
 80049b8:	2300      	movs	r3, #0
 80049ba:	77fb      	strb	r3, [r7, #31]
 80049bc:	e061      	b.n	8004a82 <UART_SetConfig+0x212>
 80049be:	2302      	movs	r3, #2
 80049c0:	77fb      	strb	r3, [r7, #31]
 80049c2:	e05e      	b.n	8004a82 <UART_SetConfig+0x212>
 80049c4:	2304      	movs	r3, #4
 80049c6:	77fb      	strb	r3, [r7, #31]
 80049c8:	e05b      	b.n	8004a82 <UART_SetConfig+0x212>
 80049ca:	2308      	movs	r3, #8
 80049cc:	77fb      	strb	r3, [r7, #31]
 80049ce:	e058      	b.n	8004a82 <UART_SetConfig+0x212>
 80049d0:	2310      	movs	r3, #16
 80049d2:	77fb      	strb	r3, [r7, #31]
 80049d4:	e055      	b.n	8004a82 <UART_SetConfig+0x212>
 80049d6:	687b      	ldr	r3, [r7, #4]
 80049d8:	681b      	ldr	r3, [r3, #0]
 80049da:	4a60      	ldr	r2, [pc, #384]	; (8004b5c <UART_SetConfig+0x2ec>)
 80049dc:	4293      	cmp	r3, r2
 80049de:	d124      	bne.n	8004a2a <UART_SetConfig+0x1ba>
 80049e0:	4b5b      	ldr	r3, [pc, #364]	; (8004b50 <UART_SetConfig+0x2e0>)
 80049e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80049e4:	f403 1340 	and.w	r3, r3, #3145728	; 0x300000
 80049e8:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 80049ec:	d011      	beq.n	8004a12 <UART_SetConfig+0x1a2>
 80049ee:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 80049f2:	d817      	bhi.n	8004a24 <UART_SetConfig+0x1b4>
 80049f4:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80049f8:	d011      	beq.n	8004a1e <UART_SetConfig+0x1ae>
 80049fa:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80049fe:	d811      	bhi.n	8004a24 <UART_SetConfig+0x1b4>
 8004a00:	2b00      	cmp	r3, #0
 8004a02:	d003      	beq.n	8004a0c <UART_SetConfig+0x19c>
 8004a04:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8004a08:	d006      	beq.n	8004a18 <UART_SetConfig+0x1a8>
 8004a0a:	e00b      	b.n	8004a24 <UART_SetConfig+0x1b4>
 8004a0c:	2300      	movs	r3, #0
 8004a0e:	77fb      	strb	r3, [r7, #31]
 8004a10:	e037      	b.n	8004a82 <UART_SetConfig+0x212>
 8004a12:	2302      	movs	r3, #2
 8004a14:	77fb      	strb	r3, [r7, #31]
 8004a16:	e034      	b.n	8004a82 <UART_SetConfig+0x212>
 8004a18:	2304      	movs	r3, #4
 8004a1a:	77fb      	strb	r3, [r7, #31]
 8004a1c:	e031      	b.n	8004a82 <UART_SetConfig+0x212>
 8004a1e:	2308      	movs	r3, #8
 8004a20:	77fb      	strb	r3, [r7, #31]
 8004a22:	e02e      	b.n	8004a82 <UART_SetConfig+0x212>
 8004a24:	2310      	movs	r3, #16
 8004a26:	77fb      	strb	r3, [r7, #31]
 8004a28:	e02b      	b.n	8004a82 <UART_SetConfig+0x212>
 8004a2a:	687b      	ldr	r3, [r7, #4]
 8004a2c:	681b      	ldr	r3, [r3, #0]
 8004a2e:	4a4c      	ldr	r2, [pc, #304]	; (8004b60 <UART_SetConfig+0x2f0>)
 8004a30:	4293      	cmp	r3, r2
 8004a32:	d124      	bne.n	8004a7e <UART_SetConfig+0x20e>
 8004a34:	4b46      	ldr	r3, [pc, #280]	; (8004b50 <UART_SetConfig+0x2e0>)
 8004a36:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004a38:	f403 0340 	and.w	r3, r3, #12582912	; 0xc00000
 8004a3c:	f5b3 0f40 	cmp.w	r3, #12582912	; 0xc00000
 8004a40:	d011      	beq.n	8004a66 <UART_SetConfig+0x1f6>
 8004a42:	f5b3 0f40 	cmp.w	r3, #12582912	; 0xc00000
 8004a46:	d817      	bhi.n	8004a78 <UART_SetConfig+0x208>
 8004a48:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8004a4c:	d011      	beq.n	8004a72 <UART_SetConfig+0x202>
 8004a4e:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8004a52:	d811      	bhi.n	8004a78 <UART_SetConfig+0x208>
 8004a54:	2b00      	cmp	r3, #0
 8004a56:	d003      	beq.n	8004a60 <UART_SetConfig+0x1f0>
 8004a58:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8004a5c:	d006      	beq.n	8004a6c <UART_SetConfig+0x1fc>
 8004a5e:	e00b      	b.n	8004a78 <UART_SetConfig+0x208>
 8004a60:	2300      	movs	r3, #0
 8004a62:	77fb      	strb	r3, [r7, #31]
 8004a64:	e00d      	b.n	8004a82 <UART_SetConfig+0x212>
 8004a66:	2302      	movs	r3, #2
 8004a68:	77fb      	strb	r3, [r7, #31]
 8004a6a:	e00a      	b.n	8004a82 <UART_SetConfig+0x212>
 8004a6c:	2304      	movs	r3, #4
 8004a6e:	77fb      	strb	r3, [r7, #31]
 8004a70:	e007      	b.n	8004a82 <UART_SetConfig+0x212>
 8004a72:	2308      	movs	r3, #8
 8004a74:	77fb      	strb	r3, [r7, #31]
 8004a76:	e004      	b.n	8004a82 <UART_SetConfig+0x212>
 8004a78:	2310      	movs	r3, #16
 8004a7a:	77fb      	strb	r3, [r7, #31]
 8004a7c:	e001      	b.n	8004a82 <UART_SetConfig+0x212>
 8004a7e:	2310      	movs	r3, #16
 8004a80:	77fb      	strb	r3, [r7, #31]
 8004a82:	687b      	ldr	r3, [r7, #4]
 8004a84:	69db      	ldr	r3, [r3, #28]
 8004a86:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8004a8a:	d16d      	bne.n	8004b68 <UART_SetConfig+0x2f8>
 8004a8c:	7ffb      	ldrb	r3, [r7, #31]
 8004a8e:	2b08      	cmp	r3, #8
 8004a90:	d827      	bhi.n	8004ae2 <UART_SetConfig+0x272>
 8004a92:	a201      	add	r2, pc, #4	; (adr r2, 8004a98 <UART_SetConfig+0x228>)
 8004a94:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004a98:	08004abd 	.word	0x08004abd
 8004a9c:	08004ac5 	.word	0x08004ac5
 8004aa0:	08004acd 	.word	0x08004acd
 8004aa4:	08004ae3 	.word	0x08004ae3
 8004aa8:	08004ad3 	.word	0x08004ad3
 8004aac:	08004ae3 	.word	0x08004ae3
 8004ab0:	08004ae3 	.word	0x08004ae3
 8004ab4:	08004ae3 	.word	0x08004ae3
 8004ab8:	08004adb 	.word	0x08004adb
 8004abc:	f7fe fe50 	bl	8003760 <HAL_RCC_GetPCLK1Freq>
 8004ac0:	61b8      	str	r0, [r7, #24]
 8004ac2:	e013      	b.n	8004aec <UART_SetConfig+0x27c>
 8004ac4:	f7fe fe6e 	bl	80037a4 <HAL_RCC_GetPCLK2Freq>
 8004ac8:	61b8      	str	r0, [r7, #24]
 8004aca:	e00f      	b.n	8004aec <UART_SetConfig+0x27c>
 8004acc:	4b25      	ldr	r3, [pc, #148]	; (8004b64 <UART_SetConfig+0x2f4>)
 8004ace:	61bb      	str	r3, [r7, #24]
 8004ad0:	e00c      	b.n	8004aec <UART_SetConfig+0x27c>
 8004ad2:	f7fe fdcf 	bl	8003674 <HAL_RCC_GetSysClockFreq>
 8004ad6:	61b8      	str	r0, [r7, #24]
 8004ad8:	e008      	b.n	8004aec <UART_SetConfig+0x27c>
 8004ada:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8004ade:	61bb      	str	r3, [r7, #24]
 8004ae0:	e004      	b.n	8004aec <UART_SetConfig+0x27c>
 8004ae2:	2300      	movs	r3, #0
 8004ae4:	61bb      	str	r3, [r7, #24]
 8004ae6:	2301      	movs	r3, #1
 8004ae8:	77bb      	strb	r3, [r7, #30]
 8004aea:	bf00      	nop
 8004aec:	69bb      	ldr	r3, [r7, #24]
 8004aee:	2b00      	cmp	r3, #0
 8004af0:	f000 8086 	beq.w	8004c00 <UART_SetConfig+0x390>
 8004af4:	69bb      	ldr	r3, [r7, #24]
 8004af6:	005a      	lsls	r2, r3, #1
 8004af8:	687b      	ldr	r3, [r7, #4]
 8004afa:	685b      	ldr	r3, [r3, #4]
 8004afc:	085b      	lsrs	r3, r3, #1
 8004afe:	441a      	add	r2, r3
 8004b00:	687b      	ldr	r3, [r7, #4]
 8004b02:	685b      	ldr	r3, [r3, #4]
 8004b04:	fbb2 f3f3 	udiv	r3, r2, r3
 8004b08:	b29b      	uxth	r3, r3
 8004b0a:	613b      	str	r3, [r7, #16]
 8004b0c:	693b      	ldr	r3, [r7, #16]
 8004b0e:	2b0f      	cmp	r3, #15
 8004b10:	d916      	bls.n	8004b40 <UART_SetConfig+0x2d0>
 8004b12:	693b      	ldr	r3, [r7, #16]
 8004b14:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004b18:	d212      	bcs.n	8004b40 <UART_SetConfig+0x2d0>
 8004b1a:	693b      	ldr	r3, [r7, #16]
 8004b1c:	b29b      	uxth	r3, r3
 8004b1e:	f023 030f 	bic.w	r3, r3, #15
 8004b22:	81fb      	strh	r3, [r7, #14]
 8004b24:	693b      	ldr	r3, [r7, #16]
 8004b26:	085b      	lsrs	r3, r3, #1
 8004b28:	b29b      	uxth	r3, r3
 8004b2a:	f003 0307 	and.w	r3, r3, #7
 8004b2e:	b29a      	uxth	r2, r3
 8004b30:	89fb      	ldrh	r3, [r7, #14]
 8004b32:	4313      	orrs	r3, r2
 8004b34:	81fb      	strh	r3, [r7, #14]
 8004b36:	687b      	ldr	r3, [r7, #4]
 8004b38:	681b      	ldr	r3, [r3, #0]
 8004b3a:	89fa      	ldrh	r2, [r7, #14]
 8004b3c:	60da      	str	r2, [r3, #12]
 8004b3e:	e05f      	b.n	8004c00 <UART_SetConfig+0x390>
 8004b40:	2301      	movs	r3, #1
 8004b42:	77bb      	strb	r3, [r7, #30]
 8004b44:	e05c      	b.n	8004c00 <UART_SetConfig+0x390>
 8004b46:	bf00      	nop
 8004b48:	efff69f3 	.word	0xefff69f3
 8004b4c:	40013800 	.word	0x40013800
 8004b50:	40021000 	.word	0x40021000
 8004b54:	40004400 	.word	0x40004400
 8004b58:	40004800 	.word	0x40004800
 8004b5c:	40004c00 	.word	0x40004c00
 8004b60:	40005000 	.word	0x40005000
 8004b64:	007a1200 	.word	0x007a1200
 8004b68:	7ffb      	ldrb	r3, [r7, #31]
 8004b6a:	2b08      	cmp	r3, #8
 8004b6c:	d827      	bhi.n	8004bbe <UART_SetConfig+0x34e>
 8004b6e:	a201      	add	r2, pc, #4	; (adr r2, 8004b74 <UART_SetConfig+0x304>)
 8004b70:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004b74:	08004b99 	.word	0x08004b99
 8004b78:	08004ba1 	.word	0x08004ba1
 8004b7c:	08004ba9 	.word	0x08004ba9
 8004b80:	08004bbf 	.word	0x08004bbf
 8004b84:	08004baf 	.word	0x08004baf
 8004b88:	08004bbf 	.word	0x08004bbf
 8004b8c:	08004bbf 	.word	0x08004bbf
 8004b90:	08004bbf 	.word	0x08004bbf
 8004b94:	08004bb7 	.word	0x08004bb7
 8004b98:	f7fe fde2 	bl	8003760 <HAL_RCC_GetPCLK1Freq>
 8004b9c:	61b8      	str	r0, [r7, #24]
 8004b9e:	e013      	b.n	8004bc8 <UART_SetConfig+0x358>
 8004ba0:	f7fe fe00 	bl	80037a4 <HAL_RCC_GetPCLK2Freq>
 8004ba4:	61b8      	str	r0, [r7, #24]
 8004ba6:	e00f      	b.n	8004bc8 <UART_SetConfig+0x358>
 8004ba8:	4b1b      	ldr	r3, [pc, #108]	; (8004c18 <UART_SetConfig+0x3a8>)
 8004baa:	61bb      	str	r3, [r7, #24]
 8004bac:	e00c      	b.n	8004bc8 <UART_SetConfig+0x358>
 8004bae:	f7fe fd61 	bl	8003674 <HAL_RCC_GetSysClockFreq>
 8004bb2:	61b8      	str	r0, [r7, #24]
 8004bb4:	e008      	b.n	8004bc8 <UART_SetConfig+0x358>
 8004bb6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8004bba:	61bb      	str	r3, [r7, #24]
 8004bbc:	e004      	b.n	8004bc8 <UART_SetConfig+0x358>
 8004bbe:	2300      	movs	r3, #0
 8004bc0:	61bb      	str	r3, [r7, #24]
 8004bc2:	2301      	movs	r3, #1
 8004bc4:	77bb      	strb	r3, [r7, #30]
 8004bc6:	bf00      	nop
 8004bc8:	69bb      	ldr	r3, [r7, #24]
 8004bca:	2b00      	cmp	r3, #0
 8004bcc:	d018      	beq.n	8004c00 <UART_SetConfig+0x390>
 8004bce:	687b      	ldr	r3, [r7, #4]
 8004bd0:	685b      	ldr	r3, [r3, #4]
 8004bd2:	085a      	lsrs	r2, r3, #1
 8004bd4:	69bb      	ldr	r3, [r7, #24]
 8004bd6:	441a      	add	r2, r3
 8004bd8:	687b      	ldr	r3, [r7, #4]
 8004bda:	685b      	ldr	r3, [r3, #4]
 8004bdc:	fbb2 f3f3 	udiv	r3, r2, r3
 8004be0:	b29b      	uxth	r3, r3
 8004be2:	613b      	str	r3, [r7, #16]
 8004be4:	693b      	ldr	r3, [r7, #16]
 8004be6:	2b0f      	cmp	r3, #15
 8004be8:	d908      	bls.n	8004bfc <UART_SetConfig+0x38c>
 8004bea:	693b      	ldr	r3, [r7, #16]
 8004bec:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004bf0:	d204      	bcs.n	8004bfc <UART_SetConfig+0x38c>
 8004bf2:	687b      	ldr	r3, [r7, #4]
 8004bf4:	681b      	ldr	r3, [r3, #0]
 8004bf6:	693a      	ldr	r2, [r7, #16]
 8004bf8:	60da      	str	r2, [r3, #12]
 8004bfa:	e001      	b.n	8004c00 <UART_SetConfig+0x390>
 8004bfc:	2301      	movs	r3, #1
 8004bfe:	77bb      	strb	r3, [r7, #30]
 8004c00:	687b      	ldr	r3, [r7, #4]
 8004c02:	2200      	movs	r2, #0
 8004c04:	665a      	str	r2, [r3, #100]	; 0x64
 8004c06:	687b      	ldr	r3, [r7, #4]
 8004c08:	2200      	movs	r2, #0
 8004c0a:	669a      	str	r2, [r3, #104]	; 0x68
 8004c0c:	7fbb      	ldrb	r3, [r7, #30]
 8004c0e:	4618      	mov	r0, r3
 8004c10:	3720      	adds	r7, #32
 8004c12:	46bd      	mov	sp, r7
 8004c14:	bd80      	pop	{r7, pc}
 8004c16:	bf00      	nop
 8004c18:	007a1200 	.word	0x007a1200

08004c1c <UART_AdvFeatureConfig>:
 8004c1c:	b480      	push	{r7}
 8004c1e:	b083      	sub	sp, #12
 8004c20:	af00      	add	r7, sp, #0
 8004c22:	6078      	str	r0, [r7, #4]
 8004c24:	687b      	ldr	r3, [r7, #4]
 8004c26:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c28:	f003 0301 	and.w	r3, r3, #1
 8004c2c:	2b00      	cmp	r3, #0
 8004c2e:	d00a      	beq.n	8004c46 <UART_AdvFeatureConfig+0x2a>
 8004c30:	687b      	ldr	r3, [r7, #4]
 8004c32:	681b      	ldr	r3, [r3, #0]
 8004c34:	685b      	ldr	r3, [r3, #4]
 8004c36:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 8004c3a:	687b      	ldr	r3, [r7, #4]
 8004c3c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004c3e:	687b      	ldr	r3, [r7, #4]
 8004c40:	681b      	ldr	r3, [r3, #0]
 8004c42:	430a      	orrs	r2, r1
 8004c44:	605a      	str	r2, [r3, #4]
 8004c46:	687b      	ldr	r3, [r7, #4]
 8004c48:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c4a:	f003 0302 	and.w	r3, r3, #2
 8004c4e:	2b00      	cmp	r3, #0
 8004c50:	d00a      	beq.n	8004c68 <UART_AdvFeatureConfig+0x4c>
 8004c52:	687b      	ldr	r3, [r7, #4]
 8004c54:	681b      	ldr	r3, [r3, #0]
 8004c56:	685b      	ldr	r3, [r3, #4]
 8004c58:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 8004c5c:	687b      	ldr	r3, [r7, #4]
 8004c5e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004c60:	687b      	ldr	r3, [r7, #4]
 8004c62:	681b      	ldr	r3, [r3, #0]
 8004c64:	430a      	orrs	r2, r1
 8004c66:	605a      	str	r2, [r3, #4]
 8004c68:	687b      	ldr	r3, [r7, #4]
 8004c6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c6c:	f003 0304 	and.w	r3, r3, #4
 8004c70:	2b00      	cmp	r3, #0
 8004c72:	d00a      	beq.n	8004c8a <UART_AdvFeatureConfig+0x6e>
 8004c74:	687b      	ldr	r3, [r7, #4]
 8004c76:	681b      	ldr	r3, [r3, #0]
 8004c78:	685b      	ldr	r3, [r3, #4]
 8004c7a:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 8004c7e:	687b      	ldr	r3, [r7, #4]
 8004c80:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004c82:	687b      	ldr	r3, [r7, #4]
 8004c84:	681b      	ldr	r3, [r3, #0]
 8004c86:	430a      	orrs	r2, r1
 8004c88:	605a      	str	r2, [r3, #4]
 8004c8a:	687b      	ldr	r3, [r7, #4]
 8004c8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c8e:	f003 0308 	and.w	r3, r3, #8
 8004c92:	2b00      	cmp	r3, #0
 8004c94:	d00a      	beq.n	8004cac <UART_AdvFeatureConfig+0x90>
 8004c96:	687b      	ldr	r3, [r7, #4]
 8004c98:	681b      	ldr	r3, [r3, #0]
 8004c9a:	685b      	ldr	r3, [r3, #4]
 8004c9c:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 8004ca0:	687b      	ldr	r3, [r7, #4]
 8004ca2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004ca4:	687b      	ldr	r3, [r7, #4]
 8004ca6:	681b      	ldr	r3, [r3, #0]
 8004ca8:	430a      	orrs	r2, r1
 8004caa:	605a      	str	r2, [r3, #4]
 8004cac:	687b      	ldr	r3, [r7, #4]
 8004cae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cb0:	f003 0310 	and.w	r3, r3, #16
 8004cb4:	2b00      	cmp	r3, #0
 8004cb6:	d00a      	beq.n	8004cce <UART_AdvFeatureConfig+0xb2>
 8004cb8:	687b      	ldr	r3, [r7, #4]
 8004cba:	681b      	ldr	r3, [r3, #0]
 8004cbc:	689b      	ldr	r3, [r3, #8]
 8004cbe:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 8004cc2:	687b      	ldr	r3, [r7, #4]
 8004cc4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004cc6:	687b      	ldr	r3, [r7, #4]
 8004cc8:	681b      	ldr	r3, [r3, #0]
 8004cca:	430a      	orrs	r2, r1
 8004ccc:	609a      	str	r2, [r3, #8]
 8004cce:	687b      	ldr	r3, [r7, #4]
 8004cd0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cd2:	f003 0320 	and.w	r3, r3, #32
 8004cd6:	2b00      	cmp	r3, #0
 8004cd8:	d00a      	beq.n	8004cf0 <UART_AdvFeatureConfig+0xd4>
 8004cda:	687b      	ldr	r3, [r7, #4]
 8004cdc:	681b      	ldr	r3, [r3, #0]
 8004cde:	689b      	ldr	r3, [r3, #8]
 8004ce0:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 8004ce4:	687b      	ldr	r3, [r7, #4]
 8004ce6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8004ce8:	687b      	ldr	r3, [r7, #4]
 8004cea:	681b      	ldr	r3, [r3, #0]
 8004cec:	430a      	orrs	r2, r1
 8004cee:	609a      	str	r2, [r3, #8]
 8004cf0:	687b      	ldr	r3, [r7, #4]
 8004cf2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cf4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004cf8:	2b00      	cmp	r3, #0
 8004cfa:	d01a      	beq.n	8004d32 <UART_AdvFeatureConfig+0x116>
 8004cfc:	687b      	ldr	r3, [r7, #4]
 8004cfe:	681b      	ldr	r3, [r3, #0]
 8004d00:	685b      	ldr	r3, [r3, #4]
 8004d02:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 8004d06:	687b      	ldr	r3, [r7, #4]
 8004d08:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004d0a:	687b      	ldr	r3, [r7, #4]
 8004d0c:	681b      	ldr	r3, [r3, #0]
 8004d0e:	430a      	orrs	r2, r1
 8004d10:	605a      	str	r2, [r3, #4]
 8004d12:	687b      	ldr	r3, [r7, #4]
 8004d14:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004d16:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8004d1a:	d10a      	bne.n	8004d32 <UART_AdvFeatureConfig+0x116>
 8004d1c:	687b      	ldr	r3, [r7, #4]
 8004d1e:	681b      	ldr	r3, [r3, #0]
 8004d20:	685b      	ldr	r3, [r3, #4]
 8004d22:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 8004d26:	687b      	ldr	r3, [r7, #4]
 8004d28:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8004d2a:	687b      	ldr	r3, [r7, #4]
 8004d2c:	681b      	ldr	r3, [r3, #0]
 8004d2e:	430a      	orrs	r2, r1
 8004d30:	605a      	str	r2, [r3, #4]
 8004d32:	687b      	ldr	r3, [r7, #4]
 8004d34:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d36:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004d3a:	2b00      	cmp	r3, #0
 8004d3c:	d00a      	beq.n	8004d54 <UART_AdvFeatureConfig+0x138>
 8004d3e:	687b      	ldr	r3, [r7, #4]
 8004d40:	681b      	ldr	r3, [r3, #0]
 8004d42:	685b      	ldr	r3, [r3, #4]
 8004d44:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 8004d48:	687b      	ldr	r3, [r7, #4]
 8004d4a:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8004d4c:	687b      	ldr	r3, [r7, #4]
 8004d4e:	681b      	ldr	r3, [r3, #0]
 8004d50:	430a      	orrs	r2, r1
 8004d52:	605a      	str	r2, [r3, #4]
 8004d54:	bf00      	nop
 8004d56:	370c      	adds	r7, #12
 8004d58:	46bd      	mov	sp, r7
 8004d5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d5e:	4770      	bx	lr

08004d60 <UART_CheckIdleState>:
 8004d60:	b580      	push	{r7, lr}
 8004d62:	b086      	sub	sp, #24
 8004d64:	af02      	add	r7, sp, #8
 8004d66:	6078      	str	r0, [r7, #4]
 8004d68:	687b      	ldr	r3, [r7, #4]
 8004d6a:	2200      	movs	r2, #0
 8004d6c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8004d70:	f7fc ff96 	bl	8001ca0 <HAL_GetTick>
 8004d74:	60f8      	str	r0, [r7, #12]
 8004d76:	687b      	ldr	r3, [r7, #4]
 8004d78:	681b      	ldr	r3, [r3, #0]
 8004d7a:	681b      	ldr	r3, [r3, #0]
 8004d7c:	f003 0308 	and.w	r3, r3, #8
 8004d80:	2b08      	cmp	r3, #8
 8004d82:	d10e      	bne.n	8004da2 <UART_CheckIdleState+0x42>
 8004d84:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8004d88:	9300      	str	r3, [sp, #0]
 8004d8a:	68fb      	ldr	r3, [r7, #12]
 8004d8c:	2200      	movs	r2, #0
 8004d8e:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8004d92:	6878      	ldr	r0, [r7, #4]
 8004d94:	f000 f82d 	bl	8004df2 <UART_WaitOnFlagUntilTimeout>
 8004d98:	4603      	mov	r3, r0
 8004d9a:	2b00      	cmp	r3, #0
 8004d9c:	d001      	beq.n	8004da2 <UART_CheckIdleState+0x42>
 8004d9e:	2303      	movs	r3, #3
 8004da0:	e023      	b.n	8004dea <UART_CheckIdleState+0x8a>
 8004da2:	687b      	ldr	r3, [r7, #4]
 8004da4:	681b      	ldr	r3, [r3, #0]
 8004da6:	681b      	ldr	r3, [r3, #0]
 8004da8:	f003 0304 	and.w	r3, r3, #4
 8004dac:	2b04      	cmp	r3, #4
 8004dae:	d10e      	bne.n	8004dce <UART_CheckIdleState+0x6e>
 8004db0:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8004db4:	9300      	str	r3, [sp, #0]
 8004db6:	68fb      	ldr	r3, [r7, #12]
 8004db8:	2200      	movs	r2, #0
 8004dba:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8004dbe:	6878      	ldr	r0, [r7, #4]
 8004dc0:	f000 f817 	bl	8004df2 <UART_WaitOnFlagUntilTimeout>
 8004dc4:	4603      	mov	r3, r0
 8004dc6:	2b00      	cmp	r3, #0
 8004dc8:	d001      	beq.n	8004dce <UART_CheckIdleState+0x6e>
 8004dca:	2303      	movs	r3, #3
 8004dcc:	e00d      	b.n	8004dea <UART_CheckIdleState+0x8a>
 8004dce:	687b      	ldr	r3, [r7, #4]
 8004dd0:	2220      	movs	r2, #32
 8004dd2:	679a      	str	r2, [r3, #120]	; 0x78
 8004dd4:	687b      	ldr	r3, [r7, #4]
 8004dd6:	2220      	movs	r2, #32
 8004dd8:	67da      	str	r2, [r3, #124]	; 0x7c
 8004dda:	687b      	ldr	r3, [r7, #4]
 8004ddc:	2200      	movs	r2, #0
 8004dde:	661a      	str	r2, [r3, #96]	; 0x60
 8004de0:	687b      	ldr	r3, [r7, #4]
 8004de2:	2200      	movs	r2, #0
 8004de4:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 8004de8:	2300      	movs	r3, #0
 8004dea:	4618      	mov	r0, r3
 8004dec:	3710      	adds	r7, #16
 8004dee:	46bd      	mov	sp, r7
 8004df0:	bd80      	pop	{r7, pc}

08004df2 <UART_WaitOnFlagUntilTimeout>:
 8004df2:	b580      	push	{r7, lr}
 8004df4:	b084      	sub	sp, #16
 8004df6:	af00      	add	r7, sp, #0
 8004df8:	60f8      	str	r0, [r7, #12]
 8004dfa:	60b9      	str	r1, [r7, #8]
 8004dfc:	603b      	str	r3, [r7, #0]
 8004dfe:	4613      	mov	r3, r2
 8004e00:	71fb      	strb	r3, [r7, #7]
 8004e02:	e05e      	b.n	8004ec2 <UART_WaitOnFlagUntilTimeout+0xd0>
 8004e04:	69bb      	ldr	r3, [r7, #24]
 8004e06:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004e0a:	d05a      	beq.n	8004ec2 <UART_WaitOnFlagUntilTimeout+0xd0>
 8004e0c:	f7fc ff48 	bl	8001ca0 <HAL_GetTick>
 8004e10:	4602      	mov	r2, r0
 8004e12:	683b      	ldr	r3, [r7, #0]
 8004e14:	1ad3      	subs	r3, r2, r3
 8004e16:	69ba      	ldr	r2, [r7, #24]
 8004e18:	429a      	cmp	r2, r3
 8004e1a:	d302      	bcc.n	8004e22 <UART_WaitOnFlagUntilTimeout+0x30>
 8004e1c:	69bb      	ldr	r3, [r7, #24]
 8004e1e:	2b00      	cmp	r3, #0
 8004e20:	d11b      	bne.n	8004e5a <UART_WaitOnFlagUntilTimeout+0x68>
 8004e22:	68fb      	ldr	r3, [r7, #12]
 8004e24:	681b      	ldr	r3, [r3, #0]
 8004e26:	681a      	ldr	r2, [r3, #0]
 8004e28:	68fb      	ldr	r3, [r7, #12]
 8004e2a:	681b      	ldr	r3, [r3, #0]
 8004e2c:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8004e30:	601a      	str	r2, [r3, #0]
 8004e32:	68fb      	ldr	r3, [r7, #12]
 8004e34:	681b      	ldr	r3, [r3, #0]
 8004e36:	689a      	ldr	r2, [r3, #8]
 8004e38:	68fb      	ldr	r3, [r7, #12]
 8004e3a:	681b      	ldr	r3, [r3, #0]
 8004e3c:	f022 0201 	bic.w	r2, r2, #1
 8004e40:	609a      	str	r2, [r3, #8]
 8004e42:	68fb      	ldr	r3, [r7, #12]
 8004e44:	2220      	movs	r2, #32
 8004e46:	679a      	str	r2, [r3, #120]	; 0x78
 8004e48:	68fb      	ldr	r3, [r7, #12]
 8004e4a:	2220      	movs	r2, #32
 8004e4c:	67da      	str	r2, [r3, #124]	; 0x7c
 8004e4e:	68fb      	ldr	r3, [r7, #12]
 8004e50:	2200      	movs	r2, #0
 8004e52:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 8004e56:	2303      	movs	r3, #3
 8004e58:	e043      	b.n	8004ee2 <UART_WaitOnFlagUntilTimeout+0xf0>
 8004e5a:	68fb      	ldr	r3, [r7, #12]
 8004e5c:	681b      	ldr	r3, [r3, #0]
 8004e5e:	681b      	ldr	r3, [r3, #0]
 8004e60:	f003 0304 	and.w	r3, r3, #4
 8004e64:	2b00      	cmp	r3, #0
 8004e66:	d02c      	beq.n	8004ec2 <UART_WaitOnFlagUntilTimeout+0xd0>
 8004e68:	68fb      	ldr	r3, [r7, #12]
 8004e6a:	681b      	ldr	r3, [r3, #0]
 8004e6c:	69db      	ldr	r3, [r3, #28]
 8004e6e:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8004e72:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8004e76:	d124      	bne.n	8004ec2 <UART_WaitOnFlagUntilTimeout+0xd0>
 8004e78:	68fb      	ldr	r3, [r7, #12]
 8004e7a:	681b      	ldr	r3, [r3, #0]
 8004e7c:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8004e80:	621a      	str	r2, [r3, #32]
 8004e82:	68fb      	ldr	r3, [r7, #12]
 8004e84:	681b      	ldr	r3, [r3, #0]
 8004e86:	681a      	ldr	r2, [r3, #0]
 8004e88:	68fb      	ldr	r3, [r7, #12]
 8004e8a:	681b      	ldr	r3, [r3, #0]
 8004e8c:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8004e90:	601a      	str	r2, [r3, #0]
 8004e92:	68fb      	ldr	r3, [r7, #12]
 8004e94:	681b      	ldr	r3, [r3, #0]
 8004e96:	689a      	ldr	r2, [r3, #8]
 8004e98:	68fb      	ldr	r3, [r7, #12]
 8004e9a:	681b      	ldr	r3, [r3, #0]
 8004e9c:	f022 0201 	bic.w	r2, r2, #1
 8004ea0:	609a      	str	r2, [r3, #8]
 8004ea2:	68fb      	ldr	r3, [r7, #12]
 8004ea4:	2220      	movs	r2, #32
 8004ea6:	679a      	str	r2, [r3, #120]	; 0x78
 8004ea8:	68fb      	ldr	r3, [r7, #12]
 8004eaa:	2220      	movs	r2, #32
 8004eac:	67da      	str	r2, [r3, #124]	; 0x7c
 8004eae:	68fb      	ldr	r3, [r7, #12]
 8004eb0:	2220      	movs	r2, #32
 8004eb2:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8004eb6:	68fb      	ldr	r3, [r7, #12]
 8004eb8:	2200      	movs	r2, #0
 8004eba:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 8004ebe:	2303      	movs	r3, #3
 8004ec0:	e00f      	b.n	8004ee2 <UART_WaitOnFlagUntilTimeout+0xf0>
 8004ec2:	68fb      	ldr	r3, [r7, #12]
 8004ec4:	681b      	ldr	r3, [r3, #0]
 8004ec6:	69da      	ldr	r2, [r3, #28]
 8004ec8:	68bb      	ldr	r3, [r7, #8]
 8004eca:	4013      	ands	r3, r2
 8004ecc:	68ba      	ldr	r2, [r7, #8]
 8004ece:	429a      	cmp	r2, r3
 8004ed0:	bf0c      	ite	eq
 8004ed2:	2301      	moveq	r3, #1
 8004ed4:	2300      	movne	r3, #0
 8004ed6:	b2db      	uxtb	r3, r3
 8004ed8:	461a      	mov	r2, r3
 8004eda:	79fb      	ldrb	r3, [r7, #7]
 8004edc:	429a      	cmp	r2, r3
 8004ede:	d091      	beq.n	8004e04 <UART_WaitOnFlagUntilTimeout+0x12>
 8004ee0:	2300      	movs	r3, #0
 8004ee2:	4618      	mov	r0, r3
 8004ee4:	3710      	adds	r7, #16
 8004ee6:	46bd      	mov	sp, r7
 8004ee8:	bd80      	pop	{r7, pc}

08004eea <UART_EndRxTransfer>:
 8004eea:	b480      	push	{r7}
 8004eec:	b083      	sub	sp, #12
 8004eee:	af00      	add	r7, sp, #0
 8004ef0:	6078      	str	r0, [r7, #4]
 8004ef2:	687b      	ldr	r3, [r7, #4]
 8004ef4:	681b      	ldr	r3, [r3, #0]
 8004ef6:	681a      	ldr	r2, [r3, #0]
 8004ef8:	687b      	ldr	r3, [r7, #4]
 8004efa:	681b      	ldr	r3, [r3, #0]
 8004efc:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8004f00:	601a      	str	r2, [r3, #0]
 8004f02:	687b      	ldr	r3, [r7, #4]
 8004f04:	681b      	ldr	r3, [r3, #0]
 8004f06:	689a      	ldr	r2, [r3, #8]
 8004f08:	687b      	ldr	r3, [r7, #4]
 8004f0a:	681b      	ldr	r3, [r3, #0]
 8004f0c:	f022 0201 	bic.w	r2, r2, #1
 8004f10:	609a      	str	r2, [r3, #8]
 8004f12:	687b      	ldr	r3, [r7, #4]
 8004f14:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004f16:	2b01      	cmp	r3, #1
 8004f18:	d107      	bne.n	8004f2a <UART_EndRxTransfer+0x40>
 8004f1a:	687b      	ldr	r3, [r7, #4]
 8004f1c:	681b      	ldr	r3, [r3, #0]
 8004f1e:	681a      	ldr	r2, [r3, #0]
 8004f20:	687b      	ldr	r3, [r7, #4]
 8004f22:	681b      	ldr	r3, [r3, #0]
 8004f24:	f022 0210 	bic.w	r2, r2, #16
 8004f28:	601a      	str	r2, [r3, #0]
 8004f2a:	687b      	ldr	r3, [r7, #4]
 8004f2c:	2220      	movs	r2, #32
 8004f2e:	67da      	str	r2, [r3, #124]	; 0x7c
 8004f30:	687b      	ldr	r3, [r7, #4]
 8004f32:	2200      	movs	r2, #0
 8004f34:	661a      	str	r2, [r3, #96]	; 0x60
 8004f36:	687b      	ldr	r3, [r7, #4]
 8004f38:	2200      	movs	r2, #0
 8004f3a:	665a      	str	r2, [r3, #100]	; 0x64
 8004f3c:	bf00      	nop
 8004f3e:	370c      	adds	r7, #12
 8004f40:	46bd      	mov	sp, r7
 8004f42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f46:	4770      	bx	lr

08004f48 <UART_DMAAbortOnError>:
 8004f48:	b580      	push	{r7, lr}
 8004f4a:	b084      	sub	sp, #16
 8004f4c:	af00      	add	r7, sp, #0
 8004f4e:	6078      	str	r0, [r7, #4]
 8004f50:	687b      	ldr	r3, [r7, #4]
 8004f52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f54:	60fb      	str	r3, [r7, #12]
 8004f56:	68fb      	ldr	r3, [r7, #12]
 8004f58:	2200      	movs	r2, #0
 8004f5a:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 8004f5e:	68fb      	ldr	r3, [r7, #12]
 8004f60:	2200      	movs	r2, #0
 8004f62:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 8004f66:	68f8      	ldr	r0, [r7, #12]
 8004f68:	f7ff fc6c 	bl	8004844 <HAL_UART_ErrorCallback>
 8004f6c:	bf00      	nop
 8004f6e:	3710      	adds	r7, #16
 8004f70:	46bd      	mov	sp, r7
 8004f72:	bd80      	pop	{r7, pc}

08004f74 <UART_EndTransmit_IT>:
 8004f74:	b580      	push	{r7, lr}
 8004f76:	b082      	sub	sp, #8
 8004f78:	af00      	add	r7, sp, #0
 8004f7a:	6078      	str	r0, [r7, #4]
 8004f7c:	687b      	ldr	r3, [r7, #4]
 8004f7e:	681b      	ldr	r3, [r3, #0]
 8004f80:	681a      	ldr	r2, [r3, #0]
 8004f82:	687b      	ldr	r3, [r7, #4]
 8004f84:	681b      	ldr	r3, [r3, #0]
 8004f86:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004f8a:	601a      	str	r2, [r3, #0]
 8004f8c:	687b      	ldr	r3, [r7, #4]
 8004f8e:	2220      	movs	r2, #32
 8004f90:	679a      	str	r2, [r3, #120]	; 0x78
 8004f92:	687b      	ldr	r3, [r7, #4]
 8004f94:	2200      	movs	r2, #0
 8004f96:	669a      	str	r2, [r3, #104]	; 0x68
 8004f98:	6878      	ldr	r0, [r7, #4]
 8004f9a:	f7ff fc49 	bl	8004830 <HAL_UART_TxCpltCallback>
 8004f9e:	bf00      	nop
 8004fa0:	3708      	adds	r7, #8
 8004fa2:	46bd      	mov	sp, r7
 8004fa4:	bd80      	pop	{r7, pc}

08004fa6 <HAL_UARTEx_WakeupCallback>:
 8004fa6:	b480      	push	{r7}
 8004fa8:	b083      	sub	sp, #12
 8004faa:	af00      	add	r7, sp, #0
 8004fac:	6078      	str	r0, [r7, #4]
 8004fae:	bf00      	nop
 8004fb0:	370c      	adds	r7, #12
 8004fb2:	46bd      	mov	sp, r7
 8004fb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004fb8:	4770      	bx	lr

08004fba <_ZdlPv>:
 8004fba:	f000 badd 	b.w	8005578 <free>

08004fbe <_ZdlPvj>:
 8004fbe:	f7ff bffc 	b.w	8004fba <_ZdlPv>

08004fc2 <_Znwj>:
 8004fc2:	2801      	cmp	r0, #1
 8004fc4:	bf38      	it	cc
 8004fc6:	2001      	movcc	r0, #1
 8004fc8:	b510      	push	{r4, lr}
 8004fca:	4604      	mov	r4, r0
 8004fcc:	4620      	mov	r0, r4
 8004fce:	f000 facb 	bl	8005568 <malloc>
 8004fd2:	b930      	cbnz	r0, 8004fe2 <_Znwj+0x20>
 8004fd4:	f000 f8c0 	bl	8005158 <_ZSt15get_new_handlerv>
 8004fd8:	b908      	cbnz	r0, 8004fde <_Znwj+0x1c>
 8004fda:	f000 f8c5 	bl	8005168 <abort>
 8004fde:	4780      	blx	r0
 8004fe0:	e7f4      	b.n	8004fcc <_Znwj+0xa>
 8004fe2:	bd10      	pop	{r4, pc}

08004fe4 <_ZSt17__throw_bad_allocv>:
 8004fe4:	b508      	push	{r3, lr}
 8004fe6:	f000 f8bf 	bl	8005168 <abort>

08004fea <_ZSt19__throw_logic_errorPKc>:
 8004fea:	b508      	push	{r3, lr}
 8004fec:	f000 f8bc 	bl	8005168 <abort>

08004ff0 <_ZSt20__throw_length_errorPKc>:
 8004ff0:	b508      	push	{r3, lr}
 8004ff2:	f000 f8b9 	bl	8005168 <abort>

08004ff6 <_ZSt24__throw_out_of_range_fmtPKcz>:
 8004ff6:	b40f      	push	{r0, r1, r2, r3}
 8004ff8:	b580      	push	{r7, lr}
 8004ffa:	b084      	sub	sp, #16
 8004ffc:	af00      	add	r7, sp, #0
 8004ffe:	f107 0418 	add.w	r4, r7, #24
 8005002:	f854 2b04 	ldr.w	r2, [r4], #4
 8005006:	607a      	str	r2, [r7, #4]
 8005008:	4610      	mov	r0, r2
 800500a:	f7fb f8e9 	bl	80001e0 <strlen>
 800500e:	f200 2307 	addw	r3, r0, #519	; 0x207
 8005012:	f023 0307 	bic.w	r3, r3, #7
 8005016:	ebad 0d03 	sub.w	sp, sp, r3
 800501a:	f500 7100 	add.w	r1, r0, #512	; 0x200
 800501e:	687a      	ldr	r2, [r7, #4]
 8005020:	60fc      	str	r4, [r7, #12]
 8005022:	4623      	mov	r3, r4
 8005024:	4668      	mov	r0, sp
 8005026:	f000 f855 	bl	80050d4 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list>
 800502a:	f000 f89d 	bl	8005168 <abort>
	...

08005030 <_ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_>:
 8005030:	b580      	push	{r7, lr}
 8005032:	b09c      	sub	sp, #112	; 0x70
 8005034:	4606      	mov	r6, r0
 8005036:	af00      	add	r7, sp, #0
 8005038:	460c      	mov	r4, r1
 800503a:	1ba4      	subs	r4, r4, r6
 800503c:	490e      	ldr	r1, [pc, #56]	; (8005078 <_ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_+0x48>)
 800503e:	2269      	movs	r2, #105	; 0x69
 8005040:	1d38      	adds	r0, r7, #4
 8005042:	f000 faa1 	bl	8005588 <memcpy>
 8005046:	f104 0370 	add.w	r3, r4, #112	; 0x70
 800504a:	f023 0307 	bic.w	r3, r3, #7
 800504e:	ebad 0d03 	sub.w	sp, sp, r3
 8005052:	466d      	mov	r5, sp
 8005054:	2268      	movs	r2, #104	; 0x68
 8005056:	1d39      	adds	r1, r7, #4
 8005058:	4628      	mov	r0, r5
 800505a:	f000 fa95 	bl	8005588 <memcpy>
 800505e:	4622      	mov	r2, r4
 8005060:	4631      	mov	r1, r6
 8005062:	f105 0068 	add.w	r0, r5, #104	; 0x68
 8005066:	442c      	add	r4, r5
 8005068:	f000 fa8e 	bl	8005588 <memcpy>
 800506c:	2300      	movs	r3, #0
 800506e:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 8005072:	4628      	mov	r0, r5
 8005074:	f7ff ffb9 	bl	8004fea <_ZSt19__throw_logic_errorPKc>
 8005078:	0800671c 	.word	0x0800671c

0800507c <_ZN9__gnu_cxx15__concat_size_tEPcjj>:
 800507c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005080:	af00      	add	r7, sp, #0
 8005082:	b084      	sub	sp, #16
 8005084:	466d      	mov	r5, sp
 8005086:	f105 040c 	add.w	r4, r5, #12
 800508a:	f8df 8044 	ldr.w	r8, [pc, #68]	; 80050d0 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x54>
 800508e:	4623      	mov	r3, r4
 8005090:	f04f 0c0a 	mov.w	ip, #10
 8005094:	fbb2 f6fc 	udiv	r6, r2, ip
 8005098:	fb0c 2e16 	mls	lr, ip, r6, r2
 800509c:	f818 e00e 	ldrb.w	lr, [r8, lr]
 80050a0:	f803 ed01 	strb.w	lr, [r3, #-1]!
 80050a4:	4696      	mov	lr, r2
 80050a6:	f1be 0f09 	cmp.w	lr, #9
 80050aa:	4632      	mov	r2, r6
 80050ac:	d8f2      	bhi.n	8005094 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x18>
 80050ae:	1ae4      	subs	r4, r4, r3
 80050b0:	428c      	cmp	r4, r1
 80050b2:	d809      	bhi.n	80050c8 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x4c>
 80050b4:	f1c4 010c 	rsb	r1, r4, #12
 80050b8:	4622      	mov	r2, r4
 80050ba:	4429      	add	r1, r5
 80050bc:	f000 fa64 	bl	8005588 <memcpy>
 80050c0:	4620      	mov	r0, r4
 80050c2:	46bd      	mov	sp, r7
 80050c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80050c8:	f04f 34ff 	mov.w	r4, #4294967295
 80050cc:	e7f8      	b.n	80050c0 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x44>
 80050ce:	bf00      	nop
 80050d0:	08006785 	.word	0x08006785

080050d4 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list>:
 80050d4:	3901      	subs	r1, #1
 80050d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80050da:	4607      	mov	r7, r0
 80050dc:	4615      	mov	r5, r2
 80050de:	eb00 0801 	add.w	r8, r0, r1
 80050e2:	4604      	mov	r4, r0
 80050e4:	782a      	ldrb	r2, [r5, #0]
 80050e6:	b362      	cbz	r2, 8005142 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x6e>
 80050e8:	4544      	cmp	r4, r8
 80050ea:	d22e      	bcs.n	800514a <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x76>
 80050ec:	2a25      	cmp	r2, #37	; 0x25
 80050ee:	d107      	bne.n	8005100 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x2c>
 80050f0:	786a      	ldrb	r2, [r5, #1]
 80050f2:	2a73      	cmp	r2, #115	; 0x73
 80050f4:	d009      	beq.n	800510a <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x36>
 80050f6:	2a7a      	cmp	r2, #122	; 0x7a
 80050f8:	d012      	beq.n	8005120 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x4c>
 80050fa:	2a25      	cmp	r2, #37	; 0x25
 80050fc:	d100      	bne.n	8005100 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x2c>
 80050fe:	3501      	adds	r5, #1
 8005100:	f815 2b01 	ldrb.w	r2, [r5], #1
 8005104:	f804 2b01 	strb.w	r2, [r4], #1
 8005108:	e7ec      	b.n	80050e4 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x10>
 800510a:	f853 2b04 	ldr.w	r2, [r3], #4
 800510e:	3a01      	subs	r2, #1
 8005110:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 8005114:	b1e9      	cbz	r1, 8005152 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x7e>
 8005116:	4544      	cmp	r4, r8
 8005118:	d017      	beq.n	800514a <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x76>
 800511a:	f804 1b01 	strb.w	r1, [r4], #1
 800511e:	e7f7      	b.n	8005110 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x3c>
 8005120:	78aa      	ldrb	r2, [r5, #2]
 8005122:	2a75      	cmp	r2, #117	; 0x75
 8005124:	d1ec      	bne.n	8005100 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x2c>
 8005126:	461e      	mov	r6, r3
 8005128:	eba8 0104 	sub.w	r1, r8, r4
 800512c:	f856 2b04 	ldr.w	r2, [r6], #4
 8005130:	4620      	mov	r0, r4
 8005132:	f7ff ffa3 	bl	800507c <_ZN9__gnu_cxx15__concat_size_tEPcjj>
 8005136:	2800      	cmp	r0, #0
 8005138:	dd07      	ble.n	800514a <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x76>
 800513a:	4404      	add	r4, r0
 800513c:	3503      	adds	r5, #3
 800513e:	4633      	mov	r3, r6
 8005140:	e7d0      	b.n	80050e4 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x10>
 8005142:	7022      	strb	r2, [r4, #0]
 8005144:	1be0      	subs	r0, r4, r7
 8005146:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800514a:	4621      	mov	r1, r4
 800514c:	4638      	mov	r0, r7
 800514e:	f7ff ff6f 	bl	8005030 <_ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_>
 8005152:	3502      	adds	r5, #2
 8005154:	e7c6      	b.n	80050e4 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x10>
	...

08005158 <_ZSt15get_new_handlerv>:
 8005158:	4b02      	ldr	r3, [pc, #8]	; (8005164 <_ZSt15get_new_handlerv+0xc>)
 800515a:	6818      	ldr	r0, [r3, #0]
 800515c:	f3bf 8f5b 	dmb	ish
 8005160:	4770      	bx	lr
 8005162:	bf00      	nop
 8005164:	20000240 	.word	0x20000240

08005168 <abort>:
 8005168:	b508      	push	{r3, lr}
 800516a:	2006      	movs	r0, #6
 800516c:	f000 fbac 	bl	80058c8 <raise>
 8005170:	2001      	movs	r0, #1
 8005172:	f7fc fc11 	bl	8001998 <_exit>
	...

08005178 <__errno>:
 8005178:	4b01      	ldr	r3, [pc, #4]	; (8005180 <__errno+0x8>)
 800517a:	6818      	ldr	r0, [r3, #0]
 800517c:	4770      	bx	lr
 800517e:	bf00      	nop
 8005180:	2000000c 	.word	0x2000000c

08005184 <__sflush_r>:
 8005184:	898a      	ldrh	r2, [r1, #12]
 8005186:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800518a:	4605      	mov	r5, r0
 800518c:	0710      	lsls	r0, r2, #28
 800518e:	460c      	mov	r4, r1
 8005190:	d458      	bmi.n	8005244 <__sflush_r+0xc0>
 8005192:	684b      	ldr	r3, [r1, #4]
 8005194:	2b00      	cmp	r3, #0
 8005196:	dc05      	bgt.n	80051a4 <__sflush_r+0x20>
 8005198:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800519a:	2b00      	cmp	r3, #0
 800519c:	dc02      	bgt.n	80051a4 <__sflush_r+0x20>
 800519e:	2000      	movs	r0, #0
 80051a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80051a4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80051a6:	2e00      	cmp	r6, #0
 80051a8:	d0f9      	beq.n	800519e <__sflush_r+0x1a>
 80051aa:	2300      	movs	r3, #0
 80051ac:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80051b0:	682f      	ldr	r7, [r5, #0]
 80051b2:	602b      	str	r3, [r5, #0]
 80051b4:	d032      	beq.n	800521c <__sflush_r+0x98>
 80051b6:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80051b8:	89a3      	ldrh	r3, [r4, #12]
 80051ba:	075a      	lsls	r2, r3, #29
 80051bc:	d505      	bpl.n	80051ca <__sflush_r+0x46>
 80051be:	6863      	ldr	r3, [r4, #4]
 80051c0:	1ac0      	subs	r0, r0, r3
 80051c2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80051c4:	b10b      	cbz	r3, 80051ca <__sflush_r+0x46>
 80051c6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80051c8:	1ac0      	subs	r0, r0, r3
 80051ca:	2300      	movs	r3, #0
 80051cc:	4602      	mov	r2, r0
 80051ce:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80051d0:	6a21      	ldr	r1, [r4, #32]
 80051d2:	4628      	mov	r0, r5
 80051d4:	47b0      	blx	r6
 80051d6:	1c43      	adds	r3, r0, #1
 80051d8:	89a3      	ldrh	r3, [r4, #12]
 80051da:	d106      	bne.n	80051ea <__sflush_r+0x66>
 80051dc:	6829      	ldr	r1, [r5, #0]
 80051de:	291d      	cmp	r1, #29
 80051e0:	d82c      	bhi.n	800523c <__sflush_r+0xb8>
 80051e2:	4a2a      	ldr	r2, [pc, #168]	; (800528c <__sflush_r+0x108>)
 80051e4:	40ca      	lsrs	r2, r1
 80051e6:	07d6      	lsls	r6, r2, #31
 80051e8:	d528      	bpl.n	800523c <__sflush_r+0xb8>
 80051ea:	2200      	movs	r2, #0
 80051ec:	6062      	str	r2, [r4, #4]
 80051ee:	04d9      	lsls	r1, r3, #19
 80051f0:	6922      	ldr	r2, [r4, #16]
 80051f2:	6022      	str	r2, [r4, #0]
 80051f4:	d504      	bpl.n	8005200 <__sflush_r+0x7c>
 80051f6:	1c42      	adds	r2, r0, #1
 80051f8:	d101      	bne.n	80051fe <__sflush_r+0x7a>
 80051fa:	682b      	ldr	r3, [r5, #0]
 80051fc:	b903      	cbnz	r3, 8005200 <__sflush_r+0x7c>
 80051fe:	6560      	str	r0, [r4, #84]	; 0x54
 8005200:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8005202:	602f      	str	r7, [r5, #0]
 8005204:	2900      	cmp	r1, #0
 8005206:	d0ca      	beq.n	800519e <__sflush_r+0x1a>
 8005208:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800520c:	4299      	cmp	r1, r3
 800520e:	d002      	beq.n	8005216 <__sflush_r+0x92>
 8005210:	4628      	mov	r0, r5
 8005212:	f000 f9e9 	bl	80055e8 <_free_r>
 8005216:	2000      	movs	r0, #0
 8005218:	6360      	str	r0, [r4, #52]	; 0x34
 800521a:	e7c1      	b.n	80051a0 <__sflush_r+0x1c>
 800521c:	6a21      	ldr	r1, [r4, #32]
 800521e:	2301      	movs	r3, #1
 8005220:	4628      	mov	r0, r5
 8005222:	47b0      	blx	r6
 8005224:	1c41      	adds	r1, r0, #1
 8005226:	d1c7      	bne.n	80051b8 <__sflush_r+0x34>
 8005228:	682b      	ldr	r3, [r5, #0]
 800522a:	2b00      	cmp	r3, #0
 800522c:	d0c4      	beq.n	80051b8 <__sflush_r+0x34>
 800522e:	2b1d      	cmp	r3, #29
 8005230:	d001      	beq.n	8005236 <__sflush_r+0xb2>
 8005232:	2b16      	cmp	r3, #22
 8005234:	d101      	bne.n	800523a <__sflush_r+0xb6>
 8005236:	602f      	str	r7, [r5, #0]
 8005238:	e7b1      	b.n	800519e <__sflush_r+0x1a>
 800523a:	89a3      	ldrh	r3, [r4, #12]
 800523c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005240:	81a3      	strh	r3, [r4, #12]
 8005242:	e7ad      	b.n	80051a0 <__sflush_r+0x1c>
 8005244:	690f      	ldr	r7, [r1, #16]
 8005246:	2f00      	cmp	r7, #0
 8005248:	d0a9      	beq.n	800519e <__sflush_r+0x1a>
 800524a:	0793      	lsls	r3, r2, #30
 800524c:	680e      	ldr	r6, [r1, #0]
 800524e:	bf08      	it	eq
 8005250:	694b      	ldreq	r3, [r1, #20]
 8005252:	600f      	str	r7, [r1, #0]
 8005254:	bf18      	it	ne
 8005256:	2300      	movne	r3, #0
 8005258:	eba6 0807 	sub.w	r8, r6, r7
 800525c:	608b      	str	r3, [r1, #8]
 800525e:	f1b8 0f00 	cmp.w	r8, #0
 8005262:	dd9c      	ble.n	800519e <__sflush_r+0x1a>
 8005264:	6a21      	ldr	r1, [r4, #32]
 8005266:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8005268:	4643      	mov	r3, r8
 800526a:	463a      	mov	r2, r7
 800526c:	4628      	mov	r0, r5
 800526e:	47b0      	blx	r6
 8005270:	2800      	cmp	r0, #0
 8005272:	dc06      	bgt.n	8005282 <__sflush_r+0xfe>
 8005274:	89a3      	ldrh	r3, [r4, #12]
 8005276:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800527a:	81a3      	strh	r3, [r4, #12]
 800527c:	f04f 30ff 	mov.w	r0, #4294967295
 8005280:	e78e      	b.n	80051a0 <__sflush_r+0x1c>
 8005282:	4407      	add	r7, r0
 8005284:	eba8 0800 	sub.w	r8, r8, r0
 8005288:	e7e9      	b.n	800525e <__sflush_r+0xda>
 800528a:	bf00      	nop
 800528c:	20400001 	.word	0x20400001

08005290 <_fflush_r>:
 8005290:	b538      	push	{r3, r4, r5, lr}
 8005292:	690b      	ldr	r3, [r1, #16]
 8005294:	4605      	mov	r5, r0
 8005296:	460c      	mov	r4, r1
 8005298:	b913      	cbnz	r3, 80052a0 <_fflush_r+0x10>
 800529a:	2500      	movs	r5, #0
 800529c:	4628      	mov	r0, r5
 800529e:	bd38      	pop	{r3, r4, r5, pc}
 80052a0:	b118      	cbz	r0, 80052aa <_fflush_r+0x1a>
 80052a2:	6983      	ldr	r3, [r0, #24]
 80052a4:	b90b      	cbnz	r3, 80052aa <_fflush_r+0x1a>
 80052a6:	f000 f899 	bl	80053dc <__sinit>
 80052aa:	4b14      	ldr	r3, [pc, #80]	; (80052fc <_fflush_r+0x6c>)
 80052ac:	429c      	cmp	r4, r3
 80052ae:	d11b      	bne.n	80052e8 <_fflush_r+0x58>
 80052b0:	686c      	ldr	r4, [r5, #4]
 80052b2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80052b6:	2b00      	cmp	r3, #0
 80052b8:	d0ef      	beq.n	800529a <_fflush_r+0xa>
 80052ba:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80052bc:	07d0      	lsls	r0, r2, #31
 80052be:	d404      	bmi.n	80052ca <_fflush_r+0x3a>
 80052c0:	0599      	lsls	r1, r3, #22
 80052c2:	d402      	bmi.n	80052ca <_fflush_r+0x3a>
 80052c4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80052c6:	f000 f94c 	bl	8005562 <__retarget_lock_acquire_recursive>
 80052ca:	4628      	mov	r0, r5
 80052cc:	4621      	mov	r1, r4
 80052ce:	f7ff ff59 	bl	8005184 <__sflush_r>
 80052d2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80052d4:	07da      	lsls	r2, r3, #31
 80052d6:	4605      	mov	r5, r0
 80052d8:	d4e0      	bmi.n	800529c <_fflush_r+0xc>
 80052da:	89a3      	ldrh	r3, [r4, #12]
 80052dc:	059b      	lsls	r3, r3, #22
 80052de:	d4dd      	bmi.n	800529c <_fflush_r+0xc>
 80052e0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80052e2:	f000 f93f 	bl	8005564 <__retarget_lock_release_recursive>
 80052e6:	e7d9      	b.n	800529c <_fflush_r+0xc>
 80052e8:	4b05      	ldr	r3, [pc, #20]	; (8005300 <_fflush_r+0x70>)
 80052ea:	429c      	cmp	r4, r3
 80052ec:	d101      	bne.n	80052f2 <_fflush_r+0x62>
 80052ee:	68ac      	ldr	r4, [r5, #8]
 80052f0:	e7df      	b.n	80052b2 <_fflush_r+0x22>
 80052f2:	4b04      	ldr	r3, [pc, #16]	; (8005304 <_fflush_r+0x74>)
 80052f4:	429c      	cmp	r4, r3
 80052f6:	bf08      	it	eq
 80052f8:	68ec      	ldreq	r4, [r5, #12]
 80052fa:	e7da      	b.n	80052b2 <_fflush_r+0x22>
 80052fc:	080067b0 	.word	0x080067b0
 8005300:	080067d0 	.word	0x080067d0
 8005304:	08006790 	.word	0x08006790

08005308 <fflush>:
 8005308:	4601      	mov	r1, r0
 800530a:	b920      	cbnz	r0, 8005316 <fflush+0xe>
 800530c:	4b04      	ldr	r3, [pc, #16]	; (8005320 <fflush+0x18>)
 800530e:	4905      	ldr	r1, [pc, #20]	; (8005324 <fflush+0x1c>)
 8005310:	6818      	ldr	r0, [r3, #0]
 8005312:	f000 b8e1 	b.w	80054d8 <_fwalk_reent>
 8005316:	4b04      	ldr	r3, [pc, #16]	; (8005328 <fflush+0x20>)
 8005318:	6818      	ldr	r0, [r3, #0]
 800531a:	f7ff bfb9 	b.w	8005290 <_fflush_r>
 800531e:	bf00      	nop
 8005320:	080067f0 	.word	0x080067f0
 8005324:	08005291 	.word	0x08005291
 8005328:	2000000c 	.word	0x2000000c

0800532c <std>:
 800532c:	2300      	movs	r3, #0
 800532e:	b510      	push	{r4, lr}
 8005330:	4604      	mov	r4, r0
 8005332:	e9c0 3300 	strd	r3, r3, [r0]
 8005336:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800533a:	6083      	str	r3, [r0, #8]
 800533c:	8181      	strh	r1, [r0, #12]
 800533e:	6643      	str	r3, [r0, #100]	; 0x64
 8005340:	81c2      	strh	r2, [r0, #14]
 8005342:	6183      	str	r3, [r0, #24]
 8005344:	4619      	mov	r1, r3
 8005346:	2208      	movs	r2, #8
 8005348:	305c      	adds	r0, #92	; 0x5c
 800534a:	f000 f945 	bl	80055d8 <memset>
 800534e:	4b05      	ldr	r3, [pc, #20]	; (8005364 <std+0x38>)
 8005350:	6263      	str	r3, [r4, #36]	; 0x24
 8005352:	4b05      	ldr	r3, [pc, #20]	; (8005368 <std+0x3c>)
 8005354:	62a3      	str	r3, [r4, #40]	; 0x28
 8005356:	4b05      	ldr	r3, [pc, #20]	; (800536c <std+0x40>)
 8005358:	62e3      	str	r3, [r4, #44]	; 0x2c
 800535a:	4b05      	ldr	r3, [pc, #20]	; (8005370 <std+0x44>)
 800535c:	6224      	str	r4, [r4, #32]
 800535e:	6323      	str	r3, [r4, #48]	; 0x30
 8005360:	bd10      	pop	{r4, pc}
 8005362:	bf00      	nop
 8005364:	08005901 	.word	0x08005901
 8005368:	08005923 	.word	0x08005923
 800536c:	0800595b 	.word	0x0800595b
 8005370:	0800597f 	.word	0x0800597f

08005374 <_cleanup_r>:
 8005374:	4901      	ldr	r1, [pc, #4]	; (800537c <_cleanup_r+0x8>)
 8005376:	f000 b8af 	b.w	80054d8 <_fwalk_reent>
 800537a:	bf00      	nop
 800537c:	08005291 	.word	0x08005291

08005380 <__sfmoreglue>:
 8005380:	b570      	push	{r4, r5, r6, lr}
 8005382:	1e4a      	subs	r2, r1, #1
 8005384:	2568      	movs	r5, #104	; 0x68
 8005386:	4355      	muls	r5, r2
 8005388:	460e      	mov	r6, r1
 800538a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800538e:	f000 f97b 	bl	8005688 <_malloc_r>
 8005392:	4604      	mov	r4, r0
 8005394:	b140      	cbz	r0, 80053a8 <__sfmoreglue+0x28>
 8005396:	2100      	movs	r1, #0
 8005398:	e9c0 1600 	strd	r1, r6, [r0]
 800539c:	300c      	adds	r0, #12
 800539e:	60a0      	str	r0, [r4, #8]
 80053a0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80053a4:	f000 f918 	bl	80055d8 <memset>
 80053a8:	4620      	mov	r0, r4
 80053aa:	bd70      	pop	{r4, r5, r6, pc}

080053ac <__sfp_lock_acquire>:
 80053ac:	4801      	ldr	r0, [pc, #4]	; (80053b4 <__sfp_lock_acquire+0x8>)
 80053ae:	f000 b8d8 	b.w	8005562 <__retarget_lock_acquire_recursive>
 80053b2:	bf00      	nop
 80053b4:	20000258 	.word	0x20000258

080053b8 <__sfp_lock_release>:
 80053b8:	4801      	ldr	r0, [pc, #4]	; (80053c0 <__sfp_lock_release+0x8>)
 80053ba:	f000 b8d3 	b.w	8005564 <__retarget_lock_release_recursive>
 80053be:	bf00      	nop
 80053c0:	20000258 	.word	0x20000258

080053c4 <__sinit_lock_acquire>:
 80053c4:	4801      	ldr	r0, [pc, #4]	; (80053cc <__sinit_lock_acquire+0x8>)
 80053c6:	f000 b8cc 	b.w	8005562 <__retarget_lock_acquire_recursive>
 80053ca:	bf00      	nop
 80053cc:	20000253 	.word	0x20000253

080053d0 <__sinit_lock_release>:
 80053d0:	4801      	ldr	r0, [pc, #4]	; (80053d8 <__sinit_lock_release+0x8>)
 80053d2:	f000 b8c7 	b.w	8005564 <__retarget_lock_release_recursive>
 80053d6:	bf00      	nop
 80053d8:	20000253 	.word	0x20000253

080053dc <__sinit>:
 80053dc:	b510      	push	{r4, lr}
 80053de:	4604      	mov	r4, r0
 80053e0:	f7ff fff0 	bl	80053c4 <__sinit_lock_acquire>
 80053e4:	69a3      	ldr	r3, [r4, #24]
 80053e6:	b11b      	cbz	r3, 80053f0 <__sinit+0x14>
 80053e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80053ec:	f7ff bff0 	b.w	80053d0 <__sinit_lock_release>
 80053f0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80053f4:	6523      	str	r3, [r4, #80]	; 0x50
 80053f6:	4b13      	ldr	r3, [pc, #76]	; (8005444 <__sinit+0x68>)
 80053f8:	4a13      	ldr	r2, [pc, #76]	; (8005448 <__sinit+0x6c>)
 80053fa:	681b      	ldr	r3, [r3, #0]
 80053fc:	62a2      	str	r2, [r4, #40]	; 0x28
 80053fe:	42a3      	cmp	r3, r4
 8005400:	bf04      	itt	eq
 8005402:	2301      	moveq	r3, #1
 8005404:	61a3      	streq	r3, [r4, #24]
 8005406:	4620      	mov	r0, r4
 8005408:	f000 f820 	bl	800544c <__sfp>
 800540c:	6060      	str	r0, [r4, #4]
 800540e:	4620      	mov	r0, r4
 8005410:	f000 f81c 	bl	800544c <__sfp>
 8005414:	60a0      	str	r0, [r4, #8]
 8005416:	4620      	mov	r0, r4
 8005418:	f000 f818 	bl	800544c <__sfp>
 800541c:	2200      	movs	r2, #0
 800541e:	60e0      	str	r0, [r4, #12]
 8005420:	2104      	movs	r1, #4
 8005422:	6860      	ldr	r0, [r4, #4]
 8005424:	f7ff ff82 	bl	800532c <std>
 8005428:	68a0      	ldr	r0, [r4, #8]
 800542a:	2201      	movs	r2, #1
 800542c:	2109      	movs	r1, #9
 800542e:	f7ff ff7d 	bl	800532c <std>
 8005432:	68e0      	ldr	r0, [r4, #12]
 8005434:	2202      	movs	r2, #2
 8005436:	2112      	movs	r1, #18
 8005438:	f7ff ff78 	bl	800532c <std>
 800543c:	2301      	movs	r3, #1
 800543e:	61a3      	str	r3, [r4, #24]
 8005440:	e7d2      	b.n	80053e8 <__sinit+0xc>
 8005442:	bf00      	nop
 8005444:	080067f0 	.word	0x080067f0
 8005448:	08005375 	.word	0x08005375

0800544c <__sfp>:
 800544c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800544e:	4607      	mov	r7, r0
 8005450:	f7ff ffac 	bl	80053ac <__sfp_lock_acquire>
 8005454:	4b1e      	ldr	r3, [pc, #120]	; (80054d0 <__sfp+0x84>)
 8005456:	681e      	ldr	r6, [r3, #0]
 8005458:	69b3      	ldr	r3, [r6, #24]
 800545a:	b913      	cbnz	r3, 8005462 <__sfp+0x16>
 800545c:	4630      	mov	r0, r6
 800545e:	f7ff ffbd 	bl	80053dc <__sinit>
 8005462:	3648      	adds	r6, #72	; 0x48
 8005464:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8005468:	3b01      	subs	r3, #1
 800546a:	d503      	bpl.n	8005474 <__sfp+0x28>
 800546c:	6833      	ldr	r3, [r6, #0]
 800546e:	b30b      	cbz	r3, 80054b4 <__sfp+0x68>
 8005470:	6836      	ldr	r6, [r6, #0]
 8005472:	e7f7      	b.n	8005464 <__sfp+0x18>
 8005474:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8005478:	b9d5      	cbnz	r5, 80054b0 <__sfp+0x64>
 800547a:	4b16      	ldr	r3, [pc, #88]	; (80054d4 <__sfp+0x88>)
 800547c:	60e3      	str	r3, [r4, #12]
 800547e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8005482:	6665      	str	r5, [r4, #100]	; 0x64
 8005484:	f000 f86c 	bl	8005560 <__retarget_lock_init_recursive>
 8005488:	f7ff ff96 	bl	80053b8 <__sfp_lock_release>
 800548c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8005490:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8005494:	6025      	str	r5, [r4, #0]
 8005496:	61a5      	str	r5, [r4, #24]
 8005498:	2208      	movs	r2, #8
 800549a:	4629      	mov	r1, r5
 800549c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80054a0:	f000 f89a 	bl	80055d8 <memset>
 80054a4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80054a8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80054ac:	4620      	mov	r0, r4
 80054ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80054b0:	3468      	adds	r4, #104	; 0x68
 80054b2:	e7d9      	b.n	8005468 <__sfp+0x1c>
 80054b4:	2104      	movs	r1, #4
 80054b6:	4638      	mov	r0, r7
 80054b8:	f7ff ff62 	bl	8005380 <__sfmoreglue>
 80054bc:	4604      	mov	r4, r0
 80054be:	6030      	str	r0, [r6, #0]
 80054c0:	2800      	cmp	r0, #0
 80054c2:	d1d5      	bne.n	8005470 <__sfp+0x24>
 80054c4:	f7ff ff78 	bl	80053b8 <__sfp_lock_release>
 80054c8:	230c      	movs	r3, #12
 80054ca:	603b      	str	r3, [r7, #0]
 80054cc:	e7ee      	b.n	80054ac <__sfp+0x60>
 80054ce:	bf00      	nop
 80054d0:	080067f0 	.word	0x080067f0
 80054d4:	ffff0001 	.word	0xffff0001

080054d8 <_fwalk_reent>:
 80054d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80054dc:	4606      	mov	r6, r0
 80054de:	4688      	mov	r8, r1
 80054e0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80054e4:	2700      	movs	r7, #0
 80054e6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80054ea:	f1b9 0901 	subs.w	r9, r9, #1
 80054ee:	d505      	bpl.n	80054fc <_fwalk_reent+0x24>
 80054f0:	6824      	ldr	r4, [r4, #0]
 80054f2:	2c00      	cmp	r4, #0
 80054f4:	d1f7      	bne.n	80054e6 <_fwalk_reent+0xe>
 80054f6:	4638      	mov	r0, r7
 80054f8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80054fc:	89ab      	ldrh	r3, [r5, #12]
 80054fe:	2b01      	cmp	r3, #1
 8005500:	d907      	bls.n	8005512 <_fwalk_reent+0x3a>
 8005502:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8005506:	3301      	adds	r3, #1
 8005508:	d003      	beq.n	8005512 <_fwalk_reent+0x3a>
 800550a:	4629      	mov	r1, r5
 800550c:	4630      	mov	r0, r6
 800550e:	47c0      	blx	r8
 8005510:	4307      	orrs	r7, r0
 8005512:	3568      	adds	r5, #104	; 0x68
 8005514:	e7e9      	b.n	80054ea <_fwalk_reent+0x12>
	...

08005518 <__libc_init_array>:
 8005518:	b570      	push	{r4, r5, r6, lr}
 800551a:	4d0d      	ldr	r5, [pc, #52]	; (8005550 <__libc_init_array+0x38>)
 800551c:	4c0d      	ldr	r4, [pc, #52]	; (8005554 <__libc_init_array+0x3c>)
 800551e:	1b64      	subs	r4, r4, r5
 8005520:	10a4      	asrs	r4, r4, #2
 8005522:	2600      	movs	r6, #0
 8005524:	42a6      	cmp	r6, r4
 8005526:	d109      	bne.n	800553c <__libc_init_array+0x24>
 8005528:	4d0b      	ldr	r5, [pc, #44]	; (8005558 <__libc_init_array+0x40>)
 800552a:	4c0c      	ldr	r4, [pc, #48]	; (800555c <__libc_init_array+0x44>)
 800552c:	f000 feb2 	bl	8006294 <_init>
 8005530:	1b64      	subs	r4, r4, r5
 8005532:	10a4      	asrs	r4, r4, #2
 8005534:	2600      	movs	r6, #0
 8005536:	42a6      	cmp	r6, r4
 8005538:	d105      	bne.n	8005546 <__libc_init_array+0x2e>
 800553a:	bd70      	pop	{r4, r5, r6, pc}
 800553c:	f855 3b04 	ldr.w	r3, [r5], #4
 8005540:	4798      	blx	r3
 8005542:	3601      	adds	r6, #1
 8005544:	e7ee      	b.n	8005524 <__libc_init_array+0xc>
 8005546:	f855 3b04 	ldr.w	r3, [r5], #4
 800554a:	4798      	blx	r3
 800554c:	3601      	adds	r6, #1
 800554e:	e7f2      	b.n	8005536 <__libc_init_array+0x1e>
 8005550:	08006828 	.word	0x08006828
 8005554:	08006828 	.word	0x08006828
 8005558:	08006828 	.word	0x08006828
 800555c:	08006830 	.word	0x08006830

08005560 <__retarget_lock_init_recursive>:
 8005560:	4770      	bx	lr

08005562 <__retarget_lock_acquire_recursive>:
 8005562:	4770      	bx	lr

08005564 <__retarget_lock_release_recursive>:
 8005564:	4770      	bx	lr
	...

08005568 <malloc>:
 8005568:	4b02      	ldr	r3, [pc, #8]	; (8005574 <malloc+0xc>)
 800556a:	4601      	mov	r1, r0
 800556c:	6818      	ldr	r0, [r3, #0]
 800556e:	f000 b88b 	b.w	8005688 <_malloc_r>
 8005572:	bf00      	nop
 8005574:	2000000c 	.word	0x2000000c

08005578 <free>:
 8005578:	4b02      	ldr	r3, [pc, #8]	; (8005584 <free+0xc>)
 800557a:	4601      	mov	r1, r0
 800557c:	6818      	ldr	r0, [r3, #0]
 800557e:	f000 b833 	b.w	80055e8 <_free_r>
 8005582:	bf00      	nop
 8005584:	2000000c 	.word	0x2000000c

08005588 <memcpy>:
 8005588:	440a      	add	r2, r1
 800558a:	4291      	cmp	r1, r2
 800558c:	f100 33ff 	add.w	r3, r0, #4294967295
 8005590:	d100      	bne.n	8005594 <memcpy+0xc>
 8005592:	4770      	bx	lr
 8005594:	b510      	push	{r4, lr}
 8005596:	f811 4b01 	ldrb.w	r4, [r1], #1
 800559a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800559e:	4291      	cmp	r1, r2
 80055a0:	d1f9      	bne.n	8005596 <memcpy+0xe>
 80055a2:	bd10      	pop	{r4, pc}

080055a4 <memmove>:
 80055a4:	4288      	cmp	r0, r1
 80055a6:	b510      	push	{r4, lr}
 80055a8:	eb01 0402 	add.w	r4, r1, r2
 80055ac:	d902      	bls.n	80055b4 <memmove+0x10>
 80055ae:	4284      	cmp	r4, r0
 80055b0:	4623      	mov	r3, r4
 80055b2:	d807      	bhi.n	80055c4 <memmove+0x20>
 80055b4:	1e43      	subs	r3, r0, #1
 80055b6:	42a1      	cmp	r1, r4
 80055b8:	d008      	beq.n	80055cc <memmove+0x28>
 80055ba:	f811 2b01 	ldrb.w	r2, [r1], #1
 80055be:	f803 2f01 	strb.w	r2, [r3, #1]!
 80055c2:	e7f8      	b.n	80055b6 <memmove+0x12>
 80055c4:	4402      	add	r2, r0
 80055c6:	4601      	mov	r1, r0
 80055c8:	428a      	cmp	r2, r1
 80055ca:	d100      	bne.n	80055ce <memmove+0x2a>
 80055cc:	bd10      	pop	{r4, pc}
 80055ce:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80055d2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80055d6:	e7f7      	b.n	80055c8 <memmove+0x24>

080055d8 <memset>:
 80055d8:	4402      	add	r2, r0
 80055da:	4603      	mov	r3, r0
 80055dc:	4293      	cmp	r3, r2
 80055de:	d100      	bne.n	80055e2 <memset+0xa>
 80055e0:	4770      	bx	lr
 80055e2:	f803 1b01 	strb.w	r1, [r3], #1
 80055e6:	e7f9      	b.n	80055dc <memset+0x4>

080055e8 <_free_r>:
 80055e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80055ea:	2900      	cmp	r1, #0
 80055ec:	d048      	beq.n	8005680 <_free_r+0x98>
 80055ee:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80055f2:	9001      	str	r0, [sp, #4]
 80055f4:	2b00      	cmp	r3, #0
 80055f6:	f1a1 0404 	sub.w	r4, r1, #4
 80055fa:	bfb8      	it	lt
 80055fc:	18e4      	addlt	r4, r4, r3
 80055fe:	f000 fb1b 	bl	8005c38 <__malloc_lock>
 8005602:	4a20      	ldr	r2, [pc, #128]	; (8005684 <_free_r+0x9c>)
 8005604:	9801      	ldr	r0, [sp, #4]
 8005606:	6813      	ldr	r3, [r2, #0]
 8005608:	4615      	mov	r5, r2
 800560a:	b933      	cbnz	r3, 800561a <_free_r+0x32>
 800560c:	6063      	str	r3, [r4, #4]
 800560e:	6014      	str	r4, [r2, #0]
 8005610:	b003      	add	sp, #12
 8005612:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8005616:	f000 bb15 	b.w	8005c44 <__malloc_unlock>
 800561a:	42a3      	cmp	r3, r4
 800561c:	d90b      	bls.n	8005636 <_free_r+0x4e>
 800561e:	6821      	ldr	r1, [r4, #0]
 8005620:	1862      	adds	r2, r4, r1
 8005622:	4293      	cmp	r3, r2
 8005624:	bf04      	itt	eq
 8005626:	681a      	ldreq	r2, [r3, #0]
 8005628:	685b      	ldreq	r3, [r3, #4]
 800562a:	6063      	str	r3, [r4, #4]
 800562c:	bf04      	itt	eq
 800562e:	1852      	addeq	r2, r2, r1
 8005630:	6022      	streq	r2, [r4, #0]
 8005632:	602c      	str	r4, [r5, #0]
 8005634:	e7ec      	b.n	8005610 <_free_r+0x28>
 8005636:	461a      	mov	r2, r3
 8005638:	685b      	ldr	r3, [r3, #4]
 800563a:	b10b      	cbz	r3, 8005640 <_free_r+0x58>
 800563c:	42a3      	cmp	r3, r4
 800563e:	d9fa      	bls.n	8005636 <_free_r+0x4e>
 8005640:	6811      	ldr	r1, [r2, #0]
 8005642:	1855      	adds	r5, r2, r1
 8005644:	42a5      	cmp	r5, r4
 8005646:	d10b      	bne.n	8005660 <_free_r+0x78>
 8005648:	6824      	ldr	r4, [r4, #0]
 800564a:	4421      	add	r1, r4
 800564c:	1854      	adds	r4, r2, r1
 800564e:	42a3      	cmp	r3, r4
 8005650:	6011      	str	r1, [r2, #0]
 8005652:	d1dd      	bne.n	8005610 <_free_r+0x28>
 8005654:	681c      	ldr	r4, [r3, #0]
 8005656:	685b      	ldr	r3, [r3, #4]
 8005658:	6053      	str	r3, [r2, #4]
 800565a:	4421      	add	r1, r4
 800565c:	6011      	str	r1, [r2, #0]
 800565e:	e7d7      	b.n	8005610 <_free_r+0x28>
 8005660:	d902      	bls.n	8005668 <_free_r+0x80>
 8005662:	230c      	movs	r3, #12
 8005664:	6003      	str	r3, [r0, #0]
 8005666:	e7d3      	b.n	8005610 <_free_r+0x28>
 8005668:	6825      	ldr	r5, [r4, #0]
 800566a:	1961      	adds	r1, r4, r5
 800566c:	428b      	cmp	r3, r1
 800566e:	bf04      	itt	eq
 8005670:	6819      	ldreq	r1, [r3, #0]
 8005672:	685b      	ldreq	r3, [r3, #4]
 8005674:	6063      	str	r3, [r4, #4]
 8005676:	bf04      	itt	eq
 8005678:	1949      	addeq	r1, r1, r5
 800567a:	6021      	streq	r1, [r4, #0]
 800567c:	6054      	str	r4, [r2, #4]
 800567e:	e7c7      	b.n	8005610 <_free_r+0x28>
 8005680:	b003      	add	sp, #12
 8005682:	bd30      	pop	{r4, r5, pc}
 8005684:	20000244 	.word	0x20000244

08005688 <_malloc_r>:
 8005688:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800568a:	1ccd      	adds	r5, r1, #3
 800568c:	f025 0503 	bic.w	r5, r5, #3
 8005690:	3508      	adds	r5, #8
 8005692:	2d0c      	cmp	r5, #12
 8005694:	bf38      	it	cc
 8005696:	250c      	movcc	r5, #12
 8005698:	2d00      	cmp	r5, #0
 800569a:	4606      	mov	r6, r0
 800569c:	db01      	blt.n	80056a2 <_malloc_r+0x1a>
 800569e:	42a9      	cmp	r1, r5
 80056a0:	d903      	bls.n	80056aa <_malloc_r+0x22>
 80056a2:	230c      	movs	r3, #12
 80056a4:	6033      	str	r3, [r6, #0]
 80056a6:	2000      	movs	r0, #0
 80056a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80056aa:	f000 fac5 	bl	8005c38 <__malloc_lock>
 80056ae:	4921      	ldr	r1, [pc, #132]	; (8005734 <_malloc_r+0xac>)
 80056b0:	680a      	ldr	r2, [r1, #0]
 80056b2:	4614      	mov	r4, r2
 80056b4:	b99c      	cbnz	r4, 80056de <_malloc_r+0x56>
 80056b6:	4f20      	ldr	r7, [pc, #128]	; (8005738 <_malloc_r+0xb0>)
 80056b8:	683b      	ldr	r3, [r7, #0]
 80056ba:	b923      	cbnz	r3, 80056c6 <_malloc_r+0x3e>
 80056bc:	4621      	mov	r1, r4
 80056be:	4630      	mov	r0, r6
 80056c0:	f000 f8ca 	bl	8005858 <_sbrk_r>
 80056c4:	6038      	str	r0, [r7, #0]
 80056c6:	4629      	mov	r1, r5
 80056c8:	4630      	mov	r0, r6
 80056ca:	f000 f8c5 	bl	8005858 <_sbrk_r>
 80056ce:	1c43      	adds	r3, r0, #1
 80056d0:	d123      	bne.n	800571a <_malloc_r+0x92>
 80056d2:	230c      	movs	r3, #12
 80056d4:	6033      	str	r3, [r6, #0]
 80056d6:	4630      	mov	r0, r6
 80056d8:	f000 fab4 	bl	8005c44 <__malloc_unlock>
 80056dc:	e7e3      	b.n	80056a6 <_malloc_r+0x1e>
 80056de:	6823      	ldr	r3, [r4, #0]
 80056e0:	1b5b      	subs	r3, r3, r5
 80056e2:	d417      	bmi.n	8005714 <_malloc_r+0x8c>
 80056e4:	2b0b      	cmp	r3, #11
 80056e6:	d903      	bls.n	80056f0 <_malloc_r+0x68>
 80056e8:	6023      	str	r3, [r4, #0]
 80056ea:	441c      	add	r4, r3
 80056ec:	6025      	str	r5, [r4, #0]
 80056ee:	e004      	b.n	80056fa <_malloc_r+0x72>
 80056f0:	6863      	ldr	r3, [r4, #4]
 80056f2:	42a2      	cmp	r2, r4
 80056f4:	bf0c      	ite	eq
 80056f6:	600b      	streq	r3, [r1, #0]
 80056f8:	6053      	strne	r3, [r2, #4]
 80056fa:	4630      	mov	r0, r6
 80056fc:	f000 faa2 	bl	8005c44 <__malloc_unlock>
 8005700:	f104 000b 	add.w	r0, r4, #11
 8005704:	1d23      	adds	r3, r4, #4
 8005706:	f020 0007 	bic.w	r0, r0, #7
 800570a:	1ac2      	subs	r2, r0, r3
 800570c:	d0cc      	beq.n	80056a8 <_malloc_r+0x20>
 800570e:	1a1b      	subs	r3, r3, r0
 8005710:	50a3      	str	r3, [r4, r2]
 8005712:	e7c9      	b.n	80056a8 <_malloc_r+0x20>
 8005714:	4622      	mov	r2, r4
 8005716:	6864      	ldr	r4, [r4, #4]
 8005718:	e7cc      	b.n	80056b4 <_malloc_r+0x2c>
 800571a:	1cc4      	adds	r4, r0, #3
 800571c:	f024 0403 	bic.w	r4, r4, #3
 8005720:	42a0      	cmp	r0, r4
 8005722:	d0e3      	beq.n	80056ec <_malloc_r+0x64>
 8005724:	1a21      	subs	r1, r4, r0
 8005726:	4630      	mov	r0, r6
 8005728:	f000 f896 	bl	8005858 <_sbrk_r>
 800572c:	3001      	adds	r0, #1
 800572e:	d1dd      	bne.n	80056ec <_malloc_r+0x64>
 8005730:	e7cf      	b.n	80056d2 <_malloc_r+0x4a>
 8005732:	bf00      	nop
 8005734:	20000244 	.word	0x20000244
 8005738:	20000248 	.word	0x20000248

0800573c <iprintf>:
 800573c:	b40f      	push	{r0, r1, r2, r3}
 800573e:	4b0a      	ldr	r3, [pc, #40]	; (8005768 <iprintf+0x2c>)
 8005740:	b513      	push	{r0, r1, r4, lr}
 8005742:	681c      	ldr	r4, [r3, #0]
 8005744:	b124      	cbz	r4, 8005750 <iprintf+0x14>
 8005746:	69a3      	ldr	r3, [r4, #24]
 8005748:	b913      	cbnz	r3, 8005750 <iprintf+0x14>
 800574a:	4620      	mov	r0, r4
 800574c:	f7ff fe46 	bl	80053dc <__sinit>
 8005750:	ab05      	add	r3, sp, #20
 8005752:	9a04      	ldr	r2, [sp, #16]
 8005754:	68a1      	ldr	r1, [r4, #8]
 8005756:	9301      	str	r3, [sp, #4]
 8005758:	4620      	mov	r0, r4
 800575a:	f000 faa3 	bl	8005ca4 <_vfiprintf_r>
 800575e:	b002      	add	sp, #8
 8005760:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005764:	b004      	add	sp, #16
 8005766:	4770      	bx	lr
 8005768:	2000000c 	.word	0x2000000c

0800576c <_puts_r>:
 800576c:	b570      	push	{r4, r5, r6, lr}
 800576e:	460e      	mov	r6, r1
 8005770:	4605      	mov	r5, r0
 8005772:	b118      	cbz	r0, 800577c <_puts_r+0x10>
 8005774:	6983      	ldr	r3, [r0, #24]
 8005776:	b90b      	cbnz	r3, 800577c <_puts_r+0x10>
 8005778:	f7ff fe30 	bl	80053dc <__sinit>
 800577c:	69ab      	ldr	r3, [r5, #24]
 800577e:	68ac      	ldr	r4, [r5, #8]
 8005780:	b913      	cbnz	r3, 8005788 <_puts_r+0x1c>
 8005782:	4628      	mov	r0, r5
 8005784:	f7ff fe2a 	bl	80053dc <__sinit>
 8005788:	4b2c      	ldr	r3, [pc, #176]	; (800583c <_puts_r+0xd0>)
 800578a:	429c      	cmp	r4, r3
 800578c:	d120      	bne.n	80057d0 <_puts_r+0x64>
 800578e:	686c      	ldr	r4, [r5, #4]
 8005790:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8005792:	07db      	lsls	r3, r3, #31
 8005794:	d405      	bmi.n	80057a2 <_puts_r+0x36>
 8005796:	89a3      	ldrh	r3, [r4, #12]
 8005798:	0598      	lsls	r0, r3, #22
 800579a:	d402      	bmi.n	80057a2 <_puts_r+0x36>
 800579c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800579e:	f7ff fee0 	bl	8005562 <__retarget_lock_acquire_recursive>
 80057a2:	89a3      	ldrh	r3, [r4, #12]
 80057a4:	0719      	lsls	r1, r3, #28
 80057a6:	d51d      	bpl.n	80057e4 <_puts_r+0x78>
 80057a8:	6923      	ldr	r3, [r4, #16]
 80057aa:	b1db      	cbz	r3, 80057e4 <_puts_r+0x78>
 80057ac:	3e01      	subs	r6, #1
 80057ae:	68a3      	ldr	r3, [r4, #8]
 80057b0:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80057b4:	3b01      	subs	r3, #1
 80057b6:	60a3      	str	r3, [r4, #8]
 80057b8:	bb39      	cbnz	r1, 800580a <_puts_r+0x9e>
 80057ba:	2b00      	cmp	r3, #0
 80057bc:	da38      	bge.n	8005830 <_puts_r+0xc4>
 80057be:	4622      	mov	r2, r4
 80057c0:	210a      	movs	r1, #10
 80057c2:	4628      	mov	r0, r5
 80057c4:	f000 f8e0 	bl	8005988 <__swbuf_r>
 80057c8:	3001      	adds	r0, #1
 80057ca:	d011      	beq.n	80057f0 <_puts_r+0x84>
 80057cc:	250a      	movs	r5, #10
 80057ce:	e011      	b.n	80057f4 <_puts_r+0x88>
 80057d0:	4b1b      	ldr	r3, [pc, #108]	; (8005840 <_puts_r+0xd4>)
 80057d2:	429c      	cmp	r4, r3
 80057d4:	d101      	bne.n	80057da <_puts_r+0x6e>
 80057d6:	68ac      	ldr	r4, [r5, #8]
 80057d8:	e7da      	b.n	8005790 <_puts_r+0x24>
 80057da:	4b1a      	ldr	r3, [pc, #104]	; (8005844 <_puts_r+0xd8>)
 80057dc:	429c      	cmp	r4, r3
 80057de:	bf08      	it	eq
 80057e0:	68ec      	ldreq	r4, [r5, #12]
 80057e2:	e7d5      	b.n	8005790 <_puts_r+0x24>
 80057e4:	4621      	mov	r1, r4
 80057e6:	4628      	mov	r0, r5
 80057e8:	f000 f932 	bl	8005a50 <__swsetup_r>
 80057ec:	2800      	cmp	r0, #0
 80057ee:	d0dd      	beq.n	80057ac <_puts_r+0x40>
 80057f0:	f04f 35ff 	mov.w	r5, #4294967295
 80057f4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80057f6:	07da      	lsls	r2, r3, #31
 80057f8:	d405      	bmi.n	8005806 <_puts_r+0x9a>
 80057fa:	89a3      	ldrh	r3, [r4, #12]
 80057fc:	059b      	lsls	r3, r3, #22
 80057fe:	d402      	bmi.n	8005806 <_puts_r+0x9a>
 8005800:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8005802:	f7ff feaf 	bl	8005564 <__retarget_lock_release_recursive>
 8005806:	4628      	mov	r0, r5
 8005808:	bd70      	pop	{r4, r5, r6, pc}
 800580a:	2b00      	cmp	r3, #0
 800580c:	da04      	bge.n	8005818 <_puts_r+0xac>
 800580e:	69a2      	ldr	r2, [r4, #24]
 8005810:	429a      	cmp	r2, r3
 8005812:	dc06      	bgt.n	8005822 <_puts_r+0xb6>
 8005814:	290a      	cmp	r1, #10
 8005816:	d004      	beq.n	8005822 <_puts_r+0xb6>
 8005818:	6823      	ldr	r3, [r4, #0]
 800581a:	1c5a      	adds	r2, r3, #1
 800581c:	6022      	str	r2, [r4, #0]
 800581e:	7019      	strb	r1, [r3, #0]
 8005820:	e7c5      	b.n	80057ae <_puts_r+0x42>
 8005822:	4622      	mov	r2, r4
 8005824:	4628      	mov	r0, r5
 8005826:	f000 f8af 	bl	8005988 <__swbuf_r>
 800582a:	3001      	adds	r0, #1
 800582c:	d1bf      	bne.n	80057ae <_puts_r+0x42>
 800582e:	e7df      	b.n	80057f0 <_puts_r+0x84>
 8005830:	6823      	ldr	r3, [r4, #0]
 8005832:	250a      	movs	r5, #10
 8005834:	1c5a      	adds	r2, r3, #1
 8005836:	6022      	str	r2, [r4, #0]
 8005838:	701d      	strb	r5, [r3, #0]
 800583a:	e7db      	b.n	80057f4 <_puts_r+0x88>
 800583c:	080067b0 	.word	0x080067b0
 8005840:	080067d0 	.word	0x080067d0
 8005844:	08006790 	.word	0x08006790

08005848 <puts>:
 8005848:	4b02      	ldr	r3, [pc, #8]	; (8005854 <puts+0xc>)
 800584a:	4601      	mov	r1, r0
 800584c:	6818      	ldr	r0, [r3, #0]
 800584e:	f7ff bf8d 	b.w	800576c <_puts_r>
 8005852:	bf00      	nop
 8005854:	2000000c 	.word	0x2000000c

08005858 <_sbrk_r>:
 8005858:	b538      	push	{r3, r4, r5, lr}
 800585a:	4d06      	ldr	r5, [pc, #24]	; (8005874 <_sbrk_r+0x1c>)
 800585c:	2300      	movs	r3, #0
 800585e:	4604      	mov	r4, r0
 8005860:	4608      	mov	r0, r1
 8005862:	602b      	str	r3, [r5, #0]
 8005864:	f7fc f8d6 	bl	8001a14 <_sbrk>
 8005868:	1c43      	adds	r3, r0, #1
 800586a:	d102      	bne.n	8005872 <_sbrk_r+0x1a>
 800586c:	682b      	ldr	r3, [r5, #0]
 800586e:	b103      	cbz	r3, 8005872 <_sbrk_r+0x1a>
 8005870:	6023      	str	r3, [r4, #0]
 8005872:	bd38      	pop	{r3, r4, r5, pc}
 8005874:	2000025c 	.word	0x2000025c

08005878 <_raise_r>:
 8005878:	291f      	cmp	r1, #31
 800587a:	b538      	push	{r3, r4, r5, lr}
 800587c:	4604      	mov	r4, r0
 800587e:	460d      	mov	r5, r1
 8005880:	d904      	bls.n	800588c <_raise_r+0x14>
 8005882:	2316      	movs	r3, #22
 8005884:	6003      	str	r3, [r0, #0]
 8005886:	f04f 30ff 	mov.w	r0, #4294967295
 800588a:	bd38      	pop	{r3, r4, r5, pc}
 800588c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800588e:	b112      	cbz	r2, 8005896 <_raise_r+0x1e>
 8005890:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8005894:	b94b      	cbnz	r3, 80058aa <_raise_r+0x32>
 8005896:	4620      	mov	r0, r4
 8005898:	f000 f830 	bl	80058fc <_getpid_r>
 800589c:	462a      	mov	r2, r5
 800589e:	4601      	mov	r1, r0
 80058a0:	4620      	mov	r0, r4
 80058a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80058a6:	f000 b817 	b.w	80058d8 <_kill_r>
 80058aa:	2b01      	cmp	r3, #1
 80058ac:	d00a      	beq.n	80058c4 <_raise_r+0x4c>
 80058ae:	1c59      	adds	r1, r3, #1
 80058b0:	d103      	bne.n	80058ba <_raise_r+0x42>
 80058b2:	2316      	movs	r3, #22
 80058b4:	6003      	str	r3, [r0, #0]
 80058b6:	2001      	movs	r0, #1
 80058b8:	e7e7      	b.n	800588a <_raise_r+0x12>
 80058ba:	2400      	movs	r4, #0
 80058bc:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80058c0:	4628      	mov	r0, r5
 80058c2:	4798      	blx	r3
 80058c4:	2000      	movs	r0, #0
 80058c6:	e7e0      	b.n	800588a <_raise_r+0x12>

080058c8 <raise>:
 80058c8:	4b02      	ldr	r3, [pc, #8]	; (80058d4 <raise+0xc>)
 80058ca:	4601      	mov	r1, r0
 80058cc:	6818      	ldr	r0, [r3, #0]
 80058ce:	f7ff bfd3 	b.w	8005878 <_raise_r>
 80058d2:	bf00      	nop
 80058d4:	2000000c 	.word	0x2000000c

080058d8 <_kill_r>:
 80058d8:	b538      	push	{r3, r4, r5, lr}
 80058da:	4d07      	ldr	r5, [pc, #28]	; (80058f8 <_kill_r+0x20>)
 80058dc:	2300      	movs	r3, #0
 80058de:	4604      	mov	r4, r0
 80058e0:	4608      	mov	r0, r1
 80058e2:	4611      	mov	r1, r2
 80058e4:	602b      	str	r3, [r5, #0]
 80058e6:	f7fc f847 	bl	8001978 <_kill>
 80058ea:	1c43      	adds	r3, r0, #1
 80058ec:	d102      	bne.n	80058f4 <_kill_r+0x1c>
 80058ee:	682b      	ldr	r3, [r5, #0]
 80058f0:	b103      	cbz	r3, 80058f4 <_kill_r+0x1c>
 80058f2:	6023      	str	r3, [r4, #0]
 80058f4:	bd38      	pop	{r3, r4, r5, pc}
 80058f6:	bf00      	nop
 80058f8:	2000025c 	.word	0x2000025c

080058fc <_getpid_r>:
 80058fc:	f7fc b834 	b.w	8001968 <_getpid>

08005900 <__sread>:
 8005900:	b510      	push	{r4, lr}
 8005902:	460c      	mov	r4, r1
 8005904:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005908:	f000 fc90 	bl	800622c <_read_r>
 800590c:	2800      	cmp	r0, #0
 800590e:	bfab      	itete	ge
 8005910:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8005912:	89a3      	ldrhlt	r3, [r4, #12]
 8005914:	181b      	addge	r3, r3, r0
 8005916:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800591a:	bfac      	ite	ge
 800591c:	6563      	strge	r3, [r4, #84]	; 0x54
 800591e:	81a3      	strhlt	r3, [r4, #12]
 8005920:	bd10      	pop	{r4, pc}

08005922 <__swrite>:
 8005922:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005926:	461f      	mov	r7, r3
 8005928:	898b      	ldrh	r3, [r1, #12]
 800592a:	05db      	lsls	r3, r3, #23
 800592c:	4605      	mov	r5, r0
 800592e:	460c      	mov	r4, r1
 8005930:	4616      	mov	r6, r2
 8005932:	d505      	bpl.n	8005940 <__swrite+0x1e>
 8005934:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005938:	2302      	movs	r3, #2
 800593a:	2200      	movs	r2, #0
 800593c:	f000 f906 	bl	8005b4c <_lseek_r>
 8005940:	89a3      	ldrh	r3, [r4, #12]
 8005942:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005946:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800594a:	81a3      	strh	r3, [r4, #12]
 800594c:	4632      	mov	r2, r6
 800594e:	463b      	mov	r3, r7
 8005950:	4628      	mov	r0, r5
 8005952:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005956:	f000 b869 	b.w	8005a2c <_write_r>

0800595a <__sseek>:
 800595a:	b510      	push	{r4, lr}
 800595c:	460c      	mov	r4, r1
 800595e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005962:	f000 f8f3 	bl	8005b4c <_lseek_r>
 8005966:	1c43      	adds	r3, r0, #1
 8005968:	89a3      	ldrh	r3, [r4, #12]
 800596a:	bf15      	itete	ne
 800596c:	6560      	strne	r0, [r4, #84]	; 0x54
 800596e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8005972:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8005976:	81a3      	strheq	r3, [r4, #12]
 8005978:	bf18      	it	ne
 800597a:	81a3      	strhne	r3, [r4, #12]
 800597c:	bd10      	pop	{r4, pc}

0800597e <__sclose>:
 800597e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005982:	f000 b8d3 	b.w	8005b2c <_close_r>
	...

08005988 <__swbuf_r>:
 8005988:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800598a:	460e      	mov	r6, r1
 800598c:	4614      	mov	r4, r2
 800598e:	4605      	mov	r5, r0
 8005990:	b118      	cbz	r0, 800599a <__swbuf_r+0x12>
 8005992:	6983      	ldr	r3, [r0, #24]
 8005994:	b90b      	cbnz	r3, 800599a <__swbuf_r+0x12>
 8005996:	f7ff fd21 	bl	80053dc <__sinit>
 800599a:	4b21      	ldr	r3, [pc, #132]	; (8005a20 <__swbuf_r+0x98>)
 800599c:	429c      	cmp	r4, r3
 800599e:	d12b      	bne.n	80059f8 <__swbuf_r+0x70>
 80059a0:	686c      	ldr	r4, [r5, #4]
 80059a2:	69a3      	ldr	r3, [r4, #24]
 80059a4:	60a3      	str	r3, [r4, #8]
 80059a6:	89a3      	ldrh	r3, [r4, #12]
 80059a8:	071a      	lsls	r2, r3, #28
 80059aa:	d52f      	bpl.n	8005a0c <__swbuf_r+0x84>
 80059ac:	6923      	ldr	r3, [r4, #16]
 80059ae:	b36b      	cbz	r3, 8005a0c <__swbuf_r+0x84>
 80059b0:	6923      	ldr	r3, [r4, #16]
 80059b2:	6820      	ldr	r0, [r4, #0]
 80059b4:	1ac0      	subs	r0, r0, r3
 80059b6:	6963      	ldr	r3, [r4, #20]
 80059b8:	b2f6      	uxtb	r6, r6
 80059ba:	4283      	cmp	r3, r0
 80059bc:	4637      	mov	r7, r6
 80059be:	dc04      	bgt.n	80059ca <__swbuf_r+0x42>
 80059c0:	4621      	mov	r1, r4
 80059c2:	4628      	mov	r0, r5
 80059c4:	f7ff fc64 	bl	8005290 <_fflush_r>
 80059c8:	bb30      	cbnz	r0, 8005a18 <__swbuf_r+0x90>
 80059ca:	68a3      	ldr	r3, [r4, #8]
 80059cc:	3b01      	subs	r3, #1
 80059ce:	60a3      	str	r3, [r4, #8]
 80059d0:	6823      	ldr	r3, [r4, #0]
 80059d2:	1c5a      	adds	r2, r3, #1
 80059d4:	6022      	str	r2, [r4, #0]
 80059d6:	701e      	strb	r6, [r3, #0]
 80059d8:	6963      	ldr	r3, [r4, #20]
 80059da:	3001      	adds	r0, #1
 80059dc:	4283      	cmp	r3, r0
 80059de:	d004      	beq.n	80059ea <__swbuf_r+0x62>
 80059e0:	89a3      	ldrh	r3, [r4, #12]
 80059e2:	07db      	lsls	r3, r3, #31
 80059e4:	d506      	bpl.n	80059f4 <__swbuf_r+0x6c>
 80059e6:	2e0a      	cmp	r6, #10
 80059e8:	d104      	bne.n	80059f4 <__swbuf_r+0x6c>
 80059ea:	4621      	mov	r1, r4
 80059ec:	4628      	mov	r0, r5
 80059ee:	f7ff fc4f 	bl	8005290 <_fflush_r>
 80059f2:	b988      	cbnz	r0, 8005a18 <__swbuf_r+0x90>
 80059f4:	4638      	mov	r0, r7
 80059f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80059f8:	4b0a      	ldr	r3, [pc, #40]	; (8005a24 <__swbuf_r+0x9c>)
 80059fa:	429c      	cmp	r4, r3
 80059fc:	d101      	bne.n	8005a02 <__swbuf_r+0x7a>
 80059fe:	68ac      	ldr	r4, [r5, #8]
 8005a00:	e7cf      	b.n	80059a2 <__swbuf_r+0x1a>
 8005a02:	4b09      	ldr	r3, [pc, #36]	; (8005a28 <__swbuf_r+0xa0>)
 8005a04:	429c      	cmp	r4, r3
 8005a06:	bf08      	it	eq
 8005a08:	68ec      	ldreq	r4, [r5, #12]
 8005a0a:	e7ca      	b.n	80059a2 <__swbuf_r+0x1a>
 8005a0c:	4621      	mov	r1, r4
 8005a0e:	4628      	mov	r0, r5
 8005a10:	f000 f81e 	bl	8005a50 <__swsetup_r>
 8005a14:	2800      	cmp	r0, #0
 8005a16:	d0cb      	beq.n	80059b0 <__swbuf_r+0x28>
 8005a18:	f04f 37ff 	mov.w	r7, #4294967295
 8005a1c:	e7ea      	b.n	80059f4 <__swbuf_r+0x6c>
 8005a1e:	bf00      	nop
 8005a20:	080067b0 	.word	0x080067b0
 8005a24:	080067d0 	.word	0x080067d0
 8005a28:	08006790 	.word	0x08006790

08005a2c <_write_r>:
 8005a2c:	b538      	push	{r3, r4, r5, lr}
 8005a2e:	4d07      	ldr	r5, [pc, #28]	; (8005a4c <_write_r+0x20>)
 8005a30:	4604      	mov	r4, r0
 8005a32:	4608      	mov	r0, r1
 8005a34:	4611      	mov	r1, r2
 8005a36:	2200      	movs	r2, #0
 8005a38:	602a      	str	r2, [r5, #0]
 8005a3a:	461a      	mov	r2, r3
 8005a3c:	f7fa fce4 	bl	8000408 <_write>
 8005a40:	1c43      	adds	r3, r0, #1
 8005a42:	d102      	bne.n	8005a4a <_write_r+0x1e>
 8005a44:	682b      	ldr	r3, [r5, #0]
 8005a46:	b103      	cbz	r3, 8005a4a <_write_r+0x1e>
 8005a48:	6023      	str	r3, [r4, #0]
 8005a4a:	bd38      	pop	{r3, r4, r5, pc}
 8005a4c:	2000025c 	.word	0x2000025c

08005a50 <__swsetup_r>:
 8005a50:	4b32      	ldr	r3, [pc, #200]	; (8005b1c <__swsetup_r+0xcc>)
 8005a52:	b570      	push	{r4, r5, r6, lr}
 8005a54:	681d      	ldr	r5, [r3, #0]
 8005a56:	4606      	mov	r6, r0
 8005a58:	460c      	mov	r4, r1
 8005a5a:	b125      	cbz	r5, 8005a66 <__swsetup_r+0x16>
 8005a5c:	69ab      	ldr	r3, [r5, #24]
 8005a5e:	b913      	cbnz	r3, 8005a66 <__swsetup_r+0x16>
 8005a60:	4628      	mov	r0, r5
 8005a62:	f7ff fcbb 	bl	80053dc <__sinit>
 8005a66:	4b2e      	ldr	r3, [pc, #184]	; (8005b20 <__swsetup_r+0xd0>)
 8005a68:	429c      	cmp	r4, r3
 8005a6a:	d10f      	bne.n	8005a8c <__swsetup_r+0x3c>
 8005a6c:	686c      	ldr	r4, [r5, #4]
 8005a6e:	89a3      	ldrh	r3, [r4, #12]
 8005a70:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8005a74:	0719      	lsls	r1, r3, #28
 8005a76:	d42c      	bmi.n	8005ad2 <__swsetup_r+0x82>
 8005a78:	06dd      	lsls	r5, r3, #27
 8005a7a:	d411      	bmi.n	8005aa0 <__swsetup_r+0x50>
 8005a7c:	2309      	movs	r3, #9
 8005a7e:	6033      	str	r3, [r6, #0]
 8005a80:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8005a84:	81a3      	strh	r3, [r4, #12]
 8005a86:	f04f 30ff 	mov.w	r0, #4294967295
 8005a8a:	e03e      	b.n	8005b0a <__swsetup_r+0xba>
 8005a8c:	4b25      	ldr	r3, [pc, #148]	; (8005b24 <__swsetup_r+0xd4>)
 8005a8e:	429c      	cmp	r4, r3
 8005a90:	d101      	bne.n	8005a96 <__swsetup_r+0x46>
 8005a92:	68ac      	ldr	r4, [r5, #8]
 8005a94:	e7eb      	b.n	8005a6e <__swsetup_r+0x1e>
 8005a96:	4b24      	ldr	r3, [pc, #144]	; (8005b28 <__swsetup_r+0xd8>)
 8005a98:	429c      	cmp	r4, r3
 8005a9a:	bf08      	it	eq
 8005a9c:	68ec      	ldreq	r4, [r5, #12]
 8005a9e:	e7e6      	b.n	8005a6e <__swsetup_r+0x1e>
 8005aa0:	0758      	lsls	r0, r3, #29
 8005aa2:	d512      	bpl.n	8005aca <__swsetup_r+0x7a>
 8005aa4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8005aa6:	b141      	cbz	r1, 8005aba <__swsetup_r+0x6a>
 8005aa8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8005aac:	4299      	cmp	r1, r3
 8005aae:	d002      	beq.n	8005ab6 <__swsetup_r+0x66>
 8005ab0:	4630      	mov	r0, r6
 8005ab2:	f7ff fd99 	bl	80055e8 <_free_r>
 8005ab6:	2300      	movs	r3, #0
 8005ab8:	6363      	str	r3, [r4, #52]	; 0x34
 8005aba:	89a3      	ldrh	r3, [r4, #12]
 8005abc:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8005ac0:	81a3      	strh	r3, [r4, #12]
 8005ac2:	2300      	movs	r3, #0
 8005ac4:	6063      	str	r3, [r4, #4]
 8005ac6:	6923      	ldr	r3, [r4, #16]
 8005ac8:	6023      	str	r3, [r4, #0]
 8005aca:	89a3      	ldrh	r3, [r4, #12]
 8005acc:	f043 0308 	orr.w	r3, r3, #8
 8005ad0:	81a3      	strh	r3, [r4, #12]
 8005ad2:	6923      	ldr	r3, [r4, #16]
 8005ad4:	b94b      	cbnz	r3, 8005aea <__swsetup_r+0x9a>
 8005ad6:	89a3      	ldrh	r3, [r4, #12]
 8005ad8:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8005adc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8005ae0:	d003      	beq.n	8005aea <__swsetup_r+0x9a>
 8005ae2:	4621      	mov	r1, r4
 8005ae4:	4630      	mov	r0, r6
 8005ae6:	f000 f867 	bl	8005bb8 <__smakebuf_r>
 8005aea:	89a0      	ldrh	r0, [r4, #12]
 8005aec:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8005af0:	f010 0301 	ands.w	r3, r0, #1
 8005af4:	d00a      	beq.n	8005b0c <__swsetup_r+0xbc>
 8005af6:	2300      	movs	r3, #0
 8005af8:	60a3      	str	r3, [r4, #8]
 8005afa:	6963      	ldr	r3, [r4, #20]
 8005afc:	425b      	negs	r3, r3
 8005afe:	61a3      	str	r3, [r4, #24]
 8005b00:	6923      	ldr	r3, [r4, #16]
 8005b02:	b943      	cbnz	r3, 8005b16 <__swsetup_r+0xc6>
 8005b04:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8005b08:	d1ba      	bne.n	8005a80 <__swsetup_r+0x30>
 8005b0a:	bd70      	pop	{r4, r5, r6, pc}
 8005b0c:	0781      	lsls	r1, r0, #30
 8005b0e:	bf58      	it	pl
 8005b10:	6963      	ldrpl	r3, [r4, #20]
 8005b12:	60a3      	str	r3, [r4, #8]
 8005b14:	e7f4      	b.n	8005b00 <__swsetup_r+0xb0>
 8005b16:	2000      	movs	r0, #0
 8005b18:	e7f7      	b.n	8005b0a <__swsetup_r+0xba>
 8005b1a:	bf00      	nop
 8005b1c:	2000000c 	.word	0x2000000c
 8005b20:	080067b0 	.word	0x080067b0
 8005b24:	080067d0 	.word	0x080067d0
 8005b28:	08006790 	.word	0x08006790

08005b2c <_close_r>:
 8005b2c:	b538      	push	{r3, r4, r5, lr}
 8005b2e:	4d06      	ldr	r5, [pc, #24]	; (8005b48 <_close_r+0x1c>)
 8005b30:	2300      	movs	r3, #0
 8005b32:	4604      	mov	r4, r0
 8005b34:	4608      	mov	r0, r1
 8005b36:	602b      	str	r3, [r5, #0]
 8005b38:	f7fb ff38 	bl	80019ac <_close>
 8005b3c:	1c43      	adds	r3, r0, #1
 8005b3e:	d102      	bne.n	8005b46 <_close_r+0x1a>
 8005b40:	682b      	ldr	r3, [r5, #0]
 8005b42:	b103      	cbz	r3, 8005b46 <_close_r+0x1a>
 8005b44:	6023      	str	r3, [r4, #0]
 8005b46:	bd38      	pop	{r3, r4, r5, pc}
 8005b48:	2000025c 	.word	0x2000025c

08005b4c <_lseek_r>:
 8005b4c:	b538      	push	{r3, r4, r5, lr}
 8005b4e:	4d07      	ldr	r5, [pc, #28]	; (8005b6c <_lseek_r+0x20>)
 8005b50:	4604      	mov	r4, r0
 8005b52:	4608      	mov	r0, r1
 8005b54:	4611      	mov	r1, r2
 8005b56:	2200      	movs	r2, #0
 8005b58:	602a      	str	r2, [r5, #0]
 8005b5a:	461a      	mov	r2, r3
 8005b5c:	f7fb ff4d 	bl	80019fa <_lseek>
 8005b60:	1c43      	adds	r3, r0, #1
 8005b62:	d102      	bne.n	8005b6a <_lseek_r+0x1e>
 8005b64:	682b      	ldr	r3, [r5, #0]
 8005b66:	b103      	cbz	r3, 8005b6a <_lseek_r+0x1e>
 8005b68:	6023      	str	r3, [r4, #0]
 8005b6a:	bd38      	pop	{r3, r4, r5, pc}
 8005b6c:	2000025c 	.word	0x2000025c

08005b70 <__swhatbuf_r>:
 8005b70:	b570      	push	{r4, r5, r6, lr}
 8005b72:	460e      	mov	r6, r1
 8005b74:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005b78:	2900      	cmp	r1, #0
 8005b7a:	b096      	sub	sp, #88	; 0x58
 8005b7c:	4614      	mov	r4, r2
 8005b7e:	461d      	mov	r5, r3
 8005b80:	da07      	bge.n	8005b92 <__swhatbuf_r+0x22>
 8005b82:	2300      	movs	r3, #0
 8005b84:	602b      	str	r3, [r5, #0]
 8005b86:	89b3      	ldrh	r3, [r6, #12]
 8005b88:	061a      	lsls	r2, r3, #24
 8005b8a:	d410      	bmi.n	8005bae <__swhatbuf_r+0x3e>
 8005b8c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8005b90:	e00e      	b.n	8005bb0 <__swhatbuf_r+0x40>
 8005b92:	466a      	mov	r2, sp
 8005b94:	f000 fb5c 	bl	8006250 <_fstat_r>
 8005b98:	2800      	cmp	r0, #0
 8005b9a:	dbf2      	blt.n	8005b82 <__swhatbuf_r+0x12>
 8005b9c:	9a01      	ldr	r2, [sp, #4]
 8005b9e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8005ba2:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8005ba6:	425a      	negs	r2, r3
 8005ba8:	415a      	adcs	r2, r3
 8005baa:	602a      	str	r2, [r5, #0]
 8005bac:	e7ee      	b.n	8005b8c <__swhatbuf_r+0x1c>
 8005bae:	2340      	movs	r3, #64	; 0x40
 8005bb0:	2000      	movs	r0, #0
 8005bb2:	6023      	str	r3, [r4, #0]
 8005bb4:	b016      	add	sp, #88	; 0x58
 8005bb6:	bd70      	pop	{r4, r5, r6, pc}

08005bb8 <__smakebuf_r>:
 8005bb8:	898b      	ldrh	r3, [r1, #12]
 8005bba:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005bbc:	079d      	lsls	r5, r3, #30
 8005bbe:	4606      	mov	r6, r0
 8005bc0:	460c      	mov	r4, r1
 8005bc2:	d507      	bpl.n	8005bd4 <__smakebuf_r+0x1c>
 8005bc4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8005bc8:	6023      	str	r3, [r4, #0]
 8005bca:	6123      	str	r3, [r4, #16]
 8005bcc:	2301      	movs	r3, #1
 8005bce:	6163      	str	r3, [r4, #20]
 8005bd0:	b002      	add	sp, #8
 8005bd2:	bd70      	pop	{r4, r5, r6, pc}
 8005bd4:	ab01      	add	r3, sp, #4
 8005bd6:	466a      	mov	r2, sp
 8005bd8:	f7ff ffca 	bl	8005b70 <__swhatbuf_r>
 8005bdc:	9900      	ldr	r1, [sp, #0]
 8005bde:	4605      	mov	r5, r0
 8005be0:	4630      	mov	r0, r6
 8005be2:	f7ff fd51 	bl	8005688 <_malloc_r>
 8005be6:	b948      	cbnz	r0, 8005bfc <__smakebuf_r+0x44>
 8005be8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005bec:	059a      	lsls	r2, r3, #22
 8005bee:	d4ef      	bmi.n	8005bd0 <__smakebuf_r+0x18>
 8005bf0:	f023 0303 	bic.w	r3, r3, #3
 8005bf4:	f043 0302 	orr.w	r3, r3, #2
 8005bf8:	81a3      	strh	r3, [r4, #12]
 8005bfa:	e7e3      	b.n	8005bc4 <__smakebuf_r+0xc>
 8005bfc:	4b0d      	ldr	r3, [pc, #52]	; (8005c34 <__smakebuf_r+0x7c>)
 8005bfe:	62b3      	str	r3, [r6, #40]	; 0x28
 8005c00:	89a3      	ldrh	r3, [r4, #12]
 8005c02:	6020      	str	r0, [r4, #0]
 8005c04:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005c08:	81a3      	strh	r3, [r4, #12]
 8005c0a:	9b00      	ldr	r3, [sp, #0]
 8005c0c:	6163      	str	r3, [r4, #20]
 8005c0e:	9b01      	ldr	r3, [sp, #4]
 8005c10:	6120      	str	r0, [r4, #16]
 8005c12:	b15b      	cbz	r3, 8005c2c <__smakebuf_r+0x74>
 8005c14:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005c18:	4630      	mov	r0, r6
 8005c1a:	f000 fb2b 	bl	8006274 <_isatty_r>
 8005c1e:	b128      	cbz	r0, 8005c2c <__smakebuf_r+0x74>
 8005c20:	89a3      	ldrh	r3, [r4, #12]
 8005c22:	f023 0303 	bic.w	r3, r3, #3
 8005c26:	f043 0301 	orr.w	r3, r3, #1
 8005c2a:	81a3      	strh	r3, [r4, #12]
 8005c2c:	89a0      	ldrh	r0, [r4, #12]
 8005c2e:	4305      	orrs	r5, r0
 8005c30:	81a5      	strh	r5, [r4, #12]
 8005c32:	e7cd      	b.n	8005bd0 <__smakebuf_r+0x18>
 8005c34:	08005375 	.word	0x08005375

08005c38 <__malloc_lock>:
 8005c38:	4801      	ldr	r0, [pc, #4]	; (8005c40 <__malloc_lock+0x8>)
 8005c3a:	f7ff bc92 	b.w	8005562 <__retarget_lock_acquire_recursive>
 8005c3e:	bf00      	nop
 8005c40:	20000254 	.word	0x20000254

08005c44 <__malloc_unlock>:
 8005c44:	4801      	ldr	r0, [pc, #4]	; (8005c4c <__malloc_unlock+0x8>)
 8005c46:	f7ff bc8d 	b.w	8005564 <__retarget_lock_release_recursive>
 8005c4a:	bf00      	nop
 8005c4c:	20000254 	.word	0x20000254

08005c50 <__sfputc_r>:
 8005c50:	6893      	ldr	r3, [r2, #8]
 8005c52:	3b01      	subs	r3, #1
 8005c54:	2b00      	cmp	r3, #0
 8005c56:	b410      	push	{r4}
 8005c58:	6093      	str	r3, [r2, #8]
 8005c5a:	da08      	bge.n	8005c6e <__sfputc_r+0x1e>
 8005c5c:	6994      	ldr	r4, [r2, #24]
 8005c5e:	42a3      	cmp	r3, r4
 8005c60:	db01      	blt.n	8005c66 <__sfputc_r+0x16>
 8005c62:	290a      	cmp	r1, #10
 8005c64:	d103      	bne.n	8005c6e <__sfputc_r+0x1e>
 8005c66:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005c6a:	f7ff be8d 	b.w	8005988 <__swbuf_r>
 8005c6e:	6813      	ldr	r3, [r2, #0]
 8005c70:	1c58      	adds	r0, r3, #1
 8005c72:	6010      	str	r0, [r2, #0]
 8005c74:	7019      	strb	r1, [r3, #0]
 8005c76:	4608      	mov	r0, r1
 8005c78:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005c7c:	4770      	bx	lr

08005c7e <__sfputs_r>:
 8005c7e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005c80:	4606      	mov	r6, r0
 8005c82:	460f      	mov	r7, r1
 8005c84:	4614      	mov	r4, r2
 8005c86:	18d5      	adds	r5, r2, r3
 8005c88:	42ac      	cmp	r4, r5
 8005c8a:	d101      	bne.n	8005c90 <__sfputs_r+0x12>
 8005c8c:	2000      	movs	r0, #0
 8005c8e:	e007      	b.n	8005ca0 <__sfputs_r+0x22>
 8005c90:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005c94:	463a      	mov	r2, r7
 8005c96:	4630      	mov	r0, r6
 8005c98:	f7ff ffda 	bl	8005c50 <__sfputc_r>
 8005c9c:	1c43      	adds	r3, r0, #1
 8005c9e:	d1f3      	bne.n	8005c88 <__sfputs_r+0xa>
 8005ca0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08005ca4 <_vfiprintf_r>:
 8005ca4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005ca8:	460d      	mov	r5, r1
 8005caa:	b09d      	sub	sp, #116	; 0x74
 8005cac:	4614      	mov	r4, r2
 8005cae:	4698      	mov	r8, r3
 8005cb0:	4606      	mov	r6, r0
 8005cb2:	b118      	cbz	r0, 8005cbc <_vfiprintf_r+0x18>
 8005cb4:	6983      	ldr	r3, [r0, #24]
 8005cb6:	b90b      	cbnz	r3, 8005cbc <_vfiprintf_r+0x18>
 8005cb8:	f7ff fb90 	bl	80053dc <__sinit>
 8005cbc:	4b89      	ldr	r3, [pc, #548]	; (8005ee4 <_vfiprintf_r+0x240>)
 8005cbe:	429d      	cmp	r5, r3
 8005cc0:	d11b      	bne.n	8005cfa <_vfiprintf_r+0x56>
 8005cc2:	6875      	ldr	r5, [r6, #4]
 8005cc4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8005cc6:	07d9      	lsls	r1, r3, #31
 8005cc8:	d405      	bmi.n	8005cd6 <_vfiprintf_r+0x32>
 8005cca:	89ab      	ldrh	r3, [r5, #12]
 8005ccc:	059a      	lsls	r2, r3, #22
 8005cce:	d402      	bmi.n	8005cd6 <_vfiprintf_r+0x32>
 8005cd0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8005cd2:	f7ff fc46 	bl	8005562 <__retarget_lock_acquire_recursive>
 8005cd6:	89ab      	ldrh	r3, [r5, #12]
 8005cd8:	071b      	lsls	r3, r3, #28
 8005cda:	d501      	bpl.n	8005ce0 <_vfiprintf_r+0x3c>
 8005cdc:	692b      	ldr	r3, [r5, #16]
 8005cde:	b9eb      	cbnz	r3, 8005d1c <_vfiprintf_r+0x78>
 8005ce0:	4629      	mov	r1, r5
 8005ce2:	4630      	mov	r0, r6
 8005ce4:	f7ff feb4 	bl	8005a50 <__swsetup_r>
 8005ce8:	b1c0      	cbz	r0, 8005d1c <_vfiprintf_r+0x78>
 8005cea:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8005cec:	07dc      	lsls	r4, r3, #31
 8005cee:	d50e      	bpl.n	8005d0e <_vfiprintf_r+0x6a>
 8005cf0:	f04f 30ff 	mov.w	r0, #4294967295
 8005cf4:	b01d      	add	sp, #116	; 0x74
 8005cf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005cfa:	4b7b      	ldr	r3, [pc, #492]	; (8005ee8 <_vfiprintf_r+0x244>)
 8005cfc:	429d      	cmp	r5, r3
 8005cfe:	d101      	bne.n	8005d04 <_vfiprintf_r+0x60>
 8005d00:	68b5      	ldr	r5, [r6, #8]
 8005d02:	e7df      	b.n	8005cc4 <_vfiprintf_r+0x20>
 8005d04:	4b79      	ldr	r3, [pc, #484]	; (8005eec <_vfiprintf_r+0x248>)
 8005d06:	429d      	cmp	r5, r3
 8005d08:	bf08      	it	eq
 8005d0a:	68f5      	ldreq	r5, [r6, #12]
 8005d0c:	e7da      	b.n	8005cc4 <_vfiprintf_r+0x20>
 8005d0e:	89ab      	ldrh	r3, [r5, #12]
 8005d10:	0598      	lsls	r0, r3, #22
 8005d12:	d4ed      	bmi.n	8005cf0 <_vfiprintf_r+0x4c>
 8005d14:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8005d16:	f7ff fc25 	bl	8005564 <__retarget_lock_release_recursive>
 8005d1a:	e7e9      	b.n	8005cf0 <_vfiprintf_r+0x4c>
 8005d1c:	2300      	movs	r3, #0
 8005d1e:	9309      	str	r3, [sp, #36]	; 0x24
 8005d20:	2320      	movs	r3, #32
 8005d22:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8005d26:	f8cd 800c 	str.w	r8, [sp, #12]
 8005d2a:	2330      	movs	r3, #48	; 0x30
 8005d2c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8005ef0 <_vfiprintf_r+0x24c>
 8005d30:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8005d34:	f04f 0901 	mov.w	r9, #1
 8005d38:	4623      	mov	r3, r4
 8005d3a:	469a      	mov	sl, r3
 8005d3c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005d40:	b10a      	cbz	r2, 8005d46 <_vfiprintf_r+0xa2>
 8005d42:	2a25      	cmp	r2, #37	; 0x25
 8005d44:	d1f9      	bne.n	8005d3a <_vfiprintf_r+0x96>
 8005d46:	ebba 0b04 	subs.w	fp, sl, r4
 8005d4a:	d00b      	beq.n	8005d64 <_vfiprintf_r+0xc0>
 8005d4c:	465b      	mov	r3, fp
 8005d4e:	4622      	mov	r2, r4
 8005d50:	4629      	mov	r1, r5
 8005d52:	4630      	mov	r0, r6
 8005d54:	f7ff ff93 	bl	8005c7e <__sfputs_r>
 8005d58:	3001      	adds	r0, #1
 8005d5a:	f000 80aa 	beq.w	8005eb2 <_vfiprintf_r+0x20e>
 8005d5e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005d60:	445a      	add	r2, fp
 8005d62:	9209      	str	r2, [sp, #36]	; 0x24
 8005d64:	f89a 3000 	ldrb.w	r3, [sl]
 8005d68:	2b00      	cmp	r3, #0
 8005d6a:	f000 80a2 	beq.w	8005eb2 <_vfiprintf_r+0x20e>
 8005d6e:	2300      	movs	r3, #0
 8005d70:	f04f 32ff 	mov.w	r2, #4294967295
 8005d74:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005d78:	f10a 0a01 	add.w	sl, sl, #1
 8005d7c:	9304      	str	r3, [sp, #16]
 8005d7e:	9307      	str	r3, [sp, #28]
 8005d80:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8005d84:	931a      	str	r3, [sp, #104]	; 0x68
 8005d86:	4654      	mov	r4, sl
 8005d88:	2205      	movs	r2, #5
 8005d8a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005d8e:	4858      	ldr	r0, [pc, #352]	; (8005ef0 <_vfiprintf_r+0x24c>)
 8005d90:	f7fa fa2e 	bl	80001f0 <memchr>
 8005d94:	9a04      	ldr	r2, [sp, #16]
 8005d96:	b9d8      	cbnz	r0, 8005dd0 <_vfiprintf_r+0x12c>
 8005d98:	06d1      	lsls	r1, r2, #27
 8005d9a:	bf44      	itt	mi
 8005d9c:	2320      	movmi	r3, #32
 8005d9e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005da2:	0713      	lsls	r3, r2, #28
 8005da4:	bf44      	itt	mi
 8005da6:	232b      	movmi	r3, #43	; 0x2b
 8005da8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005dac:	f89a 3000 	ldrb.w	r3, [sl]
 8005db0:	2b2a      	cmp	r3, #42	; 0x2a
 8005db2:	d015      	beq.n	8005de0 <_vfiprintf_r+0x13c>
 8005db4:	9a07      	ldr	r2, [sp, #28]
 8005db6:	4654      	mov	r4, sl
 8005db8:	2000      	movs	r0, #0
 8005dba:	f04f 0c0a 	mov.w	ip, #10
 8005dbe:	4621      	mov	r1, r4
 8005dc0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005dc4:	3b30      	subs	r3, #48	; 0x30
 8005dc6:	2b09      	cmp	r3, #9
 8005dc8:	d94e      	bls.n	8005e68 <_vfiprintf_r+0x1c4>
 8005dca:	b1b0      	cbz	r0, 8005dfa <_vfiprintf_r+0x156>
 8005dcc:	9207      	str	r2, [sp, #28]
 8005dce:	e014      	b.n	8005dfa <_vfiprintf_r+0x156>
 8005dd0:	eba0 0308 	sub.w	r3, r0, r8
 8005dd4:	fa09 f303 	lsl.w	r3, r9, r3
 8005dd8:	4313      	orrs	r3, r2
 8005dda:	9304      	str	r3, [sp, #16]
 8005ddc:	46a2      	mov	sl, r4
 8005dde:	e7d2      	b.n	8005d86 <_vfiprintf_r+0xe2>
 8005de0:	9b03      	ldr	r3, [sp, #12]
 8005de2:	1d19      	adds	r1, r3, #4
 8005de4:	681b      	ldr	r3, [r3, #0]
 8005de6:	9103      	str	r1, [sp, #12]
 8005de8:	2b00      	cmp	r3, #0
 8005dea:	bfbb      	ittet	lt
 8005dec:	425b      	neglt	r3, r3
 8005dee:	f042 0202 	orrlt.w	r2, r2, #2
 8005df2:	9307      	strge	r3, [sp, #28]
 8005df4:	9307      	strlt	r3, [sp, #28]
 8005df6:	bfb8      	it	lt
 8005df8:	9204      	strlt	r2, [sp, #16]
 8005dfa:	7823      	ldrb	r3, [r4, #0]
 8005dfc:	2b2e      	cmp	r3, #46	; 0x2e
 8005dfe:	d10c      	bne.n	8005e1a <_vfiprintf_r+0x176>
 8005e00:	7863      	ldrb	r3, [r4, #1]
 8005e02:	2b2a      	cmp	r3, #42	; 0x2a
 8005e04:	d135      	bne.n	8005e72 <_vfiprintf_r+0x1ce>
 8005e06:	9b03      	ldr	r3, [sp, #12]
 8005e08:	1d1a      	adds	r2, r3, #4
 8005e0a:	681b      	ldr	r3, [r3, #0]
 8005e0c:	9203      	str	r2, [sp, #12]
 8005e0e:	2b00      	cmp	r3, #0
 8005e10:	bfb8      	it	lt
 8005e12:	f04f 33ff 	movlt.w	r3, #4294967295
 8005e16:	3402      	adds	r4, #2
 8005e18:	9305      	str	r3, [sp, #20]
 8005e1a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8005f00 <_vfiprintf_r+0x25c>
 8005e1e:	7821      	ldrb	r1, [r4, #0]
 8005e20:	2203      	movs	r2, #3
 8005e22:	4650      	mov	r0, sl
 8005e24:	f7fa f9e4 	bl	80001f0 <memchr>
 8005e28:	b140      	cbz	r0, 8005e3c <_vfiprintf_r+0x198>
 8005e2a:	2340      	movs	r3, #64	; 0x40
 8005e2c:	eba0 000a 	sub.w	r0, r0, sl
 8005e30:	fa03 f000 	lsl.w	r0, r3, r0
 8005e34:	9b04      	ldr	r3, [sp, #16]
 8005e36:	4303      	orrs	r3, r0
 8005e38:	3401      	adds	r4, #1
 8005e3a:	9304      	str	r3, [sp, #16]
 8005e3c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005e40:	482c      	ldr	r0, [pc, #176]	; (8005ef4 <_vfiprintf_r+0x250>)
 8005e42:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8005e46:	2206      	movs	r2, #6
 8005e48:	f7fa f9d2 	bl	80001f0 <memchr>
 8005e4c:	2800      	cmp	r0, #0
 8005e4e:	d03f      	beq.n	8005ed0 <_vfiprintf_r+0x22c>
 8005e50:	4b29      	ldr	r3, [pc, #164]	; (8005ef8 <_vfiprintf_r+0x254>)
 8005e52:	bb1b      	cbnz	r3, 8005e9c <_vfiprintf_r+0x1f8>
 8005e54:	9b03      	ldr	r3, [sp, #12]
 8005e56:	3307      	adds	r3, #7
 8005e58:	f023 0307 	bic.w	r3, r3, #7
 8005e5c:	3308      	adds	r3, #8
 8005e5e:	9303      	str	r3, [sp, #12]
 8005e60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005e62:	443b      	add	r3, r7
 8005e64:	9309      	str	r3, [sp, #36]	; 0x24
 8005e66:	e767      	b.n	8005d38 <_vfiprintf_r+0x94>
 8005e68:	fb0c 3202 	mla	r2, ip, r2, r3
 8005e6c:	460c      	mov	r4, r1
 8005e6e:	2001      	movs	r0, #1
 8005e70:	e7a5      	b.n	8005dbe <_vfiprintf_r+0x11a>
 8005e72:	2300      	movs	r3, #0
 8005e74:	3401      	adds	r4, #1
 8005e76:	9305      	str	r3, [sp, #20]
 8005e78:	4619      	mov	r1, r3
 8005e7a:	f04f 0c0a 	mov.w	ip, #10
 8005e7e:	4620      	mov	r0, r4
 8005e80:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005e84:	3a30      	subs	r2, #48	; 0x30
 8005e86:	2a09      	cmp	r2, #9
 8005e88:	d903      	bls.n	8005e92 <_vfiprintf_r+0x1ee>
 8005e8a:	2b00      	cmp	r3, #0
 8005e8c:	d0c5      	beq.n	8005e1a <_vfiprintf_r+0x176>
 8005e8e:	9105      	str	r1, [sp, #20]
 8005e90:	e7c3      	b.n	8005e1a <_vfiprintf_r+0x176>
 8005e92:	fb0c 2101 	mla	r1, ip, r1, r2
 8005e96:	4604      	mov	r4, r0
 8005e98:	2301      	movs	r3, #1
 8005e9a:	e7f0      	b.n	8005e7e <_vfiprintf_r+0x1da>
 8005e9c:	ab03      	add	r3, sp, #12
 8005e9e:	9300      	str	r3, [sp, #0]
 8005ea0:	462a      	mov	r2, r5
 8005ea2:	4b16      	ldr	r3, [pc, #88]	; (8005efc <_vfiprintf_r+0x258>)
 8005ea4:	a904      	add	r1, sp, #16
 8005ea6:	4630      	mov	r0, r6
 8005ea8:	f3af 8000 	nop.w
 8005eac:	4607      	mov	r7, r0
 8005eae:	1c78      	adds	r0, r7, #1
 8005eb0:	d1d6      	bne.n	8005e60 <_vfiprintf_r+0x1bc>
 8005eb2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8005eb4:	07d9      	lsls	r1, r3, #31
 8005eb6:	d405      	bmi.n	8005ec4 <_vfiprintf_r+0x220>
 8005eb8:	89ab      	ldrh	r3, [r5, #12]
 8005eba:	059a      	lsls	r2, r3, #22
 8005ebc:	d402      	bmi.n	8005ec4 <_vfiprintf_r+0x220>
 8005ebe:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8005ec0:	f7ff fb50 	bl	8005564 <__retarget_lock_release_recursive>
 8005ec4:	89ab      	ldrh	r3, [r5, #12]
 8005ec6:	065b      	lsls	r3, r3, #25
 8005ec8:	f53f af12 	bmi.w	8005cf0 <_vfiprintf_r+0x4c>
 8005ecc:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005ece:	e711      	b.n	8005cf4 <_vfiprintf_r+0x50>
 8005ed0:	ab03      	add	r3, sp, #12
 8005ed2:	9300      	str	r3, [sp, #0]
 8005ed4:	462a      	mov	r2, r5
 8005ed6:	4b09      	ldr	r3, [pc, #36]	; (8005efc <_vfiprintf_r+0x258>)
 8005ed8:	a904      	add	r1, sp, #16
 8005eda:	4630      	mov	r0, r6
 8005edc:	f000 f880 	bl	8005fe0 <_printf_i>
 8005ee0:	e7e4      	b.n	8005eac <_vfiprintf_r+0x208>
 8005ee2:	bf00      	nop
 8005ee4:	080067b0 	.word	0x080067b0
 8005ee8:	080067d0 	.word	0x080067d0
 8005eec:	08006790 	.word	0x08006790
 8005ef0:	080067f4 	.word	0x080067f4
 8005ef4:	080067fe 	.word	0x080067fe
 8005ef8:	00000000 	.word	0x00000000
 8005efc:	08005c7f 	.word	0x08005c7f
 8005f00:	080067fa 	.word	0x080067fa

08005f04 <_printf_common>:
 8005f04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005f08:	4616      	mov	r6, r2
 8005f0a:	4699      	mov	r9, r3
 8005f0c:	688a      	ldr	r2, [r1, #8]
 8005f0e:	690b      	ldr	r3, [r1, #16]
 8005f10:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8005f14:	4293      	cmp	r3, r2
 8005f16:	bfb8      	it	lt
 8005f18:	4613      	movlt	r3, r2
 8005f1a:	6033      	str	r3, [r6, #0]
 8005f1c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8005f20:	4607      	mov	r7, r0
 8005f22:	460c      	mov	r4, r1
 8005f24:	b10a      	cbz	r2, 8005f2a <_printf_common+0x26>
 8005f26:	3301      	adds	r3, #1
 8005f28:	6033      	str	r3, [r6, #0]
 8005f2a:	6823      	ldr	r3, [r4, #0]
 8005f2c:	0699      	lsls	r1, r3, #26
 8005f2e:	bf42      	ittt	mi
 8005f30:	6833      	ldrmi	r3, [r6, #0]
 8005f32:	3302      	addmi	r3, #2
 8005f34:	6033      	strmi	r3, [r6, #0]
 8005f36:	6825      	ldr	r5, [r4, #0]
 8005f38:	f015 0506 	ands.w	r5, r5, #6
 8005f3c:	d106      	bne.n	8005f4c <_printf_common+0x48>
 8005f3e:	f104 0a19 	add.w	sl, r4, #25
 8005f42:	68e3      	ldr	r3, [r4, #12]
 8005f44:	6832      	ldr	r2, [r6, #0]
 8005f46:	1a9b      	subs	r3, r3, r2
 8005f48:	42ab      	cmp	r3, r5
 8005f4a:	dc26      	bgt.n	8005f9a <_printf_common+0x96>
 8005f4c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8005f50:	1e13      	subs	r3, r2, #0
 8005f52:	6822      	ldr	r2, [r4, #0]
 8005f54:	bf18      	it	ne
 8005f56:	2301      	movne	r3, #1
 8005f58:	0692      	lsls	r2, r2, #26
 8005f5a:	d42b      	bmi.n	8005fb4 <_printf_common+0xb0>
 8005f5c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8005f60:	4649      	mov	r1, r9
 8005f62:	4638      	mov	r0, r7
 8005f64:	47c0      	blx	r8
 8005f66:	3001      	adds	r0, #1
 8005f68:	d01e      	beq.n	8005fa8 <_printf_common+0xa4>
 8005f6a:	6823      	ldr	r3, [r4, #0]
 8005f6c:	68e5      	ldr	r5, [r4, #12]
 8005f6e:	6832      	ldr	r2, [r6, #0]
 8005f70:	f003 0306 	and.w	r3, r3, #6
 8005f74:	2b04      	cmp	r3, #4
 8005f76:	bf08      	it	eq
 8005f78:	1aad      	subeq	r5, r5, r2
 8005f7a:	68a3      	ldr	r3, [r4, #8]
 8005f7c:	6922      	ldr	r2, [r4, #16]
 8005f7e:	bf0c      	ite	eq
 8005f80:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8005f84:	2500      	movne	r5, #0
 8005f86:	4293      	cmp	r3, r2
 8005f88:	bfc4      	itt	gt
 8005f8a:	1a9b      	subgt	r3, r3, r2
 8005f8c:	18ed      	addgt	r5, r5, r3
 8005f8e:	2600      	movs	r6, #0
 8005f90:	341a      	adds	r4, #26
 8005f92:	42b5      	cmp	r5, r6
 8005f94:	d11a      	bne.n	8005fcc <_printf_common+0xc8>
 8005f96:	2000      	movs	r0, #0
 8005f98:	e008      	b.n	8005fac <_printf_common+0xa8>
 8005f9a:	2301      	movs	r3, #1
 8005f9c:	4652      	mov	r2, sl
 8005f9e:	4649      	mov	r1, r9
 8005fa0:	4638      	mov	r0, r7
 8005fa2:	47c0      	blx	r8
 8005fa4:	3001      	adds	r0, #1
 8005fa6:	d103      	bne.n	8005fb0 <_printf_common+0xac>
 8005fa8:	f04f 30ff 	mov.w	r0, #4294967295
 8005fac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005fb0:	3501      	adds	r5, #1
 8005fb2:	e7c6      	b.n	8005f42 <_printf_common+0x3e>
 8005fb4:	18e1      	adds	r1, r4, r3
 8005fb6:	1c5a      	adds	r2, r3, #1
 8005fb8:	2030      	movs	r0, #48	; 0x30
 8005fba:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8005fbe:	4422      	add	r2, r4
 8005fc0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8005fc4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8005fc8:	3302      	adds	r3, #2
 8005fca:	e7c7      	b.n	8005f5c <_printf_common+0x58>
 8005fcc:	2301      	movs	r3, #1
 8005fce:	4622      	mov	r2, r4
 8005fd0:	4649      	mov	r1, r9
 8005fd2:	4638      	mov	r0, r7
 8005fd4:	47c0      	blx	r8
 8005fd6:	3001      	adds	r0, #1
 8005fd8:	d0e6      	beq.n	8005fa8 <_printf_common+0xa4>
 8005fda:	3601      	adds	r6, #1
 8005fdc:	e7d9      	b.n	8005f92 <_printf_common+0x8e>
	...

08005fe0 <_printf_i>:
 8005fe0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005fe4:	460c      	mov	r4, r1
 8005fe6:	4691      	mov	r9, r2
 8005fe8:	7e27      	ldrb	r7, [r4, #24]
 8005fea:	990c      	ldr	r1, [sp, #48]	; 0x30
 8005fec:	2f78      	cmp	r7, #120	; 0x78
 8005fee:	4680      	mov	r8, r0
 8005ff0:	469a      	mov	sl, r3
 8005ff2:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8005ff6:	d807      	bhi.n	8006008 <_printf_i+0x28>
 8005ff8:	2f62      	cmp	r7, #98	; 0x62
 8005ffa:	d80a      	bhi.n	8006012 <_printf_i+0x32>
 8005ffc:	2f00      	cmp	r7, #0
 8005ffe:	f000 80d8 	beq.w	80061b2 <_printf_i+0x1d2>
 8006002:	2f58      	cmp	r7, #88	; 0x58
 8006004:	f000 80a3 	beq.w	800614e <_printf_i+0x16e>
 8006008:	f104 0642 	add.w	r6, r4, #66	; 0x42
 800600c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8006010:	e03a      	b.n	8006088 <_printf_i+0xa8>
 8006012:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8006016:	2b15      	cmp	r3, #21
 8006018:	d8f6      	bhi.n	8006008 <_printf_i+0x28>
 800601a:	a001      	add	r0, pc, #4	; (adr r0, 8006020 <_printf_i+0x40>)
 800601c:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8006020:	08006079 	.word	0x08006079
 8006024:	0800608d 	.word	0x0800608d
 8006028:	08006009 	.word	0x08006009
 800602c:	08006009 	.word	0x08006009
 8006030:	08006009 	.word	0x08006009
 8006034:	08006009 	.word	0x08006009
 8006038:	0800608d 	.word	0x0800608d
 800603c:	08006009 	.word	0x08006009
 8006040:	08006009 	.word	0x08006009
 8006044:	08006009 	.word	0x08006009
 8006048:	08006009 	.word	0x08006009
 800604c:	08006199 	.word	0x08006199
 8006050:	080060bd 	.word	0x080060bd
 8006054:	0800617b 	.word	0x0800617b
 8006058:	08006009 	.word	0x08006009
 800605c:	08006009 	.word	0x08006009
 8006060:	080061bb 	.word	0x080061bb
 8006064:	08006009 	.word	0x08006009
 8006068:	080060bd 	.word	0x080060bd
 800606c:	08006009 	.word	0x08006009
 8006070:	08006009 	.word	0x08006009
 8006074:	08006183 	.word	0x08006183
 8006078:	680b      	ldr	r3, [r1, #0]
 800607a:	1d1a      	adds	r2, r3, #4
 800607c:	681b      	ldr	r3, [r3, #0]
 800607e:	600a      	str	r2, [r1, #0]
 8006080:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8006084:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8006088:	2301      	movs	r3, #1
 800608a:	e0a3      	b.n	80061d4 <_printf_i+0x1f4>
 800608c:	6825      	ldr	r5, [r4, #0]
 800608e:	6808      	ldr	r0, [r1, #0]
 8006090:	062e      	lsls	r6, r5, #24
 8006092:	f100 0304 	add.w	r3, r0, #4
 8006096:	d50a      	bpl.n	80060ae <_printf_i+0xce>
 8006098:	6805      	ldr	r5, [r0, #0]
 800609a:	600b      	str	r3, [r1, #0]
 800609c:	2d00      	cmp	r5, #0
 800609e:	da03      	bge.n	80060a8 <_printf_i+0xc8>
 80060a0:	232d      	movs	r3, #45	; 0x2d
 80060a2:	426d      	negs	r5, r5
 80060a4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80060a8:	485e      	ldr	r0, [pc, #376]	; (8006224 <_printf_i+0x244>)
 80060aa:	230a      	movs	r3, #10
 80060ac:	e019      	b.n	80060e2 <_printf_i+0x102>
 80060ae:	f015 0f40 	tst.w	r5, #64	; 0x40
 80060b2:	6805      	ldr	r5, [r0, #0]
 80060b4:	600b      	str	r3, [r1, #0]
 80060b6:	bf18      	it	ne
 80060b8:	b22d      	sxthne	r5, r5
 80060ba:	e7ef      	b.n	800609c <_printf_i+0xbc>
 80060bc:	680b      	ldr	r3, [r1, #0]
 80060be:	6825      	ldr	r5, [r4, #0]
 80060c0:	1d18      	adds	r0, r3, #4
 80060c2:	6008      	str	r0, [r1, #0]
 80060c4:	0628      	lsls	r0, r5, #24
 80060c6:	d501      	bpl.n	80060cc <_printf_i+0xec>
 80060c8:	681d      	ldr	r5, [r3, #0]
 80060ca:	e002      	b.n	80060d2 <_printf_i+0xf2>
 80060cc:	0669      	lsls	r1, r5, #25
 80060ce:	d5fb      	bpl.n	80060c8 <_printf_i+0xe8>
 80060d0:	881d      	ldrh	r5, [r3, #0]
 80060d2:	4854      	ldr	r0, [pc, #336]	; (8006224 <_printf_i+0x244>)
 80060d4:	2f6f      	cmp	r7, #111	; 0x6f
 80060d6:	bf0c      	ite	eq
 80060d8:	2308      	moveq	r3, #8
 80060da:	230a      	movne	r3, #10
 80060dc:	2100      	movs	r1, #0
 80060de:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80060e2:	6866      	ldr	r6, [r4, #4]
 80060e4:	60a6      	str	r6, [r4, #8]
 80060e6:	2e00      	cmp	r6, #0
 80060e8:	bfa2      	ittt	ge
 80060ea:	6821      	ldrge	r1, [r4, #0]
 80060ec:	f021 0104 	bicge.w	r1, r1, #4
 80060f0:	6021      	strge	r1, [r4, #0]
 80060f2:	b90d      	cbnz	r5, 80060f8 <_printf_i+0x118>
 80060f4:	2e00      	cmp	r6, #0
 80060f6:	d04d      	beq.n	8006194 <_printf_i+0x1b4>
 80060f8:	4616      	mov	r6, r2
 80060fa:	fbb5 f1f3 	udiv	r1, r5, r3
 80060fe:	fb03 5711 	mls	r7, r3, r1, r5
 8006102:	5dc7      	ldrb	r7, [r0, r7]
 8006104:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8006108:	462f      	mov	r7, r5
 800610a:	42bb      	cmp	r3, r7
 800610c:	460d      	mov	r5, r1
 800610e:	d9f4      	bls.n	80060fa <_printf_i+0x11a>
 8006110:	2b08      	cmp	r3, #8
 8006112:	d10b      	bne.n	800612c <_printf_i+0x14c>
 8006114:	6823      	ldr	r3, [r4, #0]
 8006116:	07df      	lsls	r7, r3, #31
 8006118:	d508      	bpl.n	800612c <_printf_i+0x14c>
 800611a:	6923      	ldr	r3, [r4, #16]
 800611c:	6861      	ldr	r1, [r4, #4]
 800611e:	4299      	cmp	r1, r3
 8006120:	bfde      	ittt	le
 8006122:	2330      	movle	r3, #48	; 0x30
 8006124:	f806 3c01 	strble.w	r3, [r6, #-1]
 8006128:	f106 36ff 	addle.w	r6, r6, #4294967295
 800612c:	1b92      	subs	r2, r2, r6
 800612e:	6122      	str	r2, [r4, #16]
 8006130:	f8cd a000 	str.w	sl, [sp]
 8006134:	464b      	mov	r3, r9
 8006136:	aa03      	add	r2, sp, #12
 8006138:	4621      	mov	r1, r4
 800613a:	4640      	mov	r0, r8
 800613c:	f7ff fee2 	bl	8005f04 <_printf_common>
 8006140:	3001      	adds	r0, #1
 8006142:	d14c      	bne.n	80061de <_printf_i+0x1fe>
 8006144:	f04f 30ff 	mov.w	r0, #4294967295
 8006148:	b004      	add	sp, #16
 800614a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800614e:	4835      	ldr	r0, [pc, #212]	; (8006224 <_printf_i+0x244>)
 8006150:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8006154:	6823      	ldr	r3, [r4, #0]
 8006156:	680e      	ldr	r6, [r1, #0]
 8006158:	061f      	lsls	r7, r3, #24
 800615a:	f856 5b04 	ldr.w	r5, [r6], #4
 800615e:	600e      	str	r6, [r1, #0]
 8006160:	d514      	bpl.n	800618c <_printf_i+0x1ac>
 8006162:	07d9      	lsls	r1, r3, #31
 8006164:	bf44      	itt	mi
 8006166:	f043 0320 	orrmi.w	r3, r3, #32
 800616a:	6023      	strmi	r3, [r4, #0]
 800616c:	b91d      	cbnz	r5, 8006176 <_printf_i+0x196>
 800616e:	6823      	ldr	r3, [r4, #0]
 8006170:	f023 0320 	bic.w	r3, r3, #32
 8006174:	6023      	str	r3, [r4, #0]
 8006176:	2310      	movs	r3, #16
 8006178:	e7b0      	b.n	80060dc <_printf_i+0xfc>
 800617a:	6823      	ldr	r3, [r4, #0]
 800617c:	f043 0320 	orr.w	r3, r3, #32
 8006180:	6023      	str	r3, [r4, #0]
 8006182:	2378      	movs	r3, #120	; 0x78
 8006184:	4828      	ldr	r0, [pc, #160]	; (8006228 <_printf_i+0x248>)
 8006186:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800618a:	e7e3      	b.n	8006154 <_printf_i+0x174>
 800618c:	065e      	lsls	r6, r3, #25
 800618e:	bf48      	it	mi
 8006190:	b2ad      	uxthmi	r5, r5
 8006192:	e7e6      	b.n	8006162 <_printf_i+0x182>
 8006194:	4616      	mov	r6, r2
 8006196:	e7bb      	b.n	8006110 <_printf_i+0x130>
 8006198:	680b      	ldr	r3, [r1, #0]
 800619a:	6826      	ldr	r6, [r4, #0]
 800619c:	6960      	ldr	r0, [r4, #20]
 800619e:	1d1d      	adds	r5, r3, #4
 80061a0:	600d      	str	r5, [r1, #0]
 80061a2:	0635      	lsls	r5, r6, #24
 80061a4:	681b      	ldr	r3, [r3, #0]
 80061a6:	d501      	bpl.n	80061ac <_printf_i+0x1cc>
 80061a8:	6018      	str	r0, [r3, #0]
 80061aa:	e002      	b.n	80061b2 <_printf_i+0x1d2>
 80061ac:	0671      	lsls	r1, r6, #25
 80061ae:	d5fb      	bpl.n	80061a8 <_printf_i+0x1c8>
 80061b0:	8018      	strh	r0, [r3, #0]
 80061b2:	2300      	movs	r3, #0
 80061b4:	6123      	str	r3, [r4, #16]
 80061b6:	4616      	mov	r6, r2
 80061b8:	e7ba      	b.n	8006130 <_printf_i+0x150>
 80061ba:	680b      	ldr	r3, [r1, #0]
 80061bc:	1d1a      	adds	r2, r3, #4
 80061be:	600a      	str	r2, [r1, #0]
 80061c0:	681e      	ldr	r6, [r3, #0]
 80061c2:	6862      	ldr	r2, [r4, #4]
 80061c4:	2100      	movs	r1, #0
 80061c6:	4630      	mov	r0, r6
 80061c8:	f7fa f812 	bl	80001f0 <memchr>
 80061cc:	b108      	cbz	r0, 80061d2 <_printf_i+0x1f2>
 80061ce:	1b80      	subs	r0, r0, r6
 80061d0:	6060      	str	r0, [r4, #4]
 80061d2:	6863      	ldr	r3, [r4, #4]
 80061d4:	6123      	str	r3, [r4, #16]
 80061d6:	2300      	movs	r3, #0
 80061d8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80061dc:	e7a8      	b.n	8006130 <_printf_i+0x150>
 80061de:	6923      	ldr	r3, [r4, #16]
 80061e0:	4632      	mov	r2, r6
 80061e2:	4649      	mov	r1, r9
 80061e4:	4640      	mov	r0, r8
 80061e6:	47d0      	blx	sl
 80061e8:	3001      	adds	r0, #1
 80061ea:	d0ab      	beq.n	8006144 <_printf_i+0x164>
 80061ec:	6823      	ldr	r3, [r4, #0]
 80061ee:	079b      	lsls	r3, r3, #30
 80061f0:	d413      	bmi.n	800621a <_printf_i+0x23a>
 80061f2:	68e0      	ldr	r0, [r4, #12]
 80061f4:	9b03      	ldr	r3, [sp, #12]
 80061f6:	4298      	cmp	r0, r3
 80061f8:	bfb8      	it	lt
 80061fa:	4618      	movlt	r0, r3
 80061fc:	e7a4      	b.n	8006148 <_printf_i+0x168>
 80061fe:	2301      	movs	r3, #1
 8006200:	4632      	mov	r2, r6
 8006202:	4649      	mov	r1, r9
 8006204:	4640      	mov	r0, r8
 8006206:	47d0      	blx	sl
 8006208:	3001      	adds	r0, #1
 800620a:	d09b      	beq.n	8006144 <_printf_i+0x164>
 800620c:	3501      	adds	r5, #1
 800620e:	68e3      	ldr	r3, [r4, #12]
 8006210:	9903      	ldr	r1, [sp, #12]
 8006212:	1a5b      	subs	r3, r3, r1
 8006214:	42ab      	cmp	r3, r5
 8006216:	dcf2      	bgt.n	80061fe <_printf_i+0x21e>
 8006218:	e7eb      	b.n	80061f2 <_printf_i+0x212>
 800621a:	2500      	movs	r5, #0
 800621c:	f104 0619 	add.w	r6, r4, #25
 8006220:	e7f5      	b.n	800620e <_printf_i+0x22e>
 8006222:	bf00      	nop
 8006224:	08006805 	.word	0x08006805
 8006228:	08006816 	.word	0x08006816

0800622c <_read_r>:
 800622c:	b538      	push	{r3, r4, r5, lr}
 800622e:	4d07      	ldr	r5, [pc, #28]	; (800624c <_read_r+0x20>)
 8006230:	4604      	mov	r4, r0
 8006232:	4608      	mov	r0, r1
 8006234:	4611      	mov	r1, r2
 8006236:	2200      	movs	r2, #0
 8006238:	602a      	str	r2, [r5, #0]
 800623a:	461a      	mov	r2, r3
 800623c:	f7fa f8c6 	bl	80003cc <_read>
 8006240:	1c43      	adds	r3, r0, #1
 8006242:	d102      	bne.n	800624a <_read_r+0x1e>
 8006244:	682b      	ldr	r3, [r5, #0]
 8006246:	b103      	cbz	r3, 800624a <_read_r+0x1e>
 8006248:	6023      	str	r3, [r4, #0]
 800624a:	bd38      	pop	{r3, r4, r5, pc}
 800624c:	2000025c 	.word	0x2000025c

08006250 <_fstat_r>:
 8006250:	b538      	push	{r3, r4, r5, lr}
 8006252:	4d07      	ldr	r5, [pc, #28]	; (8006270 <_fstat_r+0x20>)
 8006254:	2300      	movs	r3, #0
 8006256:	4604      	mov	r4, r0
 8006258:	4608      	mov	r0, r1
 800625a:	4611      	mov	r1, r2
 800625c:	602b      	str	r3, [r5, #0]
 800625e:	f7fb fbb1 	bl	80019c4 <_fstat>
 8006262:	1c43      	adds	r3, r0, #1
 8006264:	d102      	bne.n	800626c <_fstat_r+0x1c>
 8006266:	682b      	ldr	r3, [r5, #0]
 8006268:	b103      	cbz	r3, 800626c <_fstat_r+0x1c>
 800626a:	6023      	str	r3, [r4, #0]
 800626c:	bd38      	pop	{r3, r4, r5, pc}
 800626e:	bf00      	nop
 8006270:	2000025c 	.word	0x2000025c

08006274 <_isatty_r>:
 8006274:	b538      	push	{r3, r4, r5, lr}
 8006276:	4d06      	ldr	r5, [pc, #24]	; (8006290 <_isatty_r+0x1c>)
 8006278:	2300      	movs	r3, #0
 800627a:	4604      	mov	r4, r0
 800627c:	4608      	mov	r0, r1
 800627e:	602b      	str	r3, [r5, #0]
 8006280:	f7fb fbb0 	bl	80019e4 <_isatty>
 8006284:	1c43      	adds	r3, r0, #1
 8006286:	d102      	bne.n	800628e <_isatty_r+0x1a>
 8006288:	682b      	ldr	r3, [r5, #0]
 800628a:	b103      	cbz	r3, 800628e <_isatty_r+0x1a>
 800628c:	6023      	str	r3, [r4, #0]
 800628e:	bd38      	pop	{r3, r4, r5, pc}
 8006290:	2000025c 	.word	0x2000025c

08006294 <_init>:
 8006294:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006296:	bf00      	nop
 8006298:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800629a:	bc08      	pop	{r3}
 800629c:	469e      	mov	lr, r3
 800629e:	4770      	bx	lr

080062a0 <_fini>:
 80062a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80062a2:	bf00      	nop
 80062a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80062a6:	bc08      	pop	{r3}
 80062a8:	469e      	mov	lr, r3
 80062aa:	4770      	bx	lr
